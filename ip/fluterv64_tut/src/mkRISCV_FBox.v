//
// Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
//
// On Wed Jan  9 19:19:31 EST 2019
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_opcode                     I     7 reg
// req_f7                         I     7 reg
// req_rm                         I     3 reg
// req_rs2                        I     5 reg
// req_v1                         I    64 reg
// req_v2                         I    64 reg
// req_v3                         I    64 reg
// EN_set_verbosity               I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkRISCV_FBox(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    req_opcode,
		    req_f7,
		    req_rm,
		    req_rs2,
		    req_v1,
		    req_v2,
		    req_v3,
		    EN_req,

		    valid,

		    word_fst,

		    word_snd);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_set_verbosity, valid;

  // inlined wires
  reg [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$request_put;
  wire [69 : 0] fpu$response_get;
  wire fpu$EN_request_put,
       fpu$EN_response_get,
       fpu$RDY_request_put,
       fpu$RDY_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_L,
       CAN_FIRE_RL_doFCVT_D_LU,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_LU_D,
       CAN_FIRE_RL_doFCVT_LU_S,
       CAN_FIRE_RL_doFCVT_L_D,
       CAN_FIRE_RL_doFCVT_L_S,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_L,
       CAN_FIRE_RL_doFCVT_S_LU,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_req,
       CAN_FIRE_set_verbosity,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_L,
       WILL_FIRE_RL_doFCVT_D_LU,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_LU_D,
       WILL_FIRE_RL_doFCVT_LU_S,
       WILL_FIRE_RL_doFCVT_L_D,
       WILL_FIRE_RL_doFCVT_L_S,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_L,
       WILL_FIRE_RL_doFCVT_S_LU,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_req,
       WILL_FIRE_set_verbosity;

  // inputs to muxes for submodule ports
  wire [201 : 0] MUX_fpu$request_put_1__VAL_1,
		 MUX_fpu$request_put_1__VAL_10,
		 MUX_fpu$request_put_1__VAL_11,
		 MUX_fpu$request_put_1__VAL_12,
		 MUX_fpu$request_put_1__VAL_13,
		 MUX_fpu$request_put_1__VAL_14,
		 MUX_fpu$request_put_1__VAL_2,
		 MUX_fpu$request_put_1__VAL_3,
		 MUX_fpu$request_put_1__VAL_4,
		 MUX_fpu$request_put_1__VAL_5,
		 MUX_fpu$request_put_1__VAL_6,
		 MUX_fpu$request_put_1__VAL_7,
		 MUX_fpu$request_put_1__VAL_8,
		 MUX_fpu$request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_2,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_35,
		MUX_resultR$write_1__VAL_36,
		MUX_resultR$write_1__VAL_37,
		MUX_resultR$write_1__VAL_38,
		MUX_resultR$write_1__VAL_39,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_40,
		MUX_resultR$write_1__VAL_41,
		MUX_resultR$write_1__VAL_42,
		MUX_resultR$write_1__VAL_6,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1,
		MUX_dw_result$wset_1__VAL_10,
		MUX_dw_result$wset_1__VAL_11,
		MUX_dw_result$wset_1__VAL_12,
		MUX_dw_result$wset_1__VAL_13,
		MUX_dw_result$wset_1__VAL_14,
		MUX_dw_result$wset_1__VAL_15,
		MUX_dw_result$wset_1__VAL_16,
		MUX_dw_result$wset_1__VAL_17,
		MUX_dw_result$wset_1__VAL_18,
		MUX_dw_result$wset_1__VAL_19,
		MUX_dw_result$wset_1__VAL_2,
		MUX_dw_result$wset_1__VAL_20,
		MUX_dw_result$wset_1__VAL_21,
		MUX_dw_result$wset_1__VAL_22,
		MUX_dw_result$wset_1__VAL_23,
		MUX_dw_result$wset_1__VAL_24,
		MUX_dw_result$wset_1__VAL_25,
		MUX_dw_result$wset_1__VAL_26,
		MUX_dw_result$wset_1__VAL_27,
		MUX_dw_result$wset_1__VAL_28,
		MUX_dw_result$wset_1__VAL_29,
		MUX_dw_result$wset_1__VAL_3,
		MUX_dw_result$wset_1__VAL_30,
		MUX_dw_result$wset_1__VAL_31,
		MUX_dw_result$wset_1__VAL_32,
		MUX_dw_result$wset_1__VAL_33,
		MUX_dw_result$wset_1__VAL_34,
		MUX_dw_result$wset_1__VAL_35,
		MUX_dw_result$wset_1__VAL_36,
		MUX_dw_result$wset_1__VAL_37,
		MUX_dw_result$wset_1__VAL_38,
		MUX_dw_result$wset_1__VAL_39,
		MUX_dw_result$wset_1__VAL_4,
		MUX_dw_result$wset_1__VAL_40,
		MUX_dw_result$wset_1__VAL_5,
		MUX_dw_result$wset_1__VAL_6,
		MUX_dw_result$wset_1__VAL_7,
		MUX_dw_result$wset_1__VAL_8,
		MUX_dw_result$wset_1__VAL_9;
  wire MUX_dw_result$wset_1__SEL_1,
       MUX_dw_result$wset_1__SEL_2,
       MUX_dw_result$wset_1__SEL_38;

  // remaining internal signals
  reg [51 : 0] CASE_guard0307_0b0_sfd___39609_BITS_53_TO_2_0b_ETC__q54,
	       CASE_guard2827_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71,
	       CASE_guard3515_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73,
	       CASE_guard3725_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79,
	       CASE_guard4412_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78,
	       CASE_guard59207_0b0_theResult___snd67119_BITS__ETC__q126,
	       CASE_guard68443_0b0_sfdin76663_BITS_56_TO_5_0b_ETC__q128,
	       CASE_guard77468_0b0_theResult___snd85404_BITS__ETC__q130,
	       CASE_guard9201_0b0_sfd___39191_BITS_54_TO_3_0b_ETC__q64,
	       CASE_guard9619_0b0_sfd___39609_BITS_54_TO_3_0b_ETC__q56,
	       CASE_guard9888_0b0_sfd___39191_BITS_53_TO_2_0b_ETC__q62,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q55,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q57,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin76663_B_ETC__q129,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2427,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2439,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2889,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2901;
  reg [22 : 0] CASE_guard10003_0b0_sfdin18094_BITS_56_TO_34_0_ETC__q100,
	       CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14,
	       CASE_guard18696_0b0_theResult___snd26695_BITS__ETC__q102,
	       CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12,
	       CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q26,
	       CASE_guard27613_0b0_sfdin35833_BITS_56_TO_34_0_ETC__q104,
	       CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24,
	       CASE_guard36435_0b0_theResult___snd44458_BITS__ETC__q106,
	       CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43,
	       CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42,
	       CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31,
	       CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32,
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin18094_B_ETC__q101,
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin35833_B_ETC__q105,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981;
  reg [10 : 0] CASE_guard0307_0b0_x0322_BITS_10_TO_0_0b1_x032_ETC__q52,
	       CASE_guard2827_0b0_0_0b1_0_0b10_out_exp3443_0b_ETC__q75,
	       CASE_guard3515_0b0_x3530_BITS_10_TO_0_0b1_x353_ETC__q69,
	       CASE_guard3725_0b0_0_0b1_0_0b10_out_exp4341_0b_ETC__q76,
	       CASE_guard4412_0b0_x4427_BITS_10_TO_0_0b1_x442_ETC__q77,
	       CASE_guard59207_0b0_theResult___fst_exp67168_0_ETC__q120,
	       CASE_guard68443_0b0_theResult___fst_exp76669_0_ETC__q122,
	       CASE_guard77468_0b0_theResult___fst_exp85458_0_ETC__q124,
	       CASE_guard9201_0b0_0_0b1_0_0b10_out_exp9817_0b_ETC__q61,
	       CASE_guard9619_0b0_0_0b1_0_0b10_out_exp0235_0b_ETC__q58,
	       CASE_guard9888_0b0_x9903_BITS_10_TO_0_0b1_x990_ETC__q63,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q121,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q123,
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125,
	       CASE_requestR_BITS_194_TO_192_0x1_x0322_BITS_1_ETC__q53,
	       CASE_requestR_BITS_194_TO_192_0x1_x3530_BITS_1_ETC__q70,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2211,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2408,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2703,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2869;
  reg [7 : 0] CASE_guard10003_0b0_theResult___fst_exp18100_0_ETC__q92,
	      CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18,
	      CASE_guard18696_0b0_theResult___fst_exp26744_0_ETC__q94,
	      CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10,
	      CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25,
	      CASE_guard27613_0b0_theResult___fst_exp35839_0_ETC__q96,
	      CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23,
	      CASE_guard36435_0b0_theResult___fst_exp44512_0_ETC__q98,
	      CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40,
	      CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41,
	      CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37,
	      CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q95,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q97,
	      CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99,
	      CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11,
	      CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462,
	      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949;
  reg [2 : 0] IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38;
  reg CASE_guard0307_0b0_requestR_BIT_159_0b1_reques_ETC__q51,
      CASE_guard10003_0b0_requestR_BIT_191_0b1_reque_ETC__q108,
      CASE_guard1843_0b0_requestR_BIT_191_0b1_reques_ETC__q16,
      CASE_guard18696_0b0_requestR_BIT_191_0b1_reque_ETC__q109,
      CASE_guard2331_0b0_requestR_BIT_191_0b1_reques_ETC__q17,
      CASE_guard27613_0b0_requestR_BIT_191_0b1_reque_ETC__q110,
      CASE_guard2827_0b0_requestR_BIT_191_0b1_reques_ETC__q67,
      CASE_guard3515_0b0_requestR_BIT_191_0b1_reques_ETC__q68,
      CASE_guard36435_0b0_requestR_BIT_191_0b1_reque_ETC__q111,
      CASE_guard59207_0b0_requestR_BITS_191_TO_160_E_ETC__q132,
      CASE_guard68443_0b0_requestR_BITS_191_TO_160_E_ETC__q133,
      CASE_guard77468_0b0_requestR_BITS_191_TO_160_E_ETC__q134,
      CASE_guard8664_0b0_requestR_BIT_159_0b1_reques_ETC__q35,
      CASE_guard9149_0b0_requestR_BIT_159_0b1_reques_ETC__q36,
      CASE_guard9619_0b0_requestR_BIT_159_0b1_reques_ETC__q50,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417,
      IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4309;
  wire [117 : 0] IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939,
		 b__h95709,
		 x__h96606,
		 x__h97850;
  wire [88 : 0] IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605,
		b__h36303,
		x__h37200,
		x__h38461;
  wire [85 : 0] IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491,
		b__h71188,
		x__h71861,
		x__h72884;
  wire [68 : 0] ab__h204197;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
		_theResult_____2__h36241,
		_theResult_____2__h95647,
		out1___1__h36954,
		out1___1__h96360;
  wire [63 : 0] IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1951,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1967,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1664,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1950,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1952,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1966,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1968,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2038,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2039,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1660,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1662,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1722,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2994,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2996,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d3049,
		IF_requestR_BITS_126_TO_116_903_EQ_2047_904_AN_ETC___d4951,
		IF_requestR_BITS_190_TO_180_472_EQ_0_480_AND_r_ETC___d4965,
		IF_requestR_BITS_190_TO_180_472_EQ_0_480_AND_r_ETC___d5036,
		IF_requestR_BITS_190_TO_180_472_EQ_2047_473_AN_ETC___d2998,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1593,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1724,
		IF_requestR_BIT_191_25_OR_requestR_BITS_190_TO_ETC___d3051,
		IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2935,
		res___1__h203106,
		res___1__h203544,
		res___1__h203554,
		res___1__h203573,
		res___1__h50068,
		res___1__h50304,
		res___1__h50314,
		res___1__h50333,
		res__h190814,
		res__h195362,
		res__h198066,
		res__h200761,
		res__h202638,
		res__h203589,
		res__h203770,
		res__h41672,
		res__h41909,
		res__h47281,
		res__h48764,
		res__h49833,
		res__h50349,
		sfd___3__h11833,
		sfd___3__h22341,
		sfd__h2228,
		x__h13255,
		x__h146350,
		x__h1779,
		x__h187397,
		x__h191945,
		x__h1925,
		x__h196389,
		x__h199084,
		x__h200961,
		x__h203088,
		x__h203738,
		x__h2059,
		x__h2207,
		x__h23729,
		x__h30070,
		x__h36098,
		x__h38083,
		x__h38773,
		x__h40296,
		x__h40994,
		x__h43628,
		x__h46153,
		x__h46274,
		x__h46412,
		x__h47895,
		x__h48964,
		x__h50050,
		x__h51217,
		x__h51339,
		x__h51463,
		x__h51593,
		x__h61427,
		x__h70980,
		x__h72503,
		x__h73197,
		x__h84635,
		x__h95504,
		x__h97472,
		x__h98162;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q82,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q115,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q87,
		IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q112,
		IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q118,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_ETC__q84,
		IF_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_ETC__q90,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753,
		_0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d4319,
		_0b0_CONCAT_NOT_requestR_BITS_190_TO_180_472_EQ_ETC___d3504,
		_theResult____h109993,
		_theResult____h127603,
		_theResult____h168433,
		_theResult___snd__h118111,
		_theResult___snd__h118122,
		_theResult___snd__h118124,
		_theResult___snd__h118134,
		_theResult___snd__h118140,
		_theResult___snd__h118163,
		_theResult___snd__h126695,
		_theResult___snd__h126697,
		_theResult___snd__h126704,
		_theResult___snd__h126710,
		_theResult___snd__h126733,
		_theResult___snd__h135850,
		_theResult___snd__h135861,
		_theResult___snd__h135863,
		_theResult___snd__h135873,
		_theResult___snd__h135879,
		_theResult___snd__h135902,
		_theResult___snd__h144458,
		_theResult___snd__h144472,
		_theResult___snd__h144478,
		_theResult___snd__h144496,
		_theResult___snd__h167119,
		_theResult___snd__h167121,
		_theResult___snd__h167128,
		_theResult___snd__h167134,
		_theResult___snd__h167157,
		_theResult___snd__h176680,
		_theResult___snd__h176691,
		_theResult___snd__h176693,
		_theResult___snd__h176703,
		_theResult___snd__h176709,
		_theResult___snd__h176732,
		_theResult___snd__h185404,
		_theResult___snd__h185418,
		_theResult___snd__h185424,
		_theResult___snd__h185442,
		b__h38981,
		result__h128216,
		result__h169046,
		sfd__h102393,
		sfdin__h118094,
		sfdin__h135833,
		sfdin__h176663,
		x__h128311,
		x__h169141,
		x__h39654,
		x__h40677;
  wire [54 : 0] sfd___3__h59609, sfd___3__h69191, sfd__h51608, sfd__h61439;
  wire [53 : 0] sfd__h167186,
		sfd__h176761,
		sfd__h185477,
		sfd__h59636,
		sfd__h60337,
		sfd__h69218,
		sfd__h69918,
		sfd__h82844,
		sfd__h83545,
		sfd__h93742,
		sfd__h94442,
		value__h71190;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4781,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4783,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4757,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4759,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4797,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4799,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2252,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2254,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2267,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2269,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2744,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2746,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2759,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2761,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4809,
		IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2276,
		IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2443,
		_theResult___fst_sfd__h152120,
		_theResult___fst_sfd__h167880,
		_theResult___fst_sfd__h167883,
		_theResult___fst_sfd__h177455,
		_theResult___fst_sfd__h177458,
		_theResult___fst_sfd__h186195,
		_theResult___fst_sfd__h186198,
		_theResult___fst_sfd__h186207,
		_theResult___fst_sfd__h186213,
		_theResult___fst_sfd__h60291,
		_theResult___fst_sfd__h61005,
		_theResult___fst_sfd__h61008,
		_theResult___fst_sfd__h69872,
		_theResult___fst_sfd__h70585,
		_theResult___fst_sfd__h70588,
		_theResult___fst_sfd__h83499,
		_theResult___fst_sfd__h84213,
		_theResult___fst_sfd__h84216,
		_theResult___fst_sfd__h94396,
		_theResult___fst_sfd__h95109,
		_theResult___fst_sfd__h95112,
		_theResult___fst_sfd__h98689,
		_theResult___sfd__h167821,
		_theResult___sfd__h177396,
		_theResult___sfd__h186136,
		_theResult___sfd__h60233,
		_theResult___sfd__h60947,
		_theResult___sfd__h69815,
		_theResult___sfd__h70528,
		_theResult___sfd__h83441,
		_theResult___sfd__h84155,
		_theResult___sfd__h94339,
		_theResult___sfd__h95052,
		_theResult___snd_fst_sfd__h148296,
		_theResult___snd_fst_sfd__h167886,
		_theResult___snd_fst_sfd__h186201,
		_theResult___snd_fst_sfd__h61011,
		_theResult___snd_fst_sfd__h70591,
		_theResult___snd_fst_sfd__h84219,
		_theResult___snd_fst_sfd__h95115,
		out___1_sfd__h146410,
		out_sfd__h167824,
		out_sfd__h177399,
		out_sfd__h186139,
		out_sfd__h60236,
		out_sfd__h60950,
		out_sfd__h69818,
		out_sfd__h70531,
		out_sfd__h83444,
		out_sfd__h84158,
		out_sfd__h94342,
		out_sfd__h95055,
		value__h98232;
  wire [32 : 0] _theResult_____2__h38919,
		_theResult_____2__h71126,
		out1___1__h39408,
		out1___1__h71615;
  wire [31 : 0] IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1947,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1961,
		IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1963,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1812,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1948,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1964,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1808,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1810,
		IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1864,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2546,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2548,
		IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2609,
		IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1945,
		IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1960,
		IF_requestR_BITS_190_TO_180_472_EQ_2047_473_AN_ETC___d2550,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1749,
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1866,
		IF_requestR_BIT_191_25_OR_requestR_BITS_190_TO_ETC___d2611,
		IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2479,
		requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h28654,
		sfd___3__h34711,
		sfd__h23750,
		x__h1785,
		x__h1931,
		x__h2065,
		x__h2213,
		x__h23735,
		x__h38776,
		x__h40299,
		x__h70983,
		x__h72506,
		x__h98168;
  wire [30 : 0] IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19;
  wire [24 : 0] sfd__h118192,
		sfd__h11860,
		sfd__h12361,
		sfd__h126762,
		sfd__h135931,
		sfd__h144531,
		sfd__h22368,
		sfd__h22865,
		sfd__h28681,
		sfd__h29179,
		sfd__h34738,
		sfd__h35235,
		value__h36305;
  wire [23 : 0] NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484,
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2516,
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2517,
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2582,
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2964,
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2965,
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3022;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3969,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3971,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4009,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4011,
		IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3985,
		IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3987,
		IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d4025,
		IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d4027,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1324,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1326,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1339,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1341,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d503,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d505,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d518,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d520,
		_theResult___fst_sfd__h109976,
		_theResult___fst_sfd__h118683,
		_theResult___fst_sfd__h118686,
		_theResult___fst_sfd__h12315,
		_theResult___fst_sfd__h127253,
		_theResult___fst_sfd__h127256,
		_theResult___fst_sfd__h12826,
		_theResult___fst_sfd__h12829,
		_theResult___fst_sfd__h136422,
		_theResult___fst_sfd__h136425,
		_theResult___fst_sfd__h145046,
		_theResult___fst_sfd__h145049,
		_theResult___fst_sfd__h145058,
		_theResult___fst_sfd__h145064,
		_theResult___fst_sfd__h146668,
		_theResult___fst_sfd__h22819,
		_theResult___fst_sfd__h23329,
		_theResult___fst_sfd__h23332,
		_theResult___fst_sfd__h29133,
		_theResult___fst_sfd__h29644,
		_theResult___fst_sfd__h29647,
		_theResult___fst_sfd__h35189,
		_theResult___fst_sfd__h35699,
		_theResult___fst_sfd__h35702,
		_theResult___sfd__h118624,
		_theResult___sfd__h12257,
		_theResult___sfd__h127194,
		_theResult___sfd__h12768,
		_theResult___sfd__h136363,
		_theResult___sfd__h144987,
		_theResult___sfd__h22762,
		_theResult___sfd__h23272,
		_theResult___sfd__h29075,
		_theResult___sfd__h29586,
		_theResult___sfd__h35132,
		_theResult___sfd__h35642,
		_theResult___snd_fst_sfd__h102347,
		_theResult___snd_fst_sfd__h127259,
		_theResult___snd_fst_sfd__h12832,
		_theResult___snd_fst_sfd__h145052,
		_theResult___snd_fst_sfd__h23335,
		_theResult___snd_fst_sfd__h29650,
		_theResult___snd_fst_sfd__h35705,
		out_sfd__h118627,
		out_sfd__h12260,
		out_sfd__h127197,
		out_sfd__h12771,
		out_sfd__h136366,
		out_sfd__h144990,
		out_sfd__h22765,
		out_sfd__h23275,
		out_sfd__h29078,
		out_sfd__h29589,
		out_sfd__h35135,
		out_sfd__h35645,
		sV1_sfd__h824,
		sV2_sfd__h927,
		value__h146413;
  wire [19 : 0] NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1630,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1631,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1695,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1778,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1779,
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1837;
  wire [11 : 0] IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4607,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4312,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q114,
		SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_482___d3497,
		SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q86,
		_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3132,
		_3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4315,
		_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2144,
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2337,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4200,
		_3970_MINUS_SEXT_requestR_BITS_190_TO_180_472_M_ETC___d3500,
		_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2637,
		_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2800,
		x__h128344,
		x__h169174,
		x__h60322,
		x__h69903,
		x__h83530,
		x__h94427;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4702,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4704,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4666,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4668,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4730,
		IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4732,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2209,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2232,
		IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2234,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2701,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2724,
		IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2726,
		IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d2735,
		IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2370,
		IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2831,
		SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q117,
		_theResult___exp__h167820,
		_theResult___exp__h177395,
		_theResult___exp__h186135,
		_theResult___exp__h60232,
		_theResult___exp__h60946,
		_theResult___exp__h69814,
		_theResult___exp__h70527,
		_theResult___exp__h83440,
		_theResult___exp__h84154,
		_theResult___exp__h94338,
		_theResult___exp__h95051,
		_theResult___fst_exp__h152119,
		_theResult___fst_exp__h167159,
		_theResult___fst_exp__h167165,
		_theResult___fst_exp__h167168,
		_theResult___fst_exp__h167879,
		_theResult___fst_exp__h167882,
		_theResult___fst_exp__h176669,
		_theResult___fst_exp__h176734,
		_theResult___fst_exp__h176740,
		_theResult___fst_exp__h176743,
		_theResult___fst_exp__h177454,
		_theResult___fst_exp__h177457,
		_theResult___fst_exp__h185410,
		_theResult___fst_exp__h185449,
		_theResult___fst_exp__h185455,
		_theResult___fst_exp__h185458,
		_theResult___fst_exp__h186194,
		_theResult___fst_exp__h186197,
		_theResult___fst_exp__h186206,
		_theResult___fst_exp__h186209,
		_theResult___fst_exp__h60290,
		_theResult___fst_exp__h61004,
		_theResult___fst_exp__h61007,
		_theResult___fst_exp__h69871,
		_theResult___fst_exp__h70584,
		_theResult___fst_exp__h70587,
		_theResult___fst_exp__h83498,
		_theResult___fst_exp__h84212,
		_theResult___fst_exp__h84215,
		_theResult___fst_exp__h94395,
		_theResult___fst_exp__h95108,
		_theResult___fst_exp__h95111,
		_theResult___snd_fst_exp__h167885,
		_theResult___snd_fst_exp__h186200,
		_theResult___snd_fst_exp__h61010,
		_theResult___snd_fst_exp__h61013,
		_theResult___snd_fst_exp__h61016,
		_theResult___snd_fst_exp__h70590,
		_theResult___snd_fst_exp__h70593,
		_theResult___snd_fst_exp__h70596,
		_theResult___snd_fst_exp__h84218,
		_theResult___snd_fst_exp__h84221,
		_theResult___snd_fst_exp__h84224,
		_theResult___snd_fst_exp__h95114,
		_theResult___snd_fst_exp__h95117,
		_theResult___snd_fst_exp__h95120,
		din_inc___2_exp__h186241,
		din_inc___2_exp__h186270,
		din_inc___2_exp__h186291,
		din_inc___2_exp__h61045,
		din_inc___2_exp__h70621,
		din_inc___2_exp__h84253,
		din_inc___2_exp__h95145,
		out_exp__h167823,
		out_exp__h177398,
		out_exp__h186138,
		out_exp__h60235,
		out_exp__h60949,
		out_exp__h69817,
		out_exp__h70530,
		out_exp__h83443,
		out_exp__h84157,
		out_exp__h94341,
		out_exp__h95054,
		requestR_BITS_190_TO_180_472_MINUS_1023___d2482;
  wire [8 : 0] IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d3790,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213,
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446,
	       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385,
	       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878,
	       x__h12346,
	       x__h22850,
	       x__h29164,
	       x__h35220;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3849,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3851,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3913,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3915,
	       IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3877,
	       IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3879,
	       IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3941,
	       IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3943,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1281,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1304,
	       IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306,
	       IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d460,
	       IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d483,
	       IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d485,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1315,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1522,
	       IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d494,
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d910,
	       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q89,
	       _theResult___exp__h118623,
	       _theResult___exp__h12256,
	       _theResult___exp__h127193,
	       _theResult___exp__h12767,
	       _theResult___exp__h136362,
	       _theResult___exp__h144986,
	       _theResult___exp__h22761,
	       _theResult___exp__h23271,
	       _theResult___exp__h29074,
	       _theResult___exp__h29585,
	       _theResult___exp__h35131,
	       _theResult___exp__h35641,
	       _theResult___fst_exp__h109975,
	       _theResult___fst_exp__h118100,
	       _theResult___fst_exp__h118165,
	       _theResult___fst_exp__h118171,
	       _theResult___fst_exp__h118174,
	       _theResult___fst_exp__h118682,
	       _theResult___fst_exp__h118685,
	       _theResult___fst_exp__h12314,
	       _theResult___fst_exp__h126735,
	       _theResult___fst_exp__h126741,
	       _theResult___fst_exp__h126744,
	       _theResult___fst_exp__h127252,
	       _theResult___fst_exp__h127255,
	       _theResult___fst_exp__h12825,
	       _theResult___fst_exp__h12828,
	       _theResult___fst_exp__h135839,
	       _theResult___fst_exp__h135904,
	       _theResult___fst_exp__h135910,
	       _theResult___fst_exp__h135913,
	       _theResult___fst_exp__h136421,
	       _theResult___fst_exp__h136424,
	       _theResult___fst_exp__h144464,
	       _theResult___fst_exp__h144503,
	       _theResult___fst_exp__h144509,
	       _theResult___fst_exp__h144512,
	       _theResult___fst_exp__h145045,
	       _theResult___fst_exp__h145048,
	       _theResult___fst_exp__h145057,
	       _theResult___fst_exp__h145060,
	       _theResult___fst_exp__h22818,
	       _theResult___fst_exp__h23328,
	       _theResult___fst_exp__h23331,
	       _theResult___fst_exp__h29132,
	       _theResult___fst_exp__h29643,
	       _theResult___fst_exp__h29646,
	       _theResult___fst_exp__h35188,
	       _theResult___fst_exp__h35698,
	       _theResult___fst_exp__h35701,
	       _theResult___snd_fst_exp__h127258,
	       _theResult___snd_fst_exp__h12831,
	       _theResult___snd_fst_exp__h12834,
	       _theResult___snd_fst_exp__h12837,
	       _theResult___snd_fst_exp__h145051,
	       _theResult___snd_fst_exp__h23334,
	       _theResult___snd_fst_exp__h23337,
	       _theResult___snd_fst_exp__h23340,
	       _theResult___snd_fst_exp__h29649,
	       _theResult___snd_fst_exp__h29652,
	       _theResult___snd_fst_exp__h29655,
	       _theResult___snd_fst_exp__h35704,
	       _theResult___snd_fst_exp__h35707,
	       _theResult___snd_fst_exp__h35710,
	       din_inc___2_exp__h12866,
	       din_inc___2_exp__h145082,
	       din_inc___2_exp__h145103,
	       din_inc___2_exp__h145132,
	       din_inc___2_exp__h145153,
	       din_inc___2_exp__h23365,
	       din_inc___2_exp__h29684,
	       din_inc___2_exp__h35735,
	       out_exp__h118626,
	       out_exp__h12259,
	       out_exp__h127196,
	       out_exp__h12770,
	       out_exp__h136365,
	       out_exp__h144989,
	       out_exp__h22764,
	       out_exp__h23274,
	       out_exp__h29077,
	       out_exp__h29588,
	       out_exp__h35134,
	       out_exp__h35644,
	       sV1_exp__h823,
	       sV2_exp__h926;
  wire [6 : 0] IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382,
	       IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3366,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4561,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3744,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4273,
	       IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1210,
	       IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d2141,
	       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3460,
	       IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1443,
	       IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d2334;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4053,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4839,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4082,
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4822,
	       _0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d4065,
	       x__h12967,
	       x__h145368,
	       x__h186474,
	       x__h190946,
	       x__h200780,
	       x__h23444,
	       x__h29785,
	       x__h35814,
	       x__h37828,
	       x__h38538,
	       x__h40041,
	       x__h40754,
	       x__h43033,
	       x__h48783,
	       x__h61142,
	       x__h70696,
	       x__h72248,
	       x__h72961,
	       x__h84350,
	       x__h95220,
	       x__h97217,
	       x__h97927;
  wire [1 : 0] IF_sfd___31833_BIT_10_THEN_2_ELSE_0__q9,
	       IF_sfd___31833_BIT_11_THEN_2_ELSE_0__q8,
	       IF_sfd___31833_BIT_39_THEN_2_ELSE_0__q7,
	       IF_sfd___31833_BIT_40_THEN_2_ELSE_0__q6,
	       IF_sfd___32341_BIT_10_THEN_2_ELSE_0__q22,
	       IF_sfd___32341_BIT_11_THEN_2_ELSE_0__q21,
	       IF_sfd___32341_BIT_39_THEN_2_ELSE_0__q20,
	       IF_sfd___32341_BIT_40_THEN_2_ELSE_0__q19,
	       IF_sfd___34711_BIT_7_THEN_2_ELSE_0__q39,
	       IF_sfd___34711_BIT_8_THEN_2_ELSE_0__q38,
	       IF_sfd___38654_BIT_7_THEN_2_ELSE_0__q28,
	       IF_sfd___38654_BIT_8_THEN_2_ELSE_0__q27,
	       IF_sfd___39191_BIT_1_THEN_2_ELSE_0__q60,
	       IF_sfd___39191_BIT_2_THEN_2_ELSE_0__q59,
	       IF_sfd___39609_BIT_1_THEN_2_ELSE_0__q49,
	       IF_sfd___39609_BIT_2_THEN_2_ELSE_0__q48,
	       IF_sfdin18094_BIT_33_THEN_2_ELSE_0__q83,
	       IF_sfdin35833_BIT_33_THEN_2_ELSE_0__q88,
	       IF_sfdin76663_BIT_4_THEN_2_ELSE_0__q116,
	       IF_theResult___snd26695_BIT_33_THEN_2_ELSE_0__q85,
	       IF_theResult___snd44458_BIT_33_THEN_2_ELSE_0__q91,
	       IF_theResult___snd67119_BIT_4_THEN_2_ELSE_0__q113,
	       IF_theResult___snd85404_BIT_4_THEN_2_ELSE_0__q119,
	       IF_x0677_BIT_24_THEN_2_ELSE_0__q47,
	       IF_x1861_BIT_53_THEN_2_ELSE_0__q65,
	       IF_x2884_BIT_53_THEN_2_ELSE_0__q66,
	       IF_x6606_BIT_53_THEN_2_ELSE_0__q80,
	       IF_x7200_BIT_24_THEN_2_ELSE_0__q44,
	       IF_x7850_BIT_53_THEN_2_ELSE_0__q81,
	       IF_x8461_BIT_24_THEN_2_ELSE_0__q45,
	       IF_x9654_BIT_24_THEN_2_ELSE_0__q46,
	       guard__h110003,
	       guard__h11843,
	       guard__h118696,
	       guard__h12331,
	       guard__h127613,
	       guard__h136435,
	       guard__h159207,
	       guard__h168443,
	       guard__h177468,
	       guard__h22351,
	       guard__h22835,
	       guard__h28664,
	       guard__h29149,
	       guard__h34721,
	       guard__h35205,
	       guard__h36239,
	       guard__h37014,
	       guard__h38243,
	       guard__h38917,
	       guard__h39468,
	       guard__h40459,
	       guard__h59619,
	       guard__h60307,
	       guard__h69201,
	       guard__h69888,
	       guard__h71124,
	       guard__h71675,
	       guard__h72666,
	       guard__h82827,
	       guard__h83515,
	       guard__h93725,
	       guard__h94412,
	       guard__h95645,
	       guard__h96420,
	       guard__h97632;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45__ETC___d3495,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1261,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1399,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2190,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2293,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1571,
       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d2460,
       IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2682,
       IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2787,
       IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d440,
       IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d610,
       IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d1067,
       IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d2924,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4645,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4843,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4846,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4853,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4867,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4879,
       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4891,
       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1685,
       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1828,
       IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2572,
       IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d3013,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d2191,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d4311,
       IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1940,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4643,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4865,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4877,
       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4889,
       IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d3825,
       IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4111,
       IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4124,
       IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4137,
       IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d1920,
       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3827,
       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4086,
       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4097,
       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4113,
       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4126,
       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4139,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1906,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1916,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1929,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1930,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1931,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1934,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1936,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1954,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1991,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2002,
       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2006,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1239,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1259,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1622,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1654,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1716,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1770,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1802,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1858,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2168,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2188,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2508,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2540,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2603,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2660,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2680,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2956,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2988,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3043,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3404,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3493,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3782,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3823,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d418,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4310,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d438,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4599,
       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4640,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1390,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1393,
       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1402,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2778,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2781,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2790,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d601,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d604,
       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d613,
       IF_requestR_BIT_191_25_THEN_NOT_requestR_BITS__ETC___d4944,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1633,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1697,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1781,
       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1839,
       NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2519,
       NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2584,
       NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2967,
       NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3024,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4105,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4133,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1674,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1740,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1820,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1881,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1943,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1944,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2001,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2007,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2025,
       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4246,
       NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d1218,
       NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d2642,
       NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d390,
       NOT_requestR_BITS_159_TO_128_079_EQ_0_080_081__ETC___d1563,
       NOT_requestR_BITS_190_TO_180_472_EQ_0_480_486__ETC___d2561,
       NOT_requestR_BITS_190_TO_180_472_EQ_0_480_486__ETC___d3005,
       NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d2629,
       NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d3068,
       NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d4948,
       NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d5013,
       NOT_requestR_BITS_190_TO_180_472_ULT_requestR__ETC___d4990,
       NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d2005,
       NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777,
       NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798,
       NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d2878,
       NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d958,
       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313,
       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314,
       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498,
       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d3368,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4563,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d3746,
       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4275,
       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4608,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d3462,
       _0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d3791,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4068,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4093,
       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4120,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2145,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2147,
       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2149,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2338,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2339,
       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2340,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2638,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2640,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2643,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388,
       _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2801,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2802,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2803,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880,
       _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881,
       guard__h128211,
       guard__h169041,
       requestR_BITS_126_TO_116_903_EQ_0_917_AND_requ_ETC___d4924,
       requestR_BITS_179_TO_128_474_ULE_requestR_BITS_ETC___d4936,
       requestR_BITS_179_TO_128_474_ULT_requestR_BITS_ETC___d4941,
       requestR_BITS_190_TO_180_472_EQ_0_480_AND_requ_ETC___d4920,
       requestR_BITS_190_TO_180_472_EQ_0_480_AND_requ_ETC___d4994,
       requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4912,
       requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4957,
       requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4979,
       requestR_BITS_190_TO_180_472_EQ_requestR_BITS__ETC___d4935,
       requestR_BITS_190_TO_180_472_ULE_requestR_BITS_ETC___d4933,
       requestR_BITS_190_TO_180_472_ULE_requestR_BITS_ETC___d4989,
       requestR_BITS_190_TO_180_472_ULT_requestR_BITS_ETC___d4940,
       requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT_req_ETC___d811,
       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1731,
       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1874,
       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1942,
       requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016,
       requestR_BIT_159_6_OR_requestR_BIT_158_86_OR_r_ETC___d1574,
       requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037,
       requestR_BIT_191_25_OR_NOT_requestR_BITS_190_T_ETC___d2619,
       requestR_BIT_191_25_OR_NOT_requestR_BITS_190_T_ETC___d3058,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1058,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1061,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1070,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2915,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2918,
       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2927;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = ab__h204197[68:5] ;

  // value method word_snd
  assign word_snd = ab__h204197[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .request_put(fpu$request_put),
	    .EN_request_put(fpu$EN_request_put),
	    .EN_response_get(fpu$EN_response_get),
	    .RDY_request_put(fpu$RDY_request_put),
	    .response_get(fpu$response_get),
	    .RDY_response_get(fpu$RDY_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;
  assign WILL_FIRE_RL_doFSGNJ_S = MUX_dw_result$wset_1__SEL_2 ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_L
  assign CAN_FIRE_RL_doFCVT_S_L =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd2 ;
  assign WILL_FIRE_RL_doFCVT_S_L = CAN_FIRE_RL_doFCVT_S_L ;

  // rule RL_doFCVT_S_LU
  assign CAN_FIRE_RL_doFCVT_S_LU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd3 ;
  assign WILL_FIRE_RL_doFCVT_S_LU = CAN_FIRE_RL_doFCVT_S_LU ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_L_S
  assign CAN_FIRE_RL_doFCVT_L_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd2 ;
  assign WILL_FIRE_RL_doFCVT_L_S = CAN_FIRE_RL_doFCVT_L_S ;

  // rule RL_doFCVT_LU_S
  assign CAN_FIRE_RL_doFCVT_LU_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd3 ;
  assign WILL_FIRE_RL_doFCVT_LU_S = CAN_FIRE_RL_doFCVT_LU_S ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_request_put && requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_D_L
  assign CAN_FIRE_RL_doFCVT_D_L =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd2 ;
  assign WILL_FIRE_RL_doFCVT_D_L = CAN_FIRE_RL_doFCVT_D_L ;

  // rule RL_doFCVT_D_LU
  assign CAN_FIRE_RL_doFCVT_D_LU =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd3 ;
  assign WILL_FIRE_RL_doFCVT_D_LU = CAN_FIRE_RL_doFCVT_D_LU ;

  // rule RL_doFCVT_L_D
  assign CAN_FIRE_RL_doFCVT_L_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd2 ;
  assign WILL_FIRE_RL_doFCVT_L_D = CAN_FIRE_RL_doFCVT_L_D ;

  // rule RL_doFCVT_LU_D
  assign CAN_FIRE_RL_doFCVT_LU_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd3 ;
  assign WILL_FIRE_RL_doFCVT_LU_D = CAN_FIRE_RL_doFCVT_LU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result =
	     fpu$RDY_response_get && stateR == 2'd1 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = CAN_FIRE_RL_rl_get_fpu_result ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd2 ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign MUX_dw_result$wset_1__SEL_2 =
	     requestR[214] && stateR == 2'd0 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign MUX_dw_result$wset_1__SEL_38 =
	     WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ;
  assign MUX_dw_result$wset_1__VAL_1 = { x__h1925, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_2 = { x__h1779, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_3 = { x__h2059, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_4 = { x__h2207, x__h12967 } ;
  assign MUX_dw_result$wset_1__VAL_5 = { x__h13255, x__h23444 } ;
  assign MUX_dw_result$wset_1__VAL_6 = { x__h23729, x__h29785 } ;
  assign MUX_dw_result$wset_1__VAL_7 = { x__h30070, x__h35814 } ;
  assign MUX_dw_result$wset_1__VAL_8 = { x__h36098, x__h37828 } ;
  assign MUX_dw_result$wset_1__VAL_9 = { x__h38083, x__h38538 } ;
  assign MUX_dw_result$wset_1__VAL_10 = { x__h38773, x__h40041 } ;
  assign MUX_dw_result$wset_1__VAL_11 = { x__h40296, x__h40754 } ;
  assign MUX_dw_result$wset_1__VAL_12 = { x__h40994, x__h43033 } ;
  assign MUX_dw_result$wset_1__VAL_13 = { x__h43628, x__h43033 } ;
  assign MUX_dw_result$wset_1__VAL_14 = { x__h46153, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_15 = { x__h46274, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_16 = { x__h46412, x__h43033 } ;
  assign MUX_dw_result$wset_1__VAL_17 = { x__h47895, x__h48783 } ;
  assign MUX_dw_result$wset_1__VAL_18 = { x__h48964, x__h48783 } ;
  assign MUX_dw_result$wset_1__VAL_19 = { x__h50050, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_20 = { x__h51217, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_21 = { x__h51339, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_22 = { x__h51463, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_23 = { x__h51593, x__h61142 } ;
  assign MUX_dw_result$wset_1__VAL_24 = { x__h61427, x__h70696 } ;
  assign MUX_dw_result$wset_1__VAL_25 = { x__h70980, x__h72248 } ;
  assign MUX_dw_result$wset_1__VAL_26 = { x__h72503, x__h72961 } ;
  assign MUX_dw_result$wset_1__VAL_27 = { x__h73197, x__h84350 } ;
  assign MUX_dw_result$wset_1__VAL_28 = { x__h84635, x__h95220 } ;
  assign MUX_dw_result$wset_1__VAL_29 = { x__h95504, x__h97217 } ;
  assign MUX_dw_result$wset_1__VAL_30 = { x__h97472, x__h97927 } ;
  assign MUX_dw_result$wset_1__VAL_31 = { x__h98162, x__h145368 } ;
  assign MUX_dw_result$wset_1__VAL_32 = { x__h146350, x__h186474 } ;
  assign MUX_dw_result$wset_1__VAL_33 = { x__h187397, x__h190946 } ;
  assign MUX_dw_result$wset_1__VAL_34 = { x__h191945, x__h190946 } ;
  assign MUX_dw_result$wset_1__VAL_35 = { x__h196389, x__h190946 } ;
  assign MUX_dw_result$wset_1__VAL_36 = { x__h199084, x__h200780 } ;
  assign MUX_dw_result$wset_1__VAL_37 = { x__h200961, x__h200780 } ;
  assign MUX_dw_result$wset_1__VAL_38 = { requestR[191:128], 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_39 = { x__h203088, 5'd0 } ;
  assign MUX_dw_result$wset_1__VAL_40 =
	     { x__h203738, fpu$response_get[4:0] } ;
  assign MUX_fpu$request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19,
	       33'h1AAAAAAAA,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd8 } ;
  assign MUX_fpu$request_put_1__VAL_8 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd0 } ;
  assign MUX_fpu$request_put_1__VAL_9 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd1 } ;
  assign MUX_fpu$request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd2 } ;
  assign MUX_fpu$request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd5 } ;
  assign MUX_fpu$request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd6 } ;
  assign MUX_fpu$request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd7 } ;
  assign MUX_fpu$request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38,
	       4'd8 } ;
  assign MUX_resultR$write_1__VAL_2 =
	     { 1'd1, x__h203738, fpu$response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_3 = { 1'd1, x__h203088, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_6 = { 1'd1, x__h200961, x__h200780 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h199084, x__h200780 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h196389, x__h190946 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h191945, x__h190946 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h187397, x__h190946 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h146350, x__h186474 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h98162, x__h145368 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h97472, x__h97927 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h95504, x__h97217 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h84635, x__h95220 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h73197, x__h84350 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h72503, x__h72961 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h70980, x__h72248 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h61427, x__h70696 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h51593, x__h61142 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h51463, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h51339, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h51217, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h50050, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h48964, x__h48783 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h47895, x__h48783 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h46412, x__h43033 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h46274, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h46153, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h43628, x__h43033 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h40994, x__h43033 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h40296, x__h40754 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h38773, x__h40041 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h38083, x__h38538 } ;
  assign MUX_resultR$write_1__VAL_35 = { 1'd1, x__h36098, x__h37828 } ;
  assign MUX_resultR$write_1__VAL_36 = { 1'd1, x__h30070, x__h35814 } ;
  assign MUX_resultR$write_1__VAL_37 = { 1'd1, x__h23729, x__h29785 } ;
  assign MUX_resultR$write_1__VAL_38 = { 1'd1, x__h13255, x__h23444 } ;
  assign MUX_resultR$write_1__VAL_39 = { 1'd1, x__h2207, x__h12967 } ;
  assign MUX_resultR$write_1__VAL_40 = { 1'd1, x__h2059, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_41 = { 1'd1, x__h1925, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_42 = { 1'd1, x__h1779, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_LU_D ||
	     WILL_FIRE_RL_doFCVT_L_D ||
	     WILL_FIRE_RL_doFCVT_D_LU ||
	     WILL_FIRE_RL_doFCVT_D_L ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_LU_S ||
	     WILL_FIRE_RL_doFCVT_L_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_LU ||
	     WILL_FIRE_RL_doFCVT_S_L ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;
  always@(WILL_FIRE_RL_doFSGNJN_S or
	  MUX_dw_result$wset_1__VAL_1 or
	  WILL_FIRE_RL_doFSGNJ_S or
	  MUX_dw_result$wset_1__VAL_2 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_dw_result$wset_1__VAL_3 or
	  WILL_FIRE_RL_doFCVT_S_L or
	  MUX_dw_result$wset_1__VAL_4 or
	  WILL_FIRE_RL_doFCVT_S_LU or
	  MUX_dw_result$wset_1__VAL_5 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_dw_result$wset_1__VAL_6 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_dw_result$wset_1__VAL_7 or
	  WILL_FIRE_RL_doFCVT_L_S or
	  MUX_dw_result$wset_1__VAL_8 or
	  WILL_FIRE_RL_doFCVT_LU_S or
	  MUX_dw_result$wset_1__VAL_9 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_dw_result$wset_1__VAL_10 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_dw_result$wset_1__VAL_11 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_dw_result$wset_1__VAL_12 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_dw_result$wset_1__VAL_13 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_dw_result$wset_1__VAL_14 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_dw_result$wset_1__VAL_15 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_dw_result$wset_1__VAL_16 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_dw_result$wset_1__VAL_17 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_dw_result$wset_1__VAL_18 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_dw_result$wset_1__VAL_19 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_dw_result$wset_1__VAL_20 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_dw_result$wset_1__VAL_21 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_dw_result$wset_1__VAL_22 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_dw_result$wset_1__VAL_23 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_dw_result$wset_1__VAL_24 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_dw_result$wset_1__VAL_25 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_dw_result$wset_1__VAL_26 or
	  WILL_FIRE_RL_doFCVT_D_L or
	  MUX_dw_result$wset_1__VAL_27 or
	  WILL_FIRE_RL_doFCVT_D_LU or
	  MUX_dw_result$wset_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_L_D or
	  MUX_dw_result$wset_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_LU_D or
	  MUX_dw_result$wset_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_dw_result$wset_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_dw_result$wset_1__VAL_32 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_dw_result$wset_1__VAL_33 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_dw_result$wset_1__VAL_34 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_dw_result$wset_1__VAL_35 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_dw_result$wset_1__VAL_36 or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_dw_result$wset_1__VAL_37 or
	  MUX_dw_result$wset_1__SEL_38 or
	  MUX_dw_result$wset_1__VAL_38 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_dw_result$wset_1__VAL_39 or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_dw_result$wset_1__VAL_40 or
	  WILL_FIRE_RL_rl_drive_fpu_result or resultR)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFSGNJN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_1;
      WILL_FIRE_RL_doFSGNJ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_2;
      WILL_FIRE_RL_doFSGNJX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_3;
      WILL_FIRE_RL_doFCVT_S_L: dw_result$wget = MUX_dw_result$wset_1__VAL_4;
      WILL_FIRE_RL_doFCVT_S_LU: dw_result$wget = MUX_dw_result$wset_1__VAL_5;
      WILL_FIRE_RL_doFCVT_S_W: dw_result$wget = MUX_dw_result$wset_1__VAL_6;
      WILL_FIRE_RL_doFCVT_S_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_7;
      WILL_FIRE_RL_doFCVT_L_S: dw_result$wget = MUX_dw_result$wset_1__VAL_8;
      WILL_FIRE_RL_doFCVT_LU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_9;
      WILL_FIRE_RL_doFCVT_W_S: dw_result$wget = MUX_dw_result$wset_1__VAL_10;
      WILL_FIRE_RL_doFCVT_WU_S: dw_result$wget = MUX_dw_result$wset_1__VAL_11;
      WILL_FIRE_RL_doFMIN_S: dw_result$wget = MUX_dw_result$wset_1__VAL_12;
      WILL_FIRE_RL_doFMAX_S: dw_result$wget = MUX_dw_result$wset_1__VAL_13;
      WILL_FIRE_RL_doFMV_W_X: dw_result$wget = MUX_dw_result$wset_1__VAL_14;
      WILL_FIRE_RL_doFMV_X_W: dw_result$wget = MUX_dw_result$wset_1__VAL_15;
      WILL_FIRE_RL_doFEQ_S: dw_result$wget = MUX_dw_result$wset_1__VAL_16;
      WILL_FIRE_RL_doFLT_S: dw_result$wget = MUX_dw_result$wset_1__VAL_17;
      WILL_FIRE_RL_doFLE_S: dw_result$wget = MUX_dw_result$wset_1__VAL_18;
      WILL_FIRE_RL_doFCLASS_S: dw_result$wget = MUX_dw_result$wset_1__VAL_19;
      WILL_FIRE_RL_doFSGNJ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_20;
      WILL_FIRE_RL_doFSGNJN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_21;
      WILL_FIRE_RL_doFSGNJX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_22;
      WILL_FIRE_RL_doFCVT_D_W: dw_result$wget = MUX_dw_result$wset_1__VAL_23;
      WILL_FIRE_RL_doFCVT_D_WU: dw_result$wget = MUX_dw_result$wset_1__VAL_24;
      WILL_FIRE_RL_doFCVT_W_D: dw_result$wget = MUX_dw_result$wset_1__VAL_25;
      WILL_FIRE_RL_doFCVT_WU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_26;
      WILL_FIRE_RL_doFCVT_D_L: dw_result$wget = MUX_dw_result$wset_1__VAL_27;
      WILL_FIRE_RL_doFCVT_D_LU: dw_result$wget = MUX_dw_result$wset_1__VAL_28;
      WILL_FIRE_RL_doFCVT_L_D: dw_result$wget = MUX_dw_result$wset_1__VAL_29;
      WILL_FIRE_RL_doFCVT_LU_D: dw_result$wget = MUX_dw_result$wset_1__VAL_30;
      WILL_FIRE_RL_doFCVT_S_D: dw_result$wget = MUX_dw_result$wset_1__VAL_31;
      WILL_FIRE_RL_doFCVT_D_S: dw_result$wget = MUX_dw_result$wset_1__VAL_32;
      WILL_FIRE_RL_doFMIN_D: dw_result$wget = MUX_dw_result$wset_1__VAL_33;
      WILL_FIRE_RL_doFMAX_D: dw_result$wget = MUX_dw_result$wset_1__VAL_34;
      WILL_FIRE_RL_doFEQ_D: dw_result$wget = MUX_dw_result$wset_1__VAL_35;
      WILL_FIRE_RL_doFLT_D: dw_result$wget = MUX_dw_result$wset_1__VAL_36;
      WILL_FIRE_RL_doFLE_D: dw_result$wget = MUX_dw_result$wset_1__VAL_37;
      MUX_dw_result$wset_1__SEL_38:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_38;
      WILL_FIRE_RL_doFCLASS_D: dw_result$wget = MUX_dw_result$wset_1__VAL_39;
      WILL_FIRE_RL_rl_get_fpu_result:
	  dw_result$wget = MUX_dw_result$wset_1__VAL_40;
      WILL_FIRE_RL_rl_drive_fpu_result: dw_result$wget = resultR[68:0];
      default: dw_result$wget =
		   69'h0AAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cfg_verbosity$EN = EN_set_verbosity ;

  // register requestR
  assign requestR$D_IN =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign requestR$EN = EN_req ;

  // register resultR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_2 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_6 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_LU_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_L_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_D_LU or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_L or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFCVT_LU_S or
	  MUX_resultR$write_1__VAL_34 or
	  WILL_FIRE_RL_doFCVT_L_S or
	  MUX_resultR$write_1__VAL_35 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_36 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_37 or
	  WILL_FIRE_RL_doFCVT_S_LU or
	  MUX_resultR$write_1__VAL_38 or
	  WILL_FIRE_RL_doFCVT_S_L or
	  MUX_resultR$write_1__VAL_39 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_40 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_41 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_42)
  case (1'b1)
    EN_req: resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_2;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_6;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_LU_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_L_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_D_LU: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_L: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFCVT_LU_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    WILL_FIRE_RL_doFCVT_L_S: resultR$D_IN = MUX_resultR$write_1__VAL_35;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_36;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_37;
    WILL_FIRE_RL_doFCVT_S_LU: resultR$D_IN = MUX_resultR$write_1__VAL_38;
    WILL_FIRE_RL_doFCVT_S_L: resultR$D_IN = MUX_resultR$write_1__VAL_39;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_40;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_41;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_42;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     EN_req || WILL_FIRE_RL_doFMV_X_D || WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_L ||
	     WILL_FIRE_RL_doFCVT_S_LU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_L_S ||
	     WILL_FIRE_RL_doFCVT_LU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_D_L ||
	     WILL_FIRE_RL_doFCVT_D_LU ||
	     WILL_FIRE_RL_doFCVT_L_D ||
	     WILL_FIRE_RL_doFCVT_LU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_LU_D or
	  WILL_FIRE_RL_doFCVT_L_D or
	  WILL_FIRE_RL_doFCVT_D_LU or
	  WILL_FIRE_RL_doFCVT_D_L or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_LU_S or
	  WILL_FIRE_RL_doFCVT_L_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFCVT_S_LU or
	  WILL_FIRE_RL_doFCVT_S_L or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or WILL_FIRE_RL_doFADD_S)
  case (1'b1)
    EN_req: stateR$D_IN = 2'd0;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_LU_D ||
    WILL_FIRE_RL_doFCVT_L_D ||
    WILL_FIRE_RL_doFCVT_D_LU ||
    WILL_FIRE_RL_doFCVT_D_L ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd1;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_LU_S ||
    WILL_FIRE_RL_doFCVT_L_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFCVT_S_LU ||
    WILL_FIRE_RL_doFCVT_S_L ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFNMSUB_S || WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     EN_req || WILL_FIRE_RL_doFNMSUB_D || WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_LU_D ||
	     WILL_FIRE_RL_doFCVT_L_D ||
	     WILL_FIRE_RL_doFCVT_D_LU ||
	     WILL_FIRE_RL_doFCVT_D_L ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_LU_S ||
	     WILL_FIRE_RL_doFCVT_L_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_LU ||
	     WILL_FIRE_RL_doFCVT_S_L ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFNMSUB_D or MUX_fpu$request_put_1__VAL_14)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S: fpu$request_put = MUX_fpu$request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S: fpu$request_put = MUX_fpu$request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S: fpu$request_put = MUX_fpu$request_put_1__VAL_7;
      WILL_FIRE_RL_doFADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_8;
      WILL_FIRE_RL_doFSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_9;
      WILL_FIRE_RL_doFMUL_D: fpu$request_put = MUX_fpu$request_put_1__VAL_10;
      WILL_FIRE_RL_doFMADD_D: fpu$request_put = MUX_fpu$request_put_1__VAL_11;
      WILL_FIRE_RL_doFMSUB_D: fpu$request_put = MUX_fpu$request_put_1__VAL_12;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_13;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$request_put = MUX_fpu$request_put_1__VAL_14;
      default: fpu$request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ;
  assign fpu$EN_response_get = CAN_FIRE_RL_rl_get_fpu_result ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q82 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d3368 ?
	       _theResult___snd__h118163 :
	       _theResult____h109993 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q115 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4563 ?
	       _theResult___snd__h176732 :
	       _theResult____h168433 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q87 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d3746 ?
	       _theResult___snd__h135902 :
	       _theResult____h127603 ;
  assign IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q112 =
	     _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4275 ?
	       _theResult___snd__h167157 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q118 =
	     _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4608 ?
	       _theResult___snd__h167157 :
	       _theResult___snd__h185442 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_ETC__q84 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d3462 ?
	       _theResult___snd__h126733 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_ETC__q90 =
	     _0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d3791 ?
	       _theResult___snd__h126733 :
	       _theResult___snd__h144496 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45__ETC___d3495 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 ?
	       ((_theResult___fst_exp__h118100 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3404) :
	       ((_theResult___fst_exp__h126744 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3493) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1261 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1239 :
	       ((x__h29164[7:0] == 8'd255) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1259) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1399 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 ?
	       guard__h28664 != 2'b0 :
	       x__h29164[7:0] != 8'd255 && guard__h29149 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2190 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2149 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2168 :
	       ((x__h60322[10:0] == 11'd2047) ?
		  requestR[159] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2188) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2293 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2149 ?
	       guard__h59619 != 2'b0 :
	       x__h60322[10:0] != 11'd2047 && guard__h60307 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1571 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 ?
	       guard__h34721 != 2'b0 :
	       x__h35220[7:0] != 8'd255 && guard__h35205 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d2460 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2340 ?
	       guard__h69201 != 2'b0 :
	       x__h69903[10:0] != 11'd2047 && guard__h69888 != 2'b0 ;
  assign IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2682 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2643 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2660 :
	       ((x__h83530[10:0] == 11'd2047) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2680) ;
  assign IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2787 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2643 ?
	       guard__h82827 != 2'b0 :
	       x__h83530[10:0] != 11'd2047 && guard__h83515 != 2'b0 ;
  assign IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d440 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 ?
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d418 :
	       ((x__h12346[7:0] == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d438) ;
  assign IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d610 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 ?
	       guard__h11843 != 2'b0 :
	       x__h12346[7:0] != 8'd255 && guard__h12331 != 2'b0 ;
  assign IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d1067 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 ?
	       guard__h22351 != 2'b0 :
	       x__h22850[7:0] != 8'd255 && guard__h22835 != 2'b0 ;
  assign IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d2924 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2803 ?
	       guard__h93725 != 2'b0 :
	       x__h94427[10:0] != 11'd2047 && guard__h94412 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3366 =
	     (_theResult____h109993[56] ?
		6'd0 :
		(_theResult____h109993[55] ?
		   6'd1 :
		   (_theResult____h109993[54] ?
		      6'd2 :
		      (_theResult____h109993[53] ?
			 6'd3 :
			 (_theResult____h109993[52] ?
			    6'd4 :
			    (_theResult____h109993[51] ?
			       6'd5 :
			       (_theResult____h109993[50] ?
				  6'd6 :
				  (_theResult____h109993[49] ?
				     6'd7 :
				     (_theResult____h109993[48] ?
					6'd8 :
					(_theResult____h109993[47] ?
					   6'd9 :
					   (_theResult____h109993[46] ?
					      6'd10 :
					      (_theResult____h109993[45] ?
						 6'd11 :
						 (_theResult____h109993[44] ?
						    6'd12 :
						    (_theResult____h109993[43] ?
						       6'd13 :
						       (_theResult____h109993[42] ?
							  6'd14 :
							  (_theResult____h109993[41] ?
							     6'd15 :
							     (_theResult____h109993[40] ?
								6'd16 :
								(_theResult____h109993[39] ?
								   6'd17 :
								   (_theResult____h109993[38] ?
								      6'd18 :
								      (_theResult____h109993[37] ?
									 6'd19 :
									 (_theResult____h109993[36] ?
									    6'd20 :
									    (_theResult____h109993[35] ?
									       6'd21 :
									       (_theResult____h109993[34] ?
										  6'd22 :
										  (_theResult____h109993[33] ?
										     6'd23 :
										     (_theResult____h109993[32] ?
											6'd24 :
											(_theResult____h109993[31] ?
											   6'd25 :
											   (_theResult____h109993[30] ?
											      6'd26 :
											      (_theResult____h109993[29] ?
												 6'd27 :
												 (_theResult____h109993[28] ?
												    6'd28 :
												    (_theResult____h109993[27] ?
												       6'd29 :
												       (_theResult____h109993[26] ?
													  6'd30 :
													  (_theResult____h109993[25] ?
													     6'd31 :
													     (_theResult____h109993[24] ?
														6'd32 :
														(_theResult____h109993[23] ?
														   6'd33 :
														   (_theResult____h109993[22] ?
														      6'd34 :
														      (_theResult____h109993[21] ?
															 6'd35 :
															 (_theResult____h109993[20] ?
															    6'd36 :
															    (_theResult____h109993[19] ?
															       6'd37 :
															       (_theResult____h109993[18] ?
																  6'd38 :
																  (_theResult____h109993[17] ?
																     6'd39 :
																     (_theResult____h109993[16] ?
																	6'd40 :
																	(_theResult____h109993[15] ?
																	   6'd41 :
																	   (_theResult____h109993[14] ?
																	      6'd42 :
																	      (_theResult____h109993[13] ?
																		 6'd43 :
																		 (_theResult____h109993[12] ?
																		    6'd44 :
																		    (_theResult____h109993[11] ?
																		       6'd45 :
																		       (_theResult____h109993[10] ?
																			  6'd46 :
																			  (_theResult____h109993[9] ?
																			     6'd47 :
																			     (_theResult____h109993[8] ?
																				6'd48 :
																				(_theResult____h109993[7] ?
																				   6'd49 :
																				   (_theResult____h109993[6] ?
																				      6'd50 :
																				      (_theResult____h109993[5] ?
																					 6'd51 :
																					 (_theResult____h109993[4] ?
																					    6'd52 :
																					    (_theResult____h109993[3] ?
																					       6'd53 :
																					       (_theResult____h109993[2] ?
																						  6'd54 :
																						  (_theResult____h109993[1] ?
																						     6'd55 :
																						     (_theResult____h109993[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4561 =
	     (_theResult____h168433[56] ?
		6'd0 :
		(_theResult____h168433[55] ?
		   6'd1 :
		   (_theResult____h168433[54] ?
		      6'd2 :
		      (_theResult____h168433[53] ?
			 6'd3 :
			 (_theResult____h168433[52] ?
			    6'd4 :
			    (_theResult____h168433[51] ?
			       6'd5 :
			       (_theResult____h168433[50] ?
				  6'd6 :
				  (_theResult____h168433[49] ?
				     6'd7 :
				     (_theResult____h168433[48] ?
					6'd8 :
					(_theResult____h168433[47] ?
					   6'd9 :
					   (_theResult____h168433[46] ?
					      6'd10 :
					      (_theResult____h168433[45] ?
						 6'd11 :
						 (_theResult____h168433[44] ?
						    6'd12 :
						    (_theResult____h168433[43] ?
						       6'd13 :
						       (_theResult____h168433[42] ?
							  6'd14 :
							  (_theResult____h168433[41] ?
							     6'd15 :
							     (_theResult____h168433[40] ?
								6'd16 :
								(_theResult____h168433[39] ?
								   6'd17 :
								   (_theResult____h168433[38] ?
								      6'd18 :
								      (_theResult____h168433[37] ?
									 6'd19 :
									 (_theResult____h168433[36] ?
									    6'd20 :
									    (_theResult____h168433[35] ?
									       6'd21 :
									       (_theResult____h168433[34] ?
										  6'd22 :
										  (_theResult____h168433[33] ?
										     6'd23 :
										     (_theResult____h168433[32] ?
											6'd24 :
											(_theResult____h168433[31] ?
											   6'd25 :
											   (_theResult____h168433[30] ?
											      6'd26 :
											      (_theResult____h168433[29] ?
												 6'd27 :
												 (_theResult____h168433[28] ?
												    6'd28 :
												    (_theResult____h168433[27] ?
												       6'd29 :
												       (_theResult____h168433[26] ?
													  6'd30 :
													  (_theResult____h168433[25] ?
													     6'd31 :
													     (_theResult____h168433[24] ?
														6'd32 :
														(_theResult____h168433[23] ?
														   6'd33 :
														   (_theResult____h168433[22] ?
														      6'd34 :
														      (_theResult____h168433[21] ?
															 6'd35 :
															 (_theResult____h168433[20] ?
															    6'd36 :
															    (_theResult____h168433[19] ?
															       6'd37 :
															       (_theResult____h168433[18] ?
																  6'd38 :
																  (_theResult____h168433[17] ?
																     6'd39 :
																     (_theResult____h168433[16] ?
																	6'd40 :
																	(_theResult____h168433[15] ?
																	   6'd41 :
																	   (_theResult____h168433[14] ?
																	      6'd42 :
																	      (_theResult____h168433[13] ?
																		 6'd43 :
																		 (_theResult____h168433[12] ?
																		    6'd44 :
																		    (_theResult____h168433[11] ?
																		       6'd45 :
																		       (_theResult____h168433[10] ?
																			  6'd46 :
																			  (_theResult____h168433[9] ?
																			     6'd47 :
																			     (_theResult____h168433[8] ?
																				6'd48 :
																				(_theResult____h168433[7] ?
																				   6'd49 :
																				   (_theResult____h168433[6] ?
																				      6'd50 :
																				      (_theResult____h168433[5] ?
																					 6'd51 :
																					 (_theResult____h168433[4] ?
																					    6'd52 :
																					    (_theResult____h168433[3] ?
																					       6'd53 :
																					       (_theResult____h168433[2] ?
																						  6'd54 :
																						  (_theResult____h168433[1] ?
																						     6'd55 :
																						     (_theResult____h168433[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3744 =
	     (_theResult____h127603[56] ?
		6'd0 :
		(_theResult____h127603[55] ?
		   6'd1 :
		   (_theResult____h127603[54] ?
		      6'd2 :
		      (_theResult____h127603[53] ?
			 6'd3 :
			 (_theResult____h127603[52] ?
			    6'd4 :
			    (_theResult____h127603[51] ?
			       6'd5 :
			       (_theResult____h127603[50] ?
				  6'd6 :
				  (_theResult____h127603[49] ?
				     6'd7 :
				     (_theResult____h127603[48] ?
					6'd8 :
					(_theResult____h127603[47] ?
					   6'd9 :
					   (_theResult____h127603[46] ?
					      6'd10 :
					      (_theResult____h127603[45] ?
						 6'd11 :
						 (_theResult____h127603[44] ?
						    6'd12 :
						    (_theResult____h127603[43] ?
						       6'd13 :
						       (_theResult____h127603[42] ?
							  6'd14 :
							  (_theResult____h127603[41] ?
							     6'd15 :
							     (_theResult____h127603[40] ?
								6'd16 :
								(_theResult____h127603[39] ?
								   6'd17 :
								   (_theResult____h127603[38] ?
								      6'd18 :
								      (_theResult____h127603[37] ?
									 6'd19 :
									 (_theResult____h127603[36] ?
									    6'd20 :
									    (_theResult____h127603[35] ?
									       6'd21 :
									       (_theResult____h127603[34] ?
										  6'd22 :
										  (_theResult____h127603[33] ?
										     6'd23 :
										     (_theResult____h127603[32] ?
											6'd24 :
											(_theResult____h127603[31] ?
											   6'd25 :
											   (_theResult____h127603[30] ?
											      6'd26 :
											      (_theResult____h127603[29] ?
												 6'd27 :
												 (_theResult____h127603[28] ?
												    6'd28 :
												    (_theResult____h127603[27] ?
												       6'd29 :
												       (_theResult____h127603[26] ?
													  6'd30 :
													  (_theResult____h127603[25] ?
													     6'd31 :
													     (_theResult____h127603[24] ?
														6'd32 :
														(_theResult____h127603[23] ?
														   6'd33 :
														   (_theResult____h127603[22] ?
														      6'd34 :
														      (_theResult____h127603[21] ?
															 6'd35 :
															 (_theResult____h127603[20] ?
															    6'd36 :
															    (_theResult____h127603[19] ?
															       6'd37 :
															       (_theResult____h127603[18] ?
																  6'd38 :
																  (_theResult____h127603[17] ?
																     6'd39 :
																     (_theResult____h127603[16] ?
																	6'd40 :
																	(_theResult____h127603[15] ?
																	   6'd41 :
																	   (_theResult____h127603[14] ?
																	      6'd42 :
																	      (_theResult____h127603[13] ?
																		 6'd43 :
																		 (_theResult____h127603[12] ?
																		    6'd44 :
																		    (_theResult____h127603[11] ?
																		       6'd45 :
																		       (_theResult____h127603[10] ?
																			  6'd46 :
																			  (_theResult____h127603[9] ?
																			     6'd47 :
																			     (_theResult____h127603[8] ?
																				6'd48 :
																				(_theResult____h127603[7] ?
																				   6'd49 :
																				   (_theResult____h127603[6] ?
																				      6'd50 :
																				      (_theResult____h127603[5] ?
																					 6'd51 :
																					 (_theResult____h127603[4] ?
																					    6'd52 :
																					    (_theResult____h127603[3] ?
																					       6'd53 :
																					       (_theResult____h127603[2] ?
																						  6'd54 :
																						  (_theResult____h127603[1] ?
																						     6'd55 :
																						     (_theResult____h127603[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3849 =
	     (guard__h110003 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h118100 :
	       _theResult___exp__h118623 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3851 =
	     (guard__h110003 == 2'b0) ?
	       _theResult___fst_exp__h118100 :
	       (requestR[191] ?
		  _theResult___exp__h118623 :
		  _theResult___fst_exp__h118100) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3969 =
	     (guard__h110003 == 2'b0 || requestR[191]) ?
	       sfdin__h118094[56:34] :
	       _theResult___sfd__h118624 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3971 =
	     (guard__h110003 == 2'b0) ?
	       sfdin__h118094[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h118624 :
		  sfdin__h118094[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4702 =
	     (guard__h168443 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h176669 :
	       _theResult___exp__h177395 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4704 =
	     (guard__h168443 == 2'b0) ?
	       _theResult___fst_exp__h176669 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h177395 :
		  _theResult___fst_exp__h176669) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4781 =
	     (guard__h168443 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h176663[56:5] :
	       _theResult___sfd__h177396 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4783 =
	     (guard__h168443 == 2'b0) ?
	       sfdin__h176663[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h177396 :
		  sfdin__h176663[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3913 =
	     (guard__h127613 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h135839 :
	       _theResult___exp__h136362 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3915 =
	     (guard__h127613 == 2'b0) ?
	       _theResult___fst_exp__h135839 :
	       (requestR[191] ?
		  _theResult___exp__h136362 :
		  _theResult___fst_exp__h135839) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4009 =
	     (guard__h127613 == 2'b0 || requestR[191]) ?
	       sfdin__h135833[56:34] :
	       _theResult___sfd__h136363 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4011 =
	     (guard__h127613 == 2'b0) ?
	       sfdin__h135833[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h136363 :
		  sfdin__h135833[56:34]) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4666 =
	     (guard__h159207 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h167168 :
	       _theResult___exp__h167820 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4668 =
	     (guard__h159207 == 2'b0) ?
	       _theResult___fst_exp__h167168 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h167820 :
		  _theResult___fst_exp__h167168) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4730 =
	     (guard__h177468 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h185458 :
	       _theResult___exp__h186135 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4732 =
	     (guard__h177468 == 2'b0) ?
	       _theResult___fst_exp__h185458 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h186135 :
		  _theResult___fst_exp__h185458) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4757 =
	     (guard__h159207 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h167119[56:5] :
	       _theResult___sfd__h167821 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4759 =
	     (guard__h159207 == 2'b0) ?
	       _theResult___snd__h167119[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h167821 :
		  _theResult___snd__h167119[56:5]) ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4797 =
	     (guard__h177468 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h185404[56:5] :
	       _theResult___sfd__h186136 ;
  assign IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4799 =
	     (guard__h177468 == 2'b0) ?
	       _theResult___snd__h185404[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h186136 :
		  _theResult___snd__h185404[56:5]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3877 =
	     (guard__h118696 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h126744 :
	       _theResult___exp__h127193 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3879 =
	     (guard__h118696 == 2'b0) ?
	       _theResult___fst_exp__h126744 :
	       (requestR[191] ?
		  _theResult___exp__h127193 :
		  _theResult___fst_exp__h126744) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3941 =
	     (guard__h136435 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h144512 :
	       _theResult___exp__h144986 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3943 =
	     (guard__h136435 == 2'b0) ?
	       _theResult___fst_exp__h144512 :
	       (requestR[191] ?
		  _theResult___exp__h144986 :
		  _theResult___fst_exp__h144512) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3985 =
	     (guard__h118696 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h126695[56:34] :
	       _theResult___sfd__h127194 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3987 =
	     (guard__h118696 == 2'b0) ?
	       _theResult___snd__h126695[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h127194 :
		  _theResult___snd__h126695[56:34]) ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d4025 =
	     (guard__h136435 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h144458[56:34] :
	       _theResult___sfd__h144987 ;
  assign IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d4027 =
	     (guard__h136435 == 2'b0) ?
	       _theResult___snd__h144458[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h144987 :
		  _theResult___snd__h144458[56:34]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1281 =
	     (guard__h28664 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h29074 : 8'd0) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1304 =
	     (guard__h29149 == 2'b0 || requestR[159]) ?
	       x__h29164[7:0] :
	       _theResult___exp__h29585 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306 =
	     (guard__h29149 == 2'b0) ?
	       x__h29164[7:0] :
	       (requestR[159] ? _theResult___exp__h29585 : x__h29164[7:0]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1324 =
	     (guard__h28664 == 2'b0 || requestR[159]) ?
	       sfd___3__h28654[31:9] :
	       _theResult___sfd__h29075 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1326 =
	     (guard__h28664 == 2'b0) ?
	       sfd___3__h28654[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h29075 :
		  sfd___3__h28654[31:9]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1339 =
	     (guard__h29149 == 2'b0 || requestR[159]) ?
	       sfd___3__h28654[30:8] :
	       _theResult___sfd__h29586 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1341 =
	     (guard__h29149 == 2'b0) ?
	       sfd___3__h28654[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h29586 :
		  sfd___3__h28654[30:8]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2209 =
	     (guard__h59619 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h60232 : 11'd0) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2232 =
	     (guard__h60307 == 2'b0 || requestR[159]) ?
	       x__h60322[10:0] :
	       _theResult___exp__h60946 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2234 =
	     (guard__h60307 == 2'b0) ?
	       x__h60322[10:0] :
	       (requestR[159] ? _theResult___exp__h60946 : x__h60322[10:0]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2252 =
	     (guard__h59619 == 2'b0 || requestR[159]) ?
	       sfd___3__h59609[54:3] :
	       _theResult___sfd__h60233 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2254 =
	     (guard__h59619 == 2'b0) ?
	       sfd___3__h59609[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h60233 :
		  sfd___3__h59609[54:3]) ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2267 =
	     (guard__h60307 == 2'b0 || requestR[159]) ?
	       sfd___3__h59609[53:2] :
	       _theResult___sfd__h60947 ;
  assign IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2269 =
	     (guard__h60307 == 2'b0) ?
	       sfd___3__h59609[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h60947 :
		  sfd___3__h59609[53:2]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2701 =
	     (guard__h82827 == 2'b0) ?
	       11'd0 :
	       (requestR[191] ? _theResult___exp__h83440 : 11'd0) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2724 =
	     (guard__h83515 == 2'b0 || requestR[191]) ?
	       x__h83530[10:0] :
	       _theResult___exp__h84154 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2726 =
	     (guard__h83515 == 2'b0) ?
	       x__h83530[10:0] :
	       (requestR[191] ? _theResult___exp__h84154 : x__h83530[10:0]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2744 =
	     (guard__h82827 == 2'b0 || requestR[191]) ?
	       sfd___3__h11833[63:12] :
	       _theResult___sfd__h83441 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2746 =
	     (guard__h82827 == 2'b0) ?
	       sfd___3__h11833[63:12] :
	       (requestR[191] ?
		  _theResult___sfd__h83441 :
		  sfd___3__h11833[63:12]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2759 =
	     (guard__h83515 == 2'b0 || requestR[191]) ?
	       sfd___3__h11833[62:11] :
	       _theResult___sfd__h84155 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2761 =
	     (guard__h83515 == 2'b0) ?
	       sfd___3__h11833[62:11] :
	       (requestR[191] ?
		  _theResult___sfd__h84155 :
		  sfd___3__h11833[62:11]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d460 =
	     (guard__h11843 == 2'b0) ?
	       8'd0 :
	       (requestR[191] ? _theResult___exp__h12256 : 8'd0) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d483 =
	     (guard__h12331 == 2'b0 || requestR[191]) ?
	       x__h12346[7:0] :
	       _theResult___exp__h12767 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d485 =
	     (guard__h12331 == 2'b0) ?
	       x__h12346[7:0] :
	       (requestR[191] ? _theResult___exp__h12767 : x__h12346[7:0]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d503 =
	     (guard__h11843 == 2'b0 || requestR[191]) ?
	       sfd___3__h11833[63:41] :
	       _theResult___sfd__h12257 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d505 =
	     (guard__h11843 == 2'b0) ?
	       sfd___3__h11833[63:41] :
	       (requestR[191] ?
		  _theResult___sfd__h12257 :
		  sfd___3__h11833[63:41]) ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d518 =
	     (guard__h12331 == 2'b0 || requestR[191]) ?
	       sfd___3__h11833[62:40] :
	       _theResult___sfd__h12768 ;
  assign IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d520 =
	     (guard__h12331 == 2'b0) ?
	       sfd___3__h11833[62:40] :
	       (requestR[191] ?
		  _theResult___sfd__h12768 :
		  sfd___3__h11833[62:40]) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1947 =
	     (sV2_exp__h926 == 8'd255 && sV2_sfd__h927[22] ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1916) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       (IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d1920 ?
		  requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
		  IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1945) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1951 =
	     (sV2_exp__h926 == 8'd255 && sV2_sfd__h927 != 23'd0 &&
	      !sV2_sfd__h927[22]) ?
	       res__h41909 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1950 ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1961 =
	     IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d1920 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1960 ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1963 =
	     (sV2_exp__h926 == 8'd255 && sV2_sfd__h927[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       (IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1916 ?
		  requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
		  IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1961) ;
  assign IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1967 =
	     (sV2_exp__h926 == 8'd255 && sV2_sfd__h927 != 23'd0 &&
	      !sV2_sfd__h927[22]) ?
	       res__h41909 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1966 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1664 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1593 :
	       ((sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
		  64'd0 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1662) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1812 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1749 :
	       ((sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1810) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1948 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22]) ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1947 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1950 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22] &&
	      sV2_exp__h926 == 8'd255 &&
	      sV2_sfd__h927[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1948 } ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1952 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	      !sV1_sfd__h824[22]) ?
	       res__h41672 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1951 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1964 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22]) ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1963 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1966 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22] &&
	      sV2_exp__h926 == 8'd255 &&
	      sV2_sfd__h927[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1964 } ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1968 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	      !sV1_sfd__h824[22]) ?
	       res__h41672 :
	       IF_IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF__ETC___d1967 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2038 =
	     (sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
	       res___1__h50314 :
	       ((sV1_exp__h823 == 8'd0) ? res___1__h50333 : res__h50349) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2039 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
	       res___1__h50304 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2038 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4273 =
	     ((sV1_exp__h823 == 8'd0) ?
		(sV1_sfd__h824[22] ?
		   6'd2 :
		   (sV1_sfd__h824[21] ?
		      6'd3 :
		      (sV1_sfd__h824[20] ?
			 6'd4 :
			 (sV1_sfd__h824[19] ?
			    6'd5 :
			    (sV1_sfd__h824[18] ?
			       6'd6 :
			       (sV1_sfd__h824[17] ?
				  6'd7 :
				  (sV1_sfd__h824[16] ?
				     6'd8 :
				     (sV1_sfd__h824[15] ?
					6'd9 :
					(sV1_sfd__h824[14] ?
					   6'd10 :
					   (sV1_sfd__h824[13] ?
					      6'd11 :
					      (sV1_sfd__h824[12] ?
						 6'd12 :
						 (sV1_sfd__h824[11] ?
						    6'd13 :
						    (sV1_sfd__h824[10] ?
						       6'd14 :
						       (sV1_sfd__h824[9] ?
							  6'd15 :
							  (sV1_sfd__h824[8] ?
							     6'd16 :
							     (sV1_sfd__h824[7] ?
								6'd17 :
								(sV1_sfd__h824[6] ?
								   6'd18 :
								   (sV1_sfd__h824[5] ?
								      6'd19 :
								      (sV1_sfd__h824[4] ?
									 6'd20 :
									 (sV1_sfd__h824[3] ?
									    6'd21 :
									    (sV1_sfd__h824[2] ?
									       6'd22 :
									       (sV1_sfd__h824[1] ?
										  6'd23 :
										  (sV1_sfd__h824[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4645 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	      (sV1_exp__h823 == 8'd255 || sV1_exp__h823 == 8'd0) &&
	      sV1_sfd__h824 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h823 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d4311 :
		  IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4643) ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4809 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       _theResult___snd_fst_sfd__h148296 :
	       _theResult___fst_sfd__h186213 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4843 =
	     (sV1_exp__h823 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4822[4] :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 &&
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4839[4] ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4846 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	       !sV1_sfd__h824[22] :
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4843 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4853 =
	     (sV1_exp__h823 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4822[3] :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 &&
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4839[3] ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4867 =
	     (sV1_exp__h823 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4822[2] :
	       !SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 ||
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4865 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4879 =
	     (sV1_exp__h823 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 ||
		_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4822[1]) :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 &&
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4877 ;
  assign IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4891 =
	     (sV1_exp__h823 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 &&
	       _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4822[0] :
	       !SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 ||
	       IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4889 ;
  assign IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1210 =
	     sfd__h23750[31] ?
	       6'd0 :
	       (sfd__h23750[30] ?
		  6'd1 :
		  (sfd__h23750[29] ?
		     6'd2 :
		     (sfd__h23750[28] ?
			6'd3 :
			(sfd__h23750[27] ?
			   6'd4 :
			   (sfd__h23750[26] ?
			      6'd5 :
			      (sfd__h23750[25] ?
				 6'd6 :
				 (sfd__h23750[24] ?
				    6'd7 :
				    (sfd__h23750[23] ?
				       6'd8 :
				       (sfd__h23750[22] ?
					  6'd9 :
					  (sfd__h23750[21] ?
					     6'd10 :
					     (sfd__h23750[20] ?
						6'd11 :
						(sfd__h23750[19] ?
						   6'd12 :
						   (sfd__h23750[18] ?
						      6'd13 :
						      (sfd__h23750[17] ?
							 6'd14 :
							 (sfd__h23750[16] ?
							    6'd15 :
							    (sfd__h23750[15] ?
							       6'd16 :
							       (sfd__h23750[14] ?
								  6'd17 :
								  (sfd__h23750[13] ?
								     6'd18 :
								     (sfd__h23750[12] ?
									6'd19 :
									(sfd__h23750[11] ?
									   6'd20 :
									   (sfd__h23750[10] ?
									      6'd21 :
									      (sfd__h23750[9] ?
										 6'd22 :
										 (sfd__h23750[8] ?
										    6'd23 :
										    (sfd__h23750[7] ?
										       6'd24 :
										       (sfd__h23750[6] ?
											  6'd25 :
											  (sfd__h23750[5] ?
											     6'd26 :
											     (sfd__h23750[4] ?
												6'd27 :
												(sfd__h23750[3] ?
												   6'd28 :
												   (sfd__h23750[2] ?
												      6'd29 :
												      (sfd__h23750[1] ?
													 6'd30 :
													 (sfd__h23750[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d2141 =
	     sfd__h23750[31] ?
	       6'd0 :
	       (sfd__h23750[30] ?
		  6'd1 :
		  (sfd__h23750[29] ?
		     6'd2 :
		     (sfd__h23750[28] ?
			6'd3 :
			(sfd__h23750[27] ?
			   6'd4 :
			   (sfd__h23750[26] ?
			      6'd5 :
			      (sfd__h23750[25] ?
				 6'd6 :
				 (sfd__h23750[24] ?
				    6'd7 :
				    (sfd__h23750[23] ?
				       6'd8 :
				       (sfd__h23750[22] ?
					  6'd9 :
					  (sfd__h23750[21] ?
					     6'd10 :
					     (sfd__h23750[20] ?
						6'd11 :
						(sfd__h23750[19] ?
						   6'd12 :
						   (sfd__h23750[18] ?
						      6'd13 :
						      (sfd__h23750[17] ?
							 6'd14 :
							 (sfd__h23750[16] ?
							    6'd15 :
							    (sfd__h23750[15] ?
							       6'd16 :
							       (sfd__h23750[14] ?
								  6'd17 :
								  (sfd__h23750[13] ?
								     6'd18 :
								     (sfd__h23750[12] ?
									6'd19 :
									(sfd__h23750[11] ?
									   6'd20 :
									   (sfd__h23750[10] ?
									      6'd21 :
									      (sfd__h23750[9] ?
										 6'd22 :
										 (sfd__h23750[8] ?
										    6'd23 :
										    (sfd__h23750[7] ?
										       6'd24 :
										       (sfd__h23750[6] ?
											  6'd25 :
											  (sfd__h23750[5] ?
											     6'd26 :
											     (sfd__h23750[4] ?
												6'd27 :
												(sfd__h23750[3] ?
												   6'd28 :
												   (sfd__h23750[2] ?
												      6'd29 :
												      (sfd__h23750[1] ?
													 6'd30 :
													 (sfd__h23750[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382 =
	     sfd__h2228[63] ?
	       7'd0 :
	       (sfd__h2228[62] ?
		  7'd1 :
		  (sfd__h2228[61] ?
		     7'd2 :
		     (sfd__h2228[60] ?
			7'd3 :
			(sfd__h2228[59] ?
			   7'd4 :
			   (sfd__h2228[58] ?
			      7'd5 :
			      (sfd__h2228[57] ?
				 7'd6 :
				 (sfd__h2228[56] ?
				    7'd7 :
				    (sfd__h2228[55] ?
				       7'd8 :
				       (sfd__h2228[54] ?
					  7'd9 :
					  (sfd__h2228[53] ?
					     7'd10 :
					     (sfd__h2228[52] ?
						7'd11 :
						(sfd__h2228[51] ?
						   7'd12 :
						   (sfd__h2228[50] ?
						      7'd13 :
						      (sfd__h2228[49] ?
							 7'd14 :
							 (sfd__h2228[48] ?
							    7'd15 :
							    (sfd__h2228[47] ?
							       7'd16 :
							       (sfd__h2228[46] ?
								  7'd17 :
								  (sfd__h2228[45] ?
								     7'd18 :
								     (sfd__h2228[44] ?
									7'd19 :
									(sfd__h2228[43] ?
									   7'd20 :
									   (sfd__h2228[42] ?
									      7'd21 :
									      (sfd__h2228[41] ?
										 7'd22 :
										 (sfd__h2228[40] ?
										    7'd23 :
										    (sfd__h2228[39] ?
										       7'd24 :
										       (sfd__h2228[38] ?
											  7'd25 :
											  (sfd__h2228[37] ?
											     7'd26 :
											     (sfd__h2228[36] ?
												7'd27 :
												(sfd__h2228[35] ?
												   7'd28 :
												   (sfd__h2228[34] ?
												      7'd29 :
												      (sfd__h2228[33] ?
													 7'd30 :
													 (sfd__h2228[32] ?
													    7'd31 :
													    (sfd__h2228[31] ?
													       7'd32 :
													       (sfd__h2228[30] ?
														  7'd33 :
														  (sfd__h2228[29] ?
														     7'd34 :
														     (sfd__h2228[28] ?
															7'd35 :
															(sfd__h2228[27] ?
															   7'd36 :
															   (sfd__h2228[26] ?
															      7'd37 :
															      (sfd__h2228[25] ?
																 7'd38 :
																 (sfd__h2228[24] ?
																    7'd39 :
																    (sfd__h2228[23] ?
																       7'd40 :
																       (sfd__h2228[22] ?
																	  7'd41 :
																	  (sfd__h2228[21] ?
																	     7'd42 :
																	     (sfd__h2228[20] ?
																		7'd43 :
																		(sfd__h2228[19] ?
																		   7'd44 :
																		   (sfd__h2228[18] ?
																		      7'd45 :
																		      (sfd__h2228[17] ?
																			 7'd46 :
																			 (sfd__h2228[16] ?
																			    7'd47 :
																			    (sfd__h2228[15] ?
																			       7'd48 :
																			       (sfd__h2228[14] ?
																				  7'd49 :
																				  (sfd__h2228[13] ?
																				     7'd50 :
																				     (sfd__h2228[12] ?
																					7'd51 :
																					(sfd__h2228[11] ?
																					   7'd52 :
																					   (sfd__h2228[10] ?
																					      7'd53 :
																					      (sfd__h2228[9] ?
																						 7'd54 :
																						 (sfd__h2228[8] ?
																						    7'd55 :
																						    (sfd__h2228[7] ?
																						       7'd56 :
																						       (sfd__h2228[6] ?
																							  7'd57 :
																							  (sfd__h2228[5] ?
																							     7'd58 :
																							     (sfd__h2228[4] ?
																								7'd59 :
																								(sfd__h2228[3] ?
																								   7'd60 :
																								   (sfd__h2228[2] ?
																								      7'd61 :
																								      (sfd__h2228[1] ?
																									 7'd62 :
																									 (sfd__h2228[0] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1660 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1633 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1654 ?
		  ((x__h37200[88:25] == 64'h7FFFFFFFFFFFFFFF) ?
		     x__h37200[88:25] :
		     x__h37200[88:25] + 64'd1) :
		  x__h37200[88:25]) :
	       64'd0 ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1662 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 ==
	      20'd1048513) ?
	       ((_theResult_____2__h36241[64:63] == 2'b11) ?
		  _theResult_____2__h36241[63:0] :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1593) :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1631[19] ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1593 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1660) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1685 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 ==
	      20'd1048513) ?
	       _theResult_____2__h36241[64:63] == 2'b11 &&
	       guard__h36239 != 2'd0 :
	       !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1631[19] &&
	       (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1633 ||
		guard__h37014 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1722 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1697 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1716 ?
		  ((x__h38461[88:25] == 64'hFFFFFFFFFFFFFFFF) ?
		     x__h38461[88:25] :
		     x__h38461[88:25] + 64'd1) :
		  x__h38461[88:25]) :
	       64'd0 ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1808 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1781 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1802 ?
		  ((x__h39654[56:25] == 32'h7FFFFFFF) ?
		     x__h39654[56:25] :
		     x__h39654[56:25] + 32'd1) :
		  x__h39654[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1810 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 ==
	      20'd1048545) ?
	       ((_theResult_____2__h38919[32:31] == 2'b11) ?
		  _theResult_____2__h38919[31:0] :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1749) :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1779[19] ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1749 :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1808) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1828 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 ==
	      20'd1048545) ?
	       _theResult_____2__h38919[32:31] == 2'b11 &&
	       guard__h38917 != 2'd0 :
	       !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1779[19] &&
	       (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1781 ||
		guard__h39468 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1864 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1839 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1858 ?
		  ((x__h40677[56:25] == 32'hFFFFFFFF) ?
		     x__h40677[56:25] :
		     x__h40677[56:25] + 32'd1) :
		  x__h40677[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2546 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2519 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2540 ?
		  ((x__h71861[85:54] == 32'h7FFFFFFF) ?
		     x__h71861[85:54] :
		     x__h71861[85:54] + 32'd1) :
		  x__h71861[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2548 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 ==
	      24'd16777185) ?
	       ((_theResult_____2__h71126[32:31] == 2'b11) ?
		  _theResult_____2__h71126[31:0] :
		  IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2479) :
	       (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2517[23] ?
		  IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2479 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2546) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2572 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 ==
	      24'd16777185) ?
	       _theResult_____2__h71126[32:31] == 2'b11 &&
	       guard__h71124 != 2'd0 :
	       !NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2517[23] &&
	       (!NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2519 ||
		guard__h71675 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2609 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2584 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2603 ?
		  ((x__h72884[85:54] == 32'hFFFFFFFF) ?
		     x__h72884[85:54] :
		     x__h72884[85:54] + 32'd1) :
		  x__h72884[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2994 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2967 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2988 ?
		  ((x__h96606[117:54] == 64'h7FFFFFFFFFFFFFFF) ?
		     x__h96606[117:54] :
		     x__h96606[117:54] + 64'd1) :
		  x__h96606[117:54]) :
	       64'd0 ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2996 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 ==
	      24'd16777153) ?
	       ((_theResult_____2__h95647[64:63] == 2'b11) ?
		  _theResult_____2__h95647[63:0] :
		  IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2935) :
	       (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2965[23] ?
		  IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2935 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2994) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d3013 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 ==
	      24'd16777153) ?
	       _theResult_____2__h95647[64:63] == 2'b11 &&
	       guard__h95645 != 2'd0 :
	       !NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2965[23] &&
	       (!NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2967 ||
		guard__h96420 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d3049 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3024 ?
	       (IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3043 ?
		  ((x__h97850[117:54] == 64'hFFFFFFFFFFFFFFFF) ?
		     x__h97850[117:54] :
		     x__h97850[117:54] + 64'd1) :
		  x__h97850[117:54]) :
	       64'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d2191 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2145 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2147) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2190 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_ETC___d4311 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 ||
	      _theResult___fst_exp__h167168 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4310 ;
  assign IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1945 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1944 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } :
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 ;
  assign IF_NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d1960 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1944 ?
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1940 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1929 ||
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1930 &&
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1931 :
	       !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1934 ||
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1930 &&
	       !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1936 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4607 =
	     ((SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q114[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q117[10],
		  SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q117 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4643 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 ?
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 ?
		  ((_theResult___fst_exp__h176669 == 11'd2047) ?
		     requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4599) :
		  ((_theResult___fst_exp__h185458 == 11'd2047) ?
		     requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4640)) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4865 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4839[2] :
	       _theResult___fst_exp__h186197 == 11'd2047 &&
	       _theResult___fst_sfd__h186198 == 52'd0 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4877 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4839[1] :
	       _theResult___fst_exp__h185458 == 11'd0 &&
	       guard__h177468 != 2'b0 ;
  assign IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4889 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4839[0] :
	       _theResult___fst_exp__h185458 != 11'd2047 &&
	       guard__h177468 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d3790 =
	     ((SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q86[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q89[7],
		  SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q89 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d3825 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 ?
	       ((_theResult___fst_exp__h135839 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3782) :
	       ((_theResult___fst_exp__h144512 == 8'd255) ?
		  requestR[191] :
		  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3823) ;
  assign IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4111 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4082[2] :
	       _theResult___fst_exp__h145048 == 8'd255 &&
	       _theResult___fst_sfd__h145049 == 23'd0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4124 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4082[1] :
	       _theResult___fst_exp__h144512 == 8'd0 &&
	       guard__h136435 != 2'b0 ;
  assign IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4137 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4082[0] :
	       _theResult___fst_exp__h144512 != 8'd255 &&
	       guard__h136435 != 2'b0 ;
  assign IF_requestR_BITS_126_TO_116_903_EQ_2047_904_AN_ETC___d4951 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_BITS_190_TO_180_472_EQ_0_480_AND_requ_ETC___d4920) ?
	       requestR[191:128] :
	       (requestR_BITS_126_TO_116_903_EQ_0_917_AND_requ_ETC___d4924 ?
		  requestR[127:64] :
		  res__h190814) ;
  assign IF_requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_T_ETC___d1920 =
	     sV2_exp__h926 == 8'd0 && sV2_sfd__h927 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h823 == 8'd0 &&
	     sV1_sfd__h824 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1315 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h23750[31] && !sfd__h23750[30] && !sfd__h23750[29] &&
	      !sfd__h23750[28] &&
	      !sfd__h23750[27] &&
	      !sfd__h23750[26] &&
	      !sfd__h23750[25] &&
	      !sfd__h23750[24] &&
	      !sfd__h23750[23] &&
	      !sfd__h23750[22] &&
	      !sfd__h23750[21] &&
	      !sfd__h23750[20] &&
	      !sfd__h23750[19] &&
	      !sfd__h23750[18] &&
	      !sfd__h23750[17] &&
	      !sfd__h23750[16] &&
	      !sfd__h23750[15] &&
	      !sfd__h23750[14] &&
	      !sfd__h23750[13] &&
	      !sfd__h23750[12] &&
	      !sfd__h23750[11] &&
	      !sfd__h23750[10] &&
	      !sfd__h23750[9] &&
	      !sfd__h23750[8] &&
	      !sfd__h23750[7] &&
	      !sfd__h23750[6] &&
	      !sfd__h23750[5] &&
	      !sfd__h23750[4] &&
	      !sfd__h23750[3] &&
	      !sfd__h23750[2] &&
	      !sfd__h23750[1] &&
	      !sfd__h23750[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h29655 ;
  assign IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1522 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h35710 ;
  assign IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2276 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2145 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2147) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h61011 ;
  assign IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2443 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2338 ||
	      _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2339) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h70591 ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_AND_r_ETC___d4965 =
	     requestR_BITS_190_TO_180_472_EQ_0_480_AND_requ_ETC___d4920 ?
	       requestR[127:64] :
	       (requestR_BITS_126_TO_116_903_EQ_0_917_AND_requ_ETC___d4924 ?
		  requestR[191:128] :
		  res__h195362) ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_AND_r_ETC___d5036 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h203554 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h203573 :
		  res__h203589) ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3460 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3827 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45__ETC___d3495 :
		  requestR[191]) :
	       (SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 ?
		  IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d3825 :
		  requestR[191]) ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4086 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4068 :
	       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 &&
	       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4082[4] ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4097 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4093 :
	       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 &&
	       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4082[3] ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4113 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4105 :
	       !SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 ||
	       IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4111 ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4126 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4120 :
	       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 &&
	       IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4124 ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4139 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4133 :
	       !SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 ||
	       IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d4137 ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_2047_473_AN_ETC___d2550 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2479 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2548) ;
  assign IF_requestR_BITS_190_TO_180_472_EQ_2047_473_AN_ETC___d2998 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2935 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  64'd0 :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2996) ;
  assign IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d2735 =
	     (requestR[191:128] == 64'd0 ||
	      !sfd__h2228[63] && !sfd__h2228[62] && !sfd__h2228[61] &&
	      !sfd__h2228[60] &&
	      !sfd__h2228[59] &&
	      !sfd__h2228[58] &&
	      !sfd__h2228[57] &&
	      !sfd__h2228[56] &&
	      !sfd__h2228[55] &&
	      !sfd__h2228[54] &&
	      !sfd__h2228[53] &&
	      !sfd__h2228[52] &&
	      !sfd__h2228[51] &&
	      !sfd__h2228[50] &&
	      !sfd__h2228[49] &&
	      !sfd__h2228[48] &&
	      !sfd__h2228[47] &&
	      !sfd__h2228[46] &&
	      !sfd__h2228[45] &&
	      !sfd__h2228[44] &&
	      !sfd__h2228[43] &&
	      !sfd__h2228[42] &&
	      !sfd__h2228[41] &&
	      !sfd__h2228[40] &&
	      !sfd__h2228[39] &&
	      !sfd__h2228[38] &&
	      !sfd__h2228[37] &&
	      !sfd__h2228[36] &&
	      !sfd__h2228[35] &&
	      !sfd__h2228[34] &&
	      !sfd__h2228[33] &&
	      !sfd__h2228[32] &&
	      !sfd__h2228[31] &&
	      !sfd__h2228[30] &&
	      !sfd__h2228[29] &&
	      !sfd__h2228[28] &&
	      !sfd__h2228[27] &&
	      !sfd__h2228[26] &&
	      !sfd__h2228[25] &&
	      !sfd__h2228[24] &&
	      !sfd__h2228[23] &&
	      !sfd__h2228[22] &&
	      !sfd__h2228[21] &&
	      !sfd__h2228[20] &&
	      !sfd__h2228[19] &&
	      !sfd__h2228[18] &&
	      !sfd__h2228[17] &&
	      !sfd__h2228[16] &&
	      !sfd__h2228[15] &&
	      !sfd__h2228[14] &&
	      !sfd__h2228[13] &&
	      !sfd__h2228[12] &&
	      !sfd__h2228[11] &&
	      !sfd__h2228[10] &&
	      !sfd__h2228[9] &&
	      !sfd__h2228[8] &&
	      !sfd__h2228[7] &&
	      !sfd__h2228[6] &&
	      !sfd__h2228[5] &&
	      !sfd__h2228[4] &&
	      !sfd__h2228[3] &&
	      !sfd__h2228[2] &&
	      !sfd__h2228[1] &&
	      !sfd__h2228[0]) ?
	       11'd0 :
	       _theResult___snd_fst_exp__h84224 ;
  assign IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d494 =
	     (requestR[191:128] == 64'd0 ||
	      !sfd__h2228[63] && !sfd__h2228[62] && !sfd__h2228[61] &&
	      !sfd__h2228[60] &&
	      !sfd__h2228[59] &&
	      !sfd__h2228[58] &&
	      !sfd__h2228[57] &&
	      !sfd__h2228[56] &&
	      !sfd__h2228[55] &&
	      !sfd__h2228[54] &&
	      !sfd__h2228[53] &&
	      !sfd__h2228[52] &&
	      !sfd__h2228[51] &&
	      !sfd__h2228[50] &&
	      !sfd__h2228[49] &&
	      !sfd__h2228[48] &&
	      !sfd__h2228[47] &&
	      !sfd__h2228[46] &&
	      !sfd__h2228[45] &&
	      !sfd__h2228[44] &&
	      !sfd__h2228[43] &&
	      !sfd__h2228[42] &&
	      !sfd__h2228[41] &&
	      !sfd__h2228[40] &&
	      !sfd__h2228[39] &&
	      !sfd__h2228[38] &&
	      !sfd__h2228[37] &&
	      !sfd__h2228[36] &&
	      !sfd__h2228[35] &&
	      !sfd__h2228[34] &&
	      !sfd__h2228[33] &&
	      !sfd__h2228[32] &&
	      !sfd__h2228[31] &&
	      !sfd__h2228[30] &&
	      !sfd__h2228[29] &&
	      !sfd__h2228[28] &&
	      !sfd__h2228[27] &&
	      !sfd__h2228[26] &&
	      !sfd__h2228[25] &&
	      !sfd__h2228[24] &&
	      !sfd__h2228[23] &&
	      !sfd__h2228[22] &&
	      !sfd__h2228[21] &&
	      !sfd__h2228[20] &&
	      !sfd__h2228[19] &&
	      !sfd__h2228[18] &&
	      !sfd__h2228[17] &&
	      !sfd__h2228[16] &&
	      !sfd__h2228[15] &&
	      !sfd__h2228[14] &&
	      !sfd__h2228[13] &&
	      !sfd__h2228[12] &&
	      !sfd__h2228[11] &&
	      !sfd__h2228[10] &&
	      !sfd__h2228[9] &&
	      !sfd__h2228[8] &&
	      !sfd__h2228[7] &&
	      !sfd__h2228[6] &&
	      !sfd__h2228[5] &&
	      !sfd__h2228[4] &&
	      !sfd__h2228[3] &&
	      !sfd__h2228[2] &&
	      !sfd__h2228[1] &&
	      !sfd__h2228[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h12837 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1593 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'h8000000000000000 :
	       64'h7FFFFFFFFFFFFFFF ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596 =
	     sV1_exp__h823 - 8'd127 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h36303 :
	       b__h36303 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1724 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
	       64'h0 :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1695[19] ?
		  64'hFFFFFFFFFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1722) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1749 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h38981 :
	       b__h38981 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1866 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
	       32'h0 :
	       (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1837[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1864) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1906 =
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	     !sV1_sfd__h824[22] &&
	     sV2_exp__h926 == 8'd255 &&
	     sV2_sfd__h927 != 23'd0 &&
	     !sV2_sfd__h927[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1916 =
	     sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h926 == 8'd0 &&
	     sV2_sfd__h927 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1929 =
	     sV1_exp__h823 < sV2_exp__h926 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1930 =
	     sV1_exp__h823 == sV2_exp__h926 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1931 =
	     sV1_sfd__h824 < sV2_sfd__h927 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1934 =
	     sV1_exp__h823 <= sV2_exp__h926 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1936 =
	     sV1_sfd__h824 <= sV2_sfd__h927 ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1954 =
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	     !sV1_sfd__h824[22] ||
	     sV2_exp__h926 == 8'd255 && sV2_sfd__h927 != 23'd0 &&
	     !sV2_sfd__h927[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1991 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1954 ||
	     sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22] ||
	     sV2_exp__h926 == 8'd255 && sV2_sfd__h927[22] ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2002 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1934 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1930 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1936) &&
	     !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1929 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1930 ||
	      !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1931) ;
  assign IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2006 =
	     sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0 &&
	     sV2_exp__h926 == 8'd0 &&
	     sV2_sfd__h927 == 23'd0 ||
	     NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d2005 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1239 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8664_0b0_requestR_BIT_159_0b1_reques_ETC__q35 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1259 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9149_0b0_requestR_BIT_159_0b1_reques_ETC__q36 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1622 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h36239 == 2'b10) ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605[24] :
		  guard__h36239 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h36239 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605[88] &&
		  guard__h36239 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1654 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h37014 == 2'b10) ?
		  x__h37200[25] :
		  guard__h37014 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h37014 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h37200[88] &&
		  guard__h37014 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1716 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h38243 == 2'b10) ?
		  x__h38461[25] :
		  guard__h38243 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h38243 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1770 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h38917 == 2'b10) ?
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753[24] :
		  guard__h38917 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h38917 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753[56] &&
		  guard__h38917 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1802 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h39468 == 2'b10) ?
		  x__h39654[25] :
		  guard__h39468 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h39468 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h39654[56] &&
		  guard__h39468 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1858 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h40459 == 2'b10) ?
		  x__h40677[25] :
		  guard__h40459 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h40459 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2168 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9619_0b0_requestR_BIT_159_0b1_reques_ETC__q50 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2188 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0307_0b0_requestR_BIT_159_0b1_reques_ETC__q51 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2508 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h71124 == 2'b10) ?
		  IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491[53] :
		  guard__h71124 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h71124 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491[85] &&
		  guard__h71124 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2540 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h71675 == 2'b10) ?
		  x__h71861[54] :
		  guard__h71675 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h71675 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h71861[85] &&
		  guard__h71675 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2603 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h72666 == 2'b10) ?
		  x__h72884[54] :
		  guard__h72666 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h72666 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2660 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2827_0b0_requestR_BIT_191_0b1_reques_ETC__q67 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2680 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3515_0b0_requestR_BIT_191_0b1_reques_ETC__q68 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2956 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h95645 == 2'b10) ?
		  IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939[53] :
		  guard__h95645 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h95645 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939[117] &&
		  guard__h95645 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2988 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h96420 == 2'b10) ?
		  x__h96606[54] :
		  guard__h96420 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h96420 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h96606[117] &&
		  guard__h96420 != 2'd0) ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3043 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       ((guard__h97632 == 2'b10) ?
		  x__h97850[54] :
		  guard__h97632 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h97632 != 2'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3404 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10003_0b0_requestR_BIT_191_0b1_reque_ETC__q108 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3493 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard18696_0b0_requestR_BIT_191_0b1_reque_ETC__q109 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3782 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard27613_0b0_requestR_BIT_191_0b1_reque_ETC__q110 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3823 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard36435_0b0_requestR_BIT_191_0b1_reque_ETC__q111 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d418 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1843_0b0_requestR_BIT_191_0b1_reques_ETC__q16 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4310 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard59207_0b0_requestR_BITS_191_TO_160_E_ETC__q132 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4309 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d438 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2331_0b0_requestR_BIT_191_0b1_reques_ETC__q17 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4599 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard68443_0b0_requestR_BITS_191_TO_160_E_ETC__q133 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4309 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d4640 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard77468_0b0_requestR_BITS_191_TO_160_E_ETC__q134 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4309 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h34721 == 2'b0) ? 8'd0 : _theResult___exp__h35131) :
	       8'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2370 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h69201 == 2'b0) ? 11'd0 : _theResult___exp__h69814) :
	       11'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2831 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h93725 == 2'b0) ? 11'd0 : _theResult___exp__h94338) :
	       11'd0 ;
  assign IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d910 =
	     (requestR[194:192] == 3'h3) ?
	       ((guard__h22351 == 2'b0) ? 8'd0 : _theResult___exp__h22761) :
	       8'd0 ;
  assign IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1443 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d2334 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1390 =
	     (sfd__h23750[31] || sfd__h23750[30] || sfd__h23750[29] ||
	      sfd__h23750[28] ||
	      sfd__h23750[27] ||
	      sfd__h23750[26] ||
	      sfd__h23750[25] ||
	      sfd__h23750[24] ||
	      sfd__h23750[23] ||
	      sfd__h23750[22] ||
	      sfd__h23750[21] ||
	      sfd__h23750[20] ||
	      sfd__h23750[19] ||
	      sfd__h23750[18] ||
	      sfd__h23750[17] ||
	      sfd__h23750[16] ||
	      sfd__h23750[15] ||
	      sfd__h23750[14] ||
	      sfd__h23750[13] ||
	      sfd__h23750[12] ||
	      sfd__h23750[11] ||
	      sfd__h23750[10] ||
	      sfd__h23750[9] ||
	      sfd__h23750[8] ||
	      sfd__h23750[7] ||
	      sfd__h23750[6] ||
	      sfd__h23750[5] ||
	      sfd__h23750[4] ||
	      sfd__h23750[3] ||
	      sfd__h23750[2] ||
	      sfd__h23750[1] ||
	      sfd__h23750[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 &&
	      _theResult___fst_exp__h29646 == 8'd255 &&
	      _theResult___fst_sfd__h29647 == 23'd0) ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1393 =
	     (sfd__h23750[31] || sfd__h23750[30] || sfd__h23750[29] ||
	      sfd__h23750[28] ||
	      sfd__h23750[27] ||
	      sfd__h23750[26] ||
	      sfd__h23750[25] ||
	      sfd__h23750[24] ||
	      sfd__h23750[23] ||
	      sfd__h23750[22] ||
	      sfd__h23750[21] ||
	      sfd__h23750[20] ||
	      sfd__h23750[19] ||
	      sfd__h23750[18] ||
	      sfd__h23750[17] ||
	      sfd__h23750[16] ||
	      sfd__h23750[15] ||
	      sfd__h23750[14] ||
	      sfd__h23750[13] ||
	      sfd__h23750[12] ||
	      sfd__h23750[11] ||
	      sfd__h23750[10] ||
	      sfd__h23750[9] ||
	      sfd__h23750[8] ||
	      sfd__h23750[7] ||
	      sfd__h23750[6] ||
	      sfd__h23750[5] ||
	      sfd__h23750[4] ||
	      sfd__h23750[3] ||
	      sfd__h23750[2] ||
	      sfd__h23750[1] ||
	      sfd__h23750[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 ;
  assign IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1402 =
	     (sfd__h23750[31] || sfd__h23750[30] || sfd__h23750[29] ||
	      sfd__h23750[28] ||
	      sfd__h23750[27] ||
	      sfd__h23750[26] ||
	      sfd__h23750[25] ||
	      sfd__h23750[24] ||
	      sfd__h23750[23] ||
	      sfd__h23750[22] ||
	      sfd__h23750[21] ||
	      sfd__h23750[20] ||
	      sfd__h23750[19] ||
	      sfd__h23750[18] ||
	      sfd__h23750[17] ||
	      sfd__h23750[16] ||
	      sfd__h23750[15] ||
	      sfd__h23750[14] ||
	      sfd__h23750[13] ||
	      sfd__h23750[12] ||
	      sfd__h23750[11] ||
	      sfd__h23750[10] ||
	      sfd__h23750[9] ||
	      sfd__h23750[8] ||
	      sfd__h23750[7] ||
	      sfd__h23750[6] ||
	      sfd__h23750[5] ||
	      sfd__h23750[4] ||
	      sfd__h23750[3] ||
	      sfd__h23750[2] ||
	      sfd__h23750[1] ||
	      sfd__h23750[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1399 ;
  assign IF_requestR_BIT_191_25_OR_requestR_BITS_190_TO_ETC___d2611 =
	     (requestR[191] ||
	      requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'h0 :
	       (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2582[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2609) ;
  assign IF_requestR_BIT_191_25_OR_requestR_BITS_190_TO_ETC___d3051 =
	     (requestR[191] ||
	      requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       64'h0 :
	       (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3022[23] ?
		  64'hFFFFFFFFFFFFFFFF :
		  IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d3049) ;
  assign IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875 =
	     requestR[191] ?
	       7'd0 :
	       (requestR[190] ?
		  7'd1 :
		  (requestR[189] ?
		     7'd2 :
		     (requestR[188] ?
			7'd3 :
			(requestR[187] ?
			   7'd4 :
			   (requestR[186] ?
			      7'd5 :
			      (requestR[185] ?
				 7'd6 :
				 (requestR[184] ?
				    7'd7 :
				    (requestR[183] ?
				       7'd8 :
				       (requestR[182] ?
					  7'd9 :
					  (requestR[181] ?
					     7'd10 :
					     (requestR[180] ?
						7'd11 :
						(requestR[179] ?
						   7'd12 :
						   (requestR[178] ?
						      7'd13 :
						      (requestR[177] ?
							 7'd14 :
							 (requestR[176] ?
							    7'd15 :
							    (requestR[175] ?
							       7'd16 :
							       (requestR[174] ?
								  7'd17 :
								  (requestR[173] ?
								     7'd18 :
								     (requestR[172] ?
									7'd19 :
									(requestR[171] ?
									   7'd20 :
									   (requestR[170] ?
									      7'd21 :
									      (requestR[169] ?
										 7'd22 :
										 (requestR[168] ?
										    7'd23 :
										    (requestR[167] ?
										       7'd24 :
										       (requestR[166] ?
											  7'd25 :
											  (requestR[165] ?
											     7'd26 :
											     (requestR[164] ?
												7'd27 :
												(requestR[163] ?
												   7'd28 :
												   (requestR[162] ?
												      7'd29 :
												      (requestR[161] ?
													 7'd30 :
													 (requestR[160] ?
													    7'd31 :
													    (requestR[159] ?
													       7'd32 :
													       (requestR[158] ?
														  7'd33 :
														  (requestR[157] ?
														     7'd34 :
														     (requestR[156] ?
															7'd35 :
															(requestR[155] ?
															   7'd36 :
															   (requestR[154] ?
															      7'd37 :
															      (requestR[153] ?
																 7'd38 :
																 (requestR[152] ?
																    7'd39 :
																    (requestR[151] ?
																       7'd40 :
																       (requestR[150] ?
																	  7'd41 :
																	  (requestR[149] ?
																	     7'd42 :
																	     (requestR[148] ?
																		7'd43 :
																		(requestR[147] ?
																		   7'd44 :
																		   (requestR[146] ?
																		      7'd45 :
																		      (requestR[145] ?
																			 7'd46 :
																			 (requestR[144] ?
																			    7'd47 :
																			    (requestR[143] ?
																			       7'd48 :
																			       (requestR[142] ?
																				  7'd49 :
																				  (requestR[141] ?
																				     7'd50 :
																				     (requestR[140] ?
																					7'd51 :
																					(requestR[139] ?
																					   7'd52 :
																					   (requestR[138] ?
																					      7'd53 :
																					      (requestR[137] ?
																						 7'd54 :
																						 (requestR[136] ?
																						    7'd55 :
																						    (requestR[135] ?
																						       7'd56 :
																						       (requestR[134] ?
																							  7'd57 :
																							  (requestR[133] ?
																							     7'd58 :
																							     (requestR[132] ?
																								7'd59 :
																								(requestR[131] ?
																								   7'd60 :
																								   (requestR[130] ?
																								      7'd61 :
																								      (requestR[129] ?
																									 7'd62 :
																									 (requestR[128] ?
																									    7'd63 :
																									    7'd64))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ;
  assign IF_requestR_BIT_191_25_THEN_2147483648_ELSE_21_ETC___d2479 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_BIT_191_25_THEN_922337203685477580_ETC___d2935 =
	     requestR[191] ? 64'h8000000000000000 : 64'h7FFFFFFFFFFFFFFF ;
  assign IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491 =
	     requestR[191] ? -b__h71188 : b__h71188 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939 =
	     requestR[191] ? -b__h95709 : b__h95709 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2778 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     (!_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2638 ||
	      !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2640 &&
	      !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2643 &&
	      _theResult___fst_exp__h84215 == 11'd2047 &&
	      _theResult___fst_sfd__h84216 == 52'd0) ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2781 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2638 &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2640 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2790 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2638 &&
	     !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2640 &&
	     IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2787 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d601 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     (!_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 ||
	      !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 &&
	      !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 &&
	      _theResult___fst_exp__h12828 == 8'd255 &&
	      _theResult___fst_sfd__h12829 == 23'd0) ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d604 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 ;
  assign IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d613 =
	     (sfd__h2228[63] || sfd__h2228[62] || sfd__h2228[61] ||
	      sfd__h2228[60] ||
	      sfd__h2228[59] ||
	      sfd__h2228[58] ||
	      sfd__h2228[57] ||
	      sfd__h2228[56] ||
	      sfd__h2228[55] ||
	      sfd__h2228[54] ||
	      sfd__h2228[53] ||
	      sfd__h2228[52] ||
	      sfd__h2228[51] ||
	      sfd__h2228[50] ||
	      sfd__h2228[49] ||
	      sfd__h2228[48] ||
	      sfd__h2228[47] ||
	      sfd__h2228[46] ||
	      sfd__h2228[45] ||
	      sfd__h2228[44] ||
	      sfd__h2228[43] ||
	      sfd__h2228[42] ||
	      sfd__h2228[41] ||
	      sfd__h2228[40] ||
	      sfd__h2228[39] ||
	      sfd__h2228[38] ||
	      sfd__h2228[37] ||
	      sfd__h2228[36] ||
	      sfd__h2228[35] ||
	      sfd__h2228[34] ||
	      sfd__h2228[33] ||
	      sfd__h2228[32] ||
	      sfd__h2228[31] ||
	      sfd__h2228[30] ||
	      sfd__h2228[29] ||
	      sfd__h2228[28] ||
	      sfd__h2228[27] ||
	      sfd__h2228[26] ||
	      sfd__h2228[25] ||
	      sfd__h2228[24] ||
	      sfd__h2228[23] ||
	      sfd__h2228[22] ||
	      sfd__h2228[21] ||
	      sfd__h2228[20] ||
	      sfd__h2228[19] ||
	      sfd__h2228[18] ||
	      sfd__h2228[17] ||
	      sfd__h2228[16] ||
	      sfd__h2228[15] ||
	      sfd__h2228[14] ||
	      sfd__h2228[13] ||
	      sfd__h2228[12] ||
	      sfd__h2228[11] ||
	      sfd__h2228[10] ||
	      sfd__h2228[9] ||
	      sfd__h2228[8] ||
	      sfd__h2228[7] ||
	      sfd__h2228[6] ||
	      sfd__h2228[5] ||
	      sfd__h2228[4] ||
	      sfd__h2228[3] ||
	      sfd__h2228[2] ||
	      sfd__h2228[1] ||
	      sfd__h2228[0]) &&
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 &&
	     !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 &&
	     IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d610 ;
  assign IF_requestR_BIT_191_25_THEN_NOT_requestR_BITS__ETC___d4944 =
	     requestR[191] ?
	       !requestR_BITS_190_TO_180_472_ULE_requestR_BITS_ETC___d4933 ||
	       requestR_BITS_190_TO_180_472_EQ_requestR_BITS__ETC___d4935 &&
	       !requestR_BITS_179_TO_128_474_ULE_requestR_BITS_ETC___d4936 :
	       requestR_BITS_190_TO_180_472_ULT_requestR_BITS_ETC___d4940 ||
	       requestR_BITS_190_TO_180_472_EQ_requestR_BITS__ETC___d4935 &&
	       requestR_BITS_179_TO_128_474_ULT_requestR_BITS_ETC___d4941 ;
  assign IF_sfd___31833_BIT_10_THEN_2_ELSE_0__q9 =
	     sfd___3__h11833[10] ? 2'd2 : 2'd0 ;
  assign IF_sfd___31833_BIT_11_THEN_2_ELSE_0__q8 =
	     sfd___3__h11833[11] ? 2'd2 : 2'd0 ;
  assign IF_sfd___31833_BIT_39_THEN_2_ELSE_0__q7 =
	     sfd___3__h11833[39] ? 2'd2 : 2'd0 ;
  assign IF_sfd___31833_BIT_40_THEN_2_ELSE_0__q6 =
	     sfd___3__h11833[40] ? 2'd2 : 2'd0 ;
  assign IF_sfd___32341_BIT_10_THEN_2_ELSE_0__q22 =
	     sfd___3__h22341[10] ? 2'd2 : 2'd0 ;
  assign IF_sfd___32341_BIT_11_THEN_2_ELSE_0__q21 =
	     sfd___3__h22341[11] ? 2'd2 : 2'd0 ;
  assign IF_sfd___32341_BIT_39_THEN_2_ELSE_0__q20 =
	     sfd___3__h22341[39] ? 2'd2 : 2'd0 ;
  assign IF_sfd___32341_BIT_40_THEN_2_ELSE_0__q19 =
	     sfd___3__h22341[40] ? 2'd2 : 2'd0 ;
  assign IF_sfd___34711_BIT_7_THEN_2_ELSE_0__q39 =
	     sfd___3__h34711[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___34711_BIT_8_THEN_2_ELSE_0__q38 =
	     sfd___3__h34711[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38654_BIT_7_THEN_2_ELSE_0__q28 =
	     sfd___3__h28654[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38654_BIT_8_THEN_2_ELSE_0__q27 =
	     sfd___3__h28654[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___39191_BIT_1_THEN_2_ELSE_0__q60 =
	     sfd___3__h69191[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___39191_BIT_2_THEN_2_ELSE_0__q59 =
	     sfd___3__h69191[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___39609_BIT_1_THEN_2_ELSE_0__q49 =
	     sfd___3__h59609[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___39609_BIT_2_THEN_2_ELSE_0__q48 =
	     sfd___3__h59609[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin18094_BIT_33_THEN_2_ELSE_0__q83 =
	     sfdin__h118094[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin35833_BIT_33_THEN_2_ELSE_0__q88 =
	     sfdin__h135833[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin76663_BIT_4_THEN_2_ELSE_0__q116 =
	     sfdin__h176663[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd26695_BIT_33_THEN_2_ELSE_0__q85 =
	     _theResult___snd__h126695[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd44458_BIT_33_THEN_2_ELSE_0__q91 =
	     _theResult___snd__h144458[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd67119_BIT_4_THEN_2_ELSE_0__q113 =
	     _theResult___snd__h167119[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd85404_BIT_4_THEN_2_ELSE_0__q119 =
	     _theResult___snd__h185404[4] ? 2'd2 : 2'd0 ;
  assign IF_x0677_BIT_24_THEN_2_ELSE_0__q47 = x__h40677[24] ? 2'd2 : 2'd0 ;
  assign IF_x1861_BIT_53_THEN_2_ELSE_0__q65 = x__h71861[53] ? 2'd2 : 2'd0 ;
  assign IF_x2884_BIT_53_THEN_2_ELSE_0__q66 = x__h72884[53] ? 2'd2 : 2'd0 ;
  assign IF_x6606_BIT_53_THEN_2_ELSE_0__q80 = x__h96606[53] ? 2'd2 : 2'd0 ;
  assign IF_x7200_BIT_24_THEN_2_ELSE_0__q44 = x__h37200[24] ? 2'd2 : 2'd0 ;
  assign IF_x7850_BIT_53_THEN_2_ELSE_0__q81 = x__h97850[53] ? 2'd2 : 2'd0 ;
  assign IF_x8461_BIT_24_THEN_2_ELSE_0__q45 = x__h38461[24] ? 2'd2 : 2'd0 ;
  assign IF_x9654_BIT_24_THEN_2_ELSE_0__q46 = x__h39654[24] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 =
	     -{ {12{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596[7]}},
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596 } ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1630 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 +
	     20'd64 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1631 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1630 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1633 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1631 ^
	      20'h80000) <=
	     20'd524352 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1695 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1630 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1697 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1695 ^
	      20'h80000) <=
	     20'd524352 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1778 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1779 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1778 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1781 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1779 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1837 =
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1778 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1839 =
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1837 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 =
	     -{ {13{requestR_BITS_190_TO_180_472_MINUS_1023___d2482[10]}},
		requestR_BITS_190_TO_180_472_MINUS_1023___d2482 } ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2516 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 +
	     24'd32 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2517 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2516 -
	     24'd2 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2519 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2517 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2582 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2516 -
	     24'd1 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2584 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2582 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2964 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 +
	     24'd64 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2965 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2964 -
	     24'd2 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2967 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2965 ^
	      24'h800000) <=
	     24'd8388672 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3022 =
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2964 -
	     24'd1 ;
  assign NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3024 =
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3022 ^
	      24'h800000) <=
	     24'd8388672 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4105 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4053[2] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d4065[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_ETC___d4133 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4053[0] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d4065[0]) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1674 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 ==
	       20'd1048513) ?
		_theResult_____2__h36241[64:63] != 2'b11 :
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1631[19] ||
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1633 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1654 &&
		x__h37200[88:25] == 64'h7FFFFFFFFFFFFFFF) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1740 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1695[19] &&
	     (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1697 ||
	      guard__h38243 != 2'd0) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1820 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1598 ==
	       20'd1048545) ?
		_theResult_____2__h38919[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1779[19] ||
		NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1781 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1802 &&
		x__h39654[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1881 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1837[19] &&
	     (!NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1839 ||
	      guard__h40459 != 2'd0) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1943 =
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0 ||
	      sV2_exp__h926 != 8'd0 ||
	      sV2_sfd__h927 != 23'd0) &&
	     requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1942 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1944 =
	     (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	     (sV2_exp__h926 != 8'd255 || sV2_sfd__h927 == 23'd0) &&
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1943 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2001 =
	     !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1929 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1930 ||
	      !IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1931) &&
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1934 &&
	     (!IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1930 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1936) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2007 =
	     (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	     (sV2_exp__h926 != 8'd255 || sV2_sfd__h927 == 23'd0) &&
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2006 ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2025 =
	     (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	     (sV2_exp__h926 != 8'd255 || sV2_sfd__h927 == 23'd0) &&
	     (requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1942 ||
	      IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2006) ;
  assign NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4246 =
	     !sV1_sfd__h824[21] && !sV1_sfd__h824[20] && !sV1_sfd__h824[19] &&
	     !sV1_sfd__h824[18] &&
	     !sV1_sfd__h824[17] &&
	     !sV1_sfd__h824[16] &&
	     !sV1_sfd__h824[15] &&
	     !sV1_sfd__h824[14] &&
	     !sV1_sfd__h824[13] &&
	     !sV1_sfd__h824[12] &&
	     !sV1_sfd__h824[11] &&
	     !sV1_sfd__h824[10] &&
	     !sV1_sfd__h824[9] &&
	     !sV1_sfd__h824[8] &&
	     !sV1_sfd__h824[7] &&
	     !sV1_sfd__h824[6] &&
	     !sV1_sfd__h824[5] &&
	     !sV1_sfd__h824[4] &&
	     !sV1_sfd__h824[3] &&
	     !sV1_sfd__h824[2] &&
	     !sV1_sfd__h824[1] &&
	     !sV1_sfd__h824[0] ;
  assign NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d1218 =
	     !sfd__h23750[31] && !sfd__h23750[30] && !sfd__h23750[29] &&
	     !sfd__h23750[28] &&
	     !sfd__h23750[27] &&
	     !sfd__h23750[26] &&
	     !sfd__h23750[25] &&
	     !sfd__h23750[24] &&
	     !sfd__h23750[23] &&
	     !sfd__h23750[22] &&
	     !sfd__h23750[21] &&
	     !sfd__h23750[20] &&
	     !sfd__h23750[19] &&
	     !sfd__h23750[18] &&
	     !sfd__h23750[17] &&
	     !sfd__h23750[16] &&
	     !sfd__h23750[15] &&
	     !sfd__h23750[14] &&
	     !sfd__h23750[13] &&
	     !sfd__h23750[12] &&
	     !sfd__h23750[11] &&
	     !sfd__h23750[10] &&
	     !sfd__h23750[9] &&
	     !sfd__h23750[8] &&
	     !sfd__h23750[7] &&
	     !sfd__h23750[6] &&
	     !sfd__h23750[5] &&
	     !sfd__h23750[4] &&
	     !sfd__h23750[3] &&
	     !sfd__h23750[2] &&
	     !sfd__h23750[1] &&
	     !sfd__h23750[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 ;
  assign NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d2642 =
	     !sfd__h2228[63] && !sfd__h2228[62] && !sfd__h2228[61] &&
	     !sfd__h2228[60] &&
	     !sfd__h2228[59] &&
	     !sfd__h2228[58] &&
	     !sfd__h2228[57] &&
	     !sfd__h2228[56] &&
	     !sfd__h2228[55] &&
	     !sfd__h2228[54] &&
	     !sfd__h2228[53] &&
	     !sfd__h2228[52] &&
	     !sfd__h2228[51] &&
	     !sfd__h2228[50] &&
	     !sfd__h2228[49] &&
	     !sfd__h2228[48] &&
	     !sfd__h2228[47] &&
	     !sfd__h2228[46] &&
	     !sfd__h2228[45] &&
	     !sfd__h2228[44] &&
	     !sfd__h2228[43] &&
	     !sfd__h2228[42] &&
	     !sfd__h2228[41] &&
	     !sfd__h2228[40] &&
	     !sfd__h2228[39] &&
	     !sfd__h2228[38] &&
	     !sfd__h2228[37] &&
	     !sfd__h2228[36] &&
	     !sfd__h2228[35] &&
	     !sfd__h2228[34] &&
	     !sfd__h2228[33] &&
	     !sfd__h2228[32] &&
	     !sfd__h2228[31] &&
	     !sfd__h2228[30] &&
	     !sfd__h2228[29] &&
	     !sfd__h2228[28] &&
	     !sfd__h2228[27] &&
	     !sfd__h2228[26] &&
	     !sfd__h2228[25] &&
	     !sfd__h2228[24] &&
	     !sfd__h2228[23] &&
	     !sfd__h2228[22] &&
	     !sfd__h2228[21] &&
	     !sfd__h2228[20] &&
	     !sfd__h2228[19] &&
	     !sfd__h2228[18] &&
	     !sfd__h2228[17] &&
	     !sfd__h2228[16] &&
	     !sfd__h2228[15] &&
	     !sfd__h2228[14] &&
	     !sfd__h2228[13] &&
	     !sfd__h2228[12] &&
	     !sfd__h2228[11] &&
	     !sfd__h2228[10] &&
	     !sfd__h2228[9] &&
	     !sfd__h2228[8] &&
	     !sfd__h2228[7] &&
	     !sfd__h2228[6] &&
	     !sfd__h2228[5] &&
	     !sfd__h2228[4] &&
	     !sfd__h2228[3] &&
	     !sfd__h2228[2] &&
	     !sfd__h2228[1] &&
	     !sfd__h2228[0] ||
	     !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2638 ||
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2640 ;
  assign NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d390 =
	     !sfd__h2228[63] && !sfd__h2228[62] && !sfd__h2228[61] &&
	     !sfd__h2228[60] &&
	     !sfd__h2228[59] &&
	     !sfd__h2228[58] &&
	     !sfd__h2228[57] &&
	     !sfd__h2228[56] &&
	     !sfd__h2228[55] &&
	     !sfd__h2228[54] &&
	     !sfd__h2228[53] &&
	     !sfd__h2228[52] &&
	     !sfd__h2228[51] &&
	     !sfd__h2228[50] &&
	     !sfd__h2228[49] &&
	     !sfd__h2228[48] &&
	     !sfd__h2228[47] &&
	     !sfd__h2228[46] &&
	     !sfd__h2228[45] &&
	     !sfd__h2228[44] &&
	     !sfd__h2228[43] &&
	     !sfd__h2228[42] &&
	     !sfd__h2228[41] &&
	     !sfd__h2228[40] &&
	     !sfd__h2228[39] &&
	     !sfd__h2228[38] &&
	     !sfd__h2228[37] &&
	     !sfd__h2228[36] &&
	     !sfd__h2228[35] &&
	     !sfd__h2228[34] &&
	     !sfd__h2228[33] &&
	     !sfd__h2228[32] &&
	     !sfd__h2228[31] &&
	     !sfd__h2228[30] &&
	     !sfd__h2228[29] &&
	     !sfd__h2228[28] &&
	     !sfd__h2228[27] &&
	     !sfd__h2228[26] &&
	     !sfd__h2228[25] &&
	     !sfd__h2228[24] &&
	     !sfd__h2228[23] &&
	     !sfd__h2228[22] &&
	     !sfd__h2228[21] &&
	     !sfd__h2228[20] &&
	     !sfd__h2228[19] &&
	     !sfd__h2228[18] &&
	     !sfd__h2228[17] &&
	     !sfd__h2228[16] &&
	     !sfd__h2228[15] &&
	     !sfd__h2228[14] &&
	     !sfd__h2228[13] &&
	     !sfd__h2228[12] &&
	     !sfd__h2228[11] &&
	     !sfd__h2228[10] &&
	     !sfd__h2228[9] &&
	     !sfd__h2228[8] &&
	     !sfd__h2228[7] &&
	     !sfd__h2228[6] &&
	     !sfd__h2228[5] &&
	     !sfd__h2228[4] &&
	     !sfd__h2228[3] &&
	     !sfd__h2228[2] &&
	     !sfd__h2228[1] &&
	     !sfd__h2228[0] ||
	     !_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 ||
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 ;
  assign NOT_requestR_BITS_159_TO_128_079_EQ_0_080_081__ETC___d1563 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 &&
	      _theResult___fst_exp__h35701 == 8'd255 &&
	      _theResult___fst_sfd__h35702 == 23'd0) ;
  assign NOT_requestR_BITS_190_TO_180_472_EQ_0_480_486__ETC___d2561 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 ==
	       24'd16777185) ?
		_theResult_____2__h71126[32:31] != 2'b11 :
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2517[23] ||
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2519 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2540 &&
		x__h71861[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_BITS_190_TO_180_472_EQ_0_480_486__ETC___d3005 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2484 ==
	       24'd16777153) ?
		_theResult_____2__h95647[64:63] != 2'b11 :
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2965[23] ||
		NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2967 &&
		IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2988 &&
		x__h96606[117:54] == 64'h7FFFFFFFFFFFFFFF) ;
  assign NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d2629 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[190:180] != 11'd2047 || requestR[179:128] != 52'd0) &&
	     !requestR[191] &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2582[23] &&
	     (!NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2584 ||
	      guard__h72666 != 2'd0) ;
  assign NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d3068 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[190:180] != 11'd2047 || requestR[179:128] != 52'd0) &&
	     !requestR[191] &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3022[23] &&
	     (!NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3024 ||
	      guard__h97632 != 2'd0) ;
  assign NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d4948 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_25_THEN_NOT_requestR_BITS__ETC___d4944) ;
  assign NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d5013 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_BIT_191_25_THEN_NOT_requestR_BITS__ETC___d4944 ||
	      requestR_BITS_190_TO_180_472_EQ_0_480_AND_requ_ETC___d4994) ;
  assign NOT_requestR_BITS_190_TO_180_472_ULT_requestR__ETC___d4990 =
	     !requestR_BITS_190_TO_180_472_ULT_requestR_BITS_ETC___d4940 &&
	     (!requestR_BITS_190_TO_180_472_EQ_requestR_BITS__ETC___d4935 ||
	      !requestR_BITS_179_TO_128_474_ULT_requestR_BITS_ETC___d4941) &&
	     requestR_BITS_190_TO_180_472_ULE_requestR_BITS_ETC___d4933 &&
	     (!requestR_BITS_190_TO_180_472_EQ_requestR_BITS__ETC___d4935 ||
	      requestR_BITS_179_TO_128_474_ULE_requestR_BITS_ETC___d4936) ;
  assign NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_ETC___d2005 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2001 :
		IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d2002) ;
  assign NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777 ;
  assign NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d2878 =
	     !requestR[191] && !requestR[190] && !requestR[189] &&
	     !requestR[188] &&
	     !requestR[187] &&
	     !requestR[186] &&
	     !requestR[185] &&
	     !requestR[184] &&
	     !requestR[183] &&
	     !requestR[182] &&
	     !requestR[181] &&
	     !requestR[180] &&
	     NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ||
	     !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2801 ||
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2802 ;
  assign NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d958 =
	     !requestR[191] && !requestR[190] && !requestR[189] &&
	     !requestR[188] &&
	     !requestR[187] &&
	     !requestR[186] &&
	     !requestR[185] &&
	     !requestR[184] &&
	     !requestR[183] &&
	     !requestR[182] &&
	     !requestR[181] &&
	     !requestR[180] &&
	     NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ||
	     !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 ||
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4312 =
	     { {4{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596[7]}},
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1596 } ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4312 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4312 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q114 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4312 +
	     12'd1023 ;
  assign SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q117 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q114[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_482___d3497 =
	     { requestR_BITS_190_TO_180_472_MINUS_1023___d2482[10],
	       requestR_BITS_190_TO_180_472_MINUS_1023___d2482 } ;
  assign SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 =
	     (SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_482___d3497 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 =
	     (SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_482___d3497 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q86 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_482___d3497 +
	     12'd127 ;
  assign SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q89 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q86[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d3368 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3366 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4053 =
	     { 3'd0,
	       _theResult___fst_exp__h118100 == 8'd0 &&
	       (sfdin__h118094[56:34] == 23'd0 || guard__h110003 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h118685 == 8'd255 &&
	       _theResult___fst_sfd__h118686 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h118100 != 8'd255 &&
	       guard__h110003 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4563 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4561 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4839 =
	     { 3'd0,
	       _theResult___fst_exp__h176669 == 11'd0 &&
	       (sfdin__h176663[56:5] == 52'd0 || guard__h168443 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h177457 == 11'd2047 &&
	       _theResult___fst_sfd__h177458 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h176669 != 11'd2047 &&
	       guard__h168443 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d3746 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3744 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d4082 =
	     { 3'd0,
	       _theResult___fst_exp__h135839 == 8'd0 &&
	       (sfdin__h135833[56:34] == 23'd0 || guard__h127613 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h136424 == 8'd255 &&
	       _theResult___fst_sfd__h136425 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h135839 != 8'd255 &&
	       guard__h127613 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4275 =
	     ({ 6'd0,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4273 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4608 =
	     ({ 6'd0,
		IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4273 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4607 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4822 =
	     { 3'd0,
	       _theResult___fst_exp__h167168 == 11'd0 &&
	       guard__h159207 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h167882 == 11'd2047 &&
	       _theResult___fst_sfd__h167883 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h167168 != 11'd2047 &&
	       guard__h159207 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d3462 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3460 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d3791 =
	     ({ 3'd0,
		IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3460 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d3790 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d4065 =
	     { 3'd0,
	       _theResult___fst_exp__h126744 == 8'd0 &&
	       guard__h118696 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h127255 == 8'd255 &&
	       _theResult___fst_sfd__h127256 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h126744 != 8'd255 &&
	       guard__h118696 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d4319 =
	     b__h38981 >>
	     _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4315 ;
  assign _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_472_EQ_ETC___d3504 =
	     sfd__h102393 >>
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_472_M_ETC___d3500 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_BITS_63_TO_3_ETC___d66 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3132 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3132 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3132 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4068 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4053[4] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d4065[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4093 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4053[3] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d4065[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d4120 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d4053[1] :
		_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d4065[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4315 =
	     12'd3074 -
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4312 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1210 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2144 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d2141 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2145 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2144 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2147 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2144 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2149 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2144 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1443 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2337 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d2334 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2338 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2337 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2339 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2337 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2340 =
	     (_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2337 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4200 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h824[22] ?
		 5'd0 :
		 (sV1_sfd__h824[21] ?
		    5'd1 :
		    (sV1_sfd__h824[20] ?
		       5'd2 :
		       (sV1_sfd__h824[19] ?
			  5'd3 :
			  (sV1_sfd__h824[18] ?
			     5'd4 :
			     (sV1_sfd__h824[17] ?
				5'd5 :
				(sV1_sfd__h824[16] ?
				   5'd6 :
				   (sV1_sfd__h824[15] ?
				      5'd7 :
				      (sV1_sfd__h824[14] ?
					 5'd8 :
					 (sV1_sfd__h824[13] ?
					    5'd9 :
					    (sV1_sfd__h824[12] ?
					       5'd10 :
					       (sV1_sfd__h824[11] ?
						  5'd11 :
						  (sV1_sfd__h824[10] ?
						     5'd12 :
						     (sV1_sfd__h824[9] ?
							5'd13 :
							(sV1_sfd__h824[8] ?
							   5'd14 :
							   (sV1_sfd__h824[7] ?
							      5'd15 :
							      (sV1_sfd__h824[6] ?
								 5'd16 :
								 (sV1_sfd__h824[5] ?
								    5'd17 :
								    (sV1_sfd__h824[4] ?
								       5'd18 :
								       (sV1_sfd__h824[3] ?
									  5'd19 :
									  (sV1_sfd__h824[2] ?
									     5'd20 :
									     (sV1_sfd__h824[1] ?
										5'd21 :
										(sV1_sfd__h824[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4200 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4200 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_BITS_190_TO_180_472_M_ETC___d3500 =
	     12'd3970 -
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_482___d3497 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2637 =
	     (12'd64 -
	      { 5'd0,
		IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382 }) -
	     12'd1 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2638 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2637 ^
	      12'h800) <=
	     12'd3071 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2640 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2637 ^
	      12'h800) <
	     12'd974 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2643 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2637 ^
	      12'h800) <
	     12'd1026 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 =
	     (9'd64 -
	      { 2'd0,
		IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382 }) -
	     9'd1 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 ^
	      9'h100) <=
	     9'd383 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 ^
	      9'h100) <
	     9'd107 ;
  assign _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 =
	     (_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 ^
	      9'h100) <
	     9'd130 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2800 =
	     (12'd64 -
	      { 5'd0,
		IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875 }) -
	     12'd1 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2801 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2800 ^
	      12'h800) <=
	     12'd3071 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2802 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2800 ^
	      12'h800) <
	     12'd974 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2803 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2800 ^
	      12'h800) <
	     12'd1026 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 =
	     (9'd64 -
	      { 2'd0,
		IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875 }) -
	     9'd1 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 ^
	      9'h100) <=
	     9'd383 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 ^
	      9'h100) <
	     9'd107 ;
  assign _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 =
	     (_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 ^
	      9'h100) <
	     9'd130 ;
  assign _theResult_____2__h36241 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1622 ?
	       out1___1__h36954 :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605[88:24] ;
  assign _theResult_____2__h38919 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1770 ?
	       out1___1__h39408 :
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753[56:24] ;
  assign _theResult_____2__h71126 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2508 ?
	       out1___1__h71615 :
	       IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491[85:53] ;
  assign _theResult_____2__h95647 =
	     IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2956 ?
	       out1___1__h96360 :
	       IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939[117:53] ;
  assign _theResult____h109993 =
	     (value__h71190 == 54'd0) ? sfd__h102393 : 57'd1 ;
  assign _theResult____h127603 =
	     ((_3970_MINUS_SEXT_requestR_BITS_190_TO_180_472_M_ETC___d3500 ^
	       12'h800) <
	      12'd2105) ?
	       result__h128216 :
	       _theResult____h109993 ;
  assign _theResult____h168433 =
	     ((_3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4315 ^
	       12'h800) <
	      12'd2105) ?
	       result__h169046 :
	       ((value__h36305 == 25'd0) ? b__h38981 : 57'd1) ;
  assign _theResult___exp__h118623 =
	     sfd__h118192[24] ?
	       ((_theResult___fst_exp__h118100 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h145082) :
	       ((_theResult___fst_exp__h118100 == 8'd0 &&
		 sfd__h118192[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h118100) ;
  assign _theResult___exp__h12256 =
	     (sfd__h11860[24] || sfd__h11860[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h127193 =
	     sfd__h126762[24] ?
	       ((_theResult___fst_exp__h126744 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h145103) :
	       ((_theResult___fst_exp__h126744 == 8'd0 &&
		 sfd__h126762[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h126744) ;
  assign _theResult___exp__h12767 =
	     sfd__h12361[24] ?
	       ((x__h12346[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h12866) :
	       ((x__h12346[7:0] == 8'd0 && sfd__h12361[24:23] == 2'b01) ?
		  8'd1 :
		  x__h12346[7:0]) ;
  assign _theResult___exp__h136362 =
	     sfd__h135931[24] ?
	       ((_theResult___fst_exp__h135839 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h145132) :
	       ((_theResult___fst_exp__h135839 == 8'd0 &&
		 sfd__h135931[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h135839) ;
  assign _theResult___exp__h144986 =
	     sfd__h144531[24] ?
	       ((_theResult___fst_exp__h144512 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h145153) :
	       ((_theResult___fst_exp__h144512 == 8'd0 &&
		 sfd__h144531[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h144512) ;
  assign _theResult___exp__h167820 =
	     sfd__h167186[53] ?
	       ((_theResult___fst_exp__h167168 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h186241) :
	       ((_theResult___fst_exp__h167168 == 11'd0 &&
		 sfd__h167186[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h167168) ;
  assign _theResult___exp__h177395 =
	     sfd__h176761[53] ?
	       ((_theResult___fst_exp__h176669 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h186270) :
	       ((_theResult___fst_exp__h176669 == 11'd0 &&
		 sfd__h176761[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h176669) ;
  assign _theResult___exp__h186135 =
	     sfd__h185477[53] ?
	       ((_theResult___fst_exp__h185458 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h186291) :
	       ((_theResult___fst_exp__h185458 == 11'd0 &&
		 sfd__h185477[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h185458) ;
  assign _theResult___exp__h22761 =
	     (sfd__h22368[24] || sfd__h22368[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h23271 =
	     sfd__h22865[24] ?
	       ((x__h22850[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h23365) :
	       ((x__h22850[7:0] == 8'd0 && sfd__h22865[24:23] == 2'b01) ?
		  8'd1 :
		  x__h22850[7:0]) ;
  assign _theResult___exp__h29074 =
	     (sfd__h28681[24] || sfd__h28681[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h29585 =
	     sfd__h29179[24] ?
	       ((x__h29164[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h29684) :
	       ((x__h29164[7:0] == 8'd0 && sfd__h29179[24:23] == 2'b01) ?
		  8'd1 :
		  x__h29164[7:0]) ;
  assign _theResult___exp__h35131 =
	     (sfd__h34738[24] || sfd__h34738[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h35641 =
	     sfd__h35235[24] ?
	       ((x__h35220[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h35735) :
	       ((x__h35220[7:0] == 8'd0 && sfd__h35235[24:23] == 2'b01) ?
		  8'd1 :
		  x__h35220[7:0]) ;
  assign _theResult___exp__h60232 =
	     (sfd__h59636[53] || sfd__h59636[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h60946 =
	     sfd__h60337[53] ?
	       ((x__h60322[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h61045) :
	       ((x__h60322[10:0] == 11'd0 && sfd__h60337[53:52] == 2'b01) ?
		  11'd1 :
		  x__h60322[10:0]) ;
  assign _theResult___exp__h69814 =
	     (sfd__h69218[53] || sfd__h69218[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h70527 =
	     sfd__h69918[53] ?
	       ((x__h69903[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h70621) :
	       ((x__h69903[10:0] == 11'd0 && sfd__h69918[53:52] == 2'b01) ?
		  11'd1 :
		  x__h69903[10:0]) ;
  assign _theResult___exp__h83440 =
	     (sfd__h82844[53] || sfd__h82844[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h84154 =
	     sfd__h83545[53] ?
	       ((x__h83530[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h84253) :
	       ((x__h83530[10:0] == 11'd0 && sfd__h83545[53:52] == 2'b01) ?
		  11'd1 :
		  x__h83530[10:0]) ;
  assign _theResult___exp__h94338 =
	     (sfd__h93742[53] || sfd__h93742[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h95051 =
	     sfd__h94442[53] ?
	       ((x__h94427[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h95145) :
	       ((x__h94427[10:0] == 11'd0 && sfd__h94442[53:52] == 2'b01) ?
		  11'd1 :
		  x__h94427[10:0]) ;
  assign _theResult___fst_exp__h109975 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h118100 =
	     _theResult____h109993[56] ?
	       8'd2 :
	       _theResult___fst_exp__h118174 ;
  assign _theResult___fst_exp__h118165 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3366 } ;
  assign _theResult___fst_exp__h118171 =
	     (!_theResult____h109993[56] && !_theResult____h109993[55] &&
	      !_theResult____h109993[54] &&
	      !_theResult____h109993[53] &&
	      !_theResult____h109993[52] &&
	      !_theResult____h109993[51] &&
	      !_theResult____h109993[50] &&
	      !_theResult____h109993[49] &&
	      !_theResult____h109993[48] &&
	      !_theResult____h109993[47] &&
	      !_theResult____h109993[46] &&
	      !_theResult____h109993[45] &&
	      !_theResult____h109993[44] &&
	      !_theResult____h109993[43] &&
	      !_theResult____h109993[42] &&
	      !_theResult____h109993[41] &&
	      !_theResult____h109993[40] &&
	      !_theResult____h109993[39] &&
	      !_theResult____h109993[38] &&
	      !_theResult____h109993[37] &&
	      !_theResult____h109993[36] &&
	      !_theResult____h109993[35] &&
	      !_theResult____h109993[34] &&
	      !_theResult____h109993[33] &&
	      !_theResult____h109993[32] &&
	      !_theResult____h109993[31] &&
	      !_theResult____h109993[30] &&
	      !_theResult____h109993[29] &&
	      !_theResult____h109993[28] &&
	      !_theResult____h109993[27] &&
	      !_theResult____h109993[26] &&
	      !_theResult____h109993[25] &&
	      !_theResult____h109993[24] &&
	      !_theResult____h109993[23] &&
	      !_theResult____h109993[22] &&
	      !_theResult____h109993[21] &&
	      !_theResult____h109993[20] &&
	      !_theResult____h109993[19] &&
	      !_theResult____h109993[18] &&
	      !_theResult____h109993[17] &&
	      !_theResult____h109993[16] &&
	      !_theResult____h109993[15] &&
	      !_theResult____h109993[14] &&
	      !_theResult____h109993[13] &&
	      !_theResult____h109993[12] &&
	      !_theResult____h109993[11] &&
	      !_theResult____h109993[10] &&
	      !_theResult____h109993[9] &&
	      !_theResult____h109993[8] &&
	      !_theResult____h109993[7] &&
	      !_theResult____h109993[6] &&
	      !_theResult____h109993[5] &&
	      !_theResult____h109993[4] &&
	      !_theResult____h109993[3] &&
	      !_theResult____h109993[2] &&
	      !_theResult____h109993[1] &&
	      !_theResult____h109993[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_19_ETC___d3368) ?
	       8'd0 :
	       _theResult___fst_exp__h118165 ;
  assign _theResult___fst_exp__h118174 =
	     (!_theResult____h109993[56] && _theResult____h109993[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h118171 ;
  assign _theResult___fst_exp__h118682 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10003_0b0_theResult___fst_exp18100_0_ETC__q92 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 ;
  assign _theResult___fst_exp__h118685 =
	     (_theResult___fst_exp__h118100 == 8'd255) ?
	       _theResult___fst_exp__h118100 :
	       _theResult___fst_exp__h118682 ;
  assign _theResult___fst_exp__h12314 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462 ;
  assign _theResult___fst_exp__h126735 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3460 } ;
  assign _theResult___fst_exp__h126741 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d3462) ?
	       8'd0 :
	       _theResult___fst_exp__h126735 ;
  assign _theResult___fst_exp__h126744 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h126741 :
	       8'd129 ;
  assign _theResult___fst_exp__h127252 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard18696_0b0_theResult___fst_exp26744_0_ETC__q94 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q95 ;
  assign _theResult___fst_exp__h127255 =
	     (_theResult___fst_exp__h126744 == 8'd255) ?
	       _theResult___fst_exp__h126744 :
	       _theResult___fst_exp__h127252 ;
  assign _theResult___fst_exp__h12825 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10 :
	       CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 ;
  assign _theResult___fst_exp__h12828 =
	     (x__h12346[7:0] == 8'd255) ?
	       x__h12346[7:0] :
	       _theResult___fst_exp__h12825 ;
  assign _theResult___fst_exp__h135839 =
	     _theResult____h127603[56] ?
	       8'd2 :
	       _theResult___fst_exp__h135913 ;
  assign _theResult___fst_exp__h135904 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3744 } ;
  assign _theResult___fst_exp__h135910 =
	     (!_theResult____h127603[56] && !_theResult____h127603[55] &&
	      !_theResult____h127603[54] &&
	      !_theResult____h127603[53] &&
	      !_theResult____h127603[52] &&
	      !_theResult____h127603[51] &&
	      !_theResult____h127603[50] &&
	      !_theResult____h127603[49] &&
	      !_theResult____h127603[48] &&
	      !_theResult____h127603[47] &&
	      !_theResult____h127603[46] &&
	      !_theResult____h127603[45] &&
	      !_theResult____h127603[44] &&
	      !_theResult____h127603[43] &&
	      !_theResult____h127603[42] &&
	      !_theResult____h127603[41] &&
	      !_theResult____h127603[40] &&
	      !_theResult____h127603[39] &&
	      !_theResult____h127603[38] &&
	      !_theResult____h127603[37] &&
	      !_theResult____h127603[36] &&
	      !_theResult____h127603[35] &&
	      !_theResult____h127603[34] &&
	      !_theResult____h127603[33] &&
	      !_theResult____h127603[32] &&
	      !_theResult____h127603[31] &&
	      !_theResult____h127603[30] &&
	      !_theResult____h127603[29] &&
	      !_theResult____h127603[28] &&
	      !_theResult____h127603[27] &&
	      !_theResult____h127603[26] &&
	      !_theResult____h127603[25] &&
	      !_theResult____h127603[24] &&
	      !_theResult____h127603[23] &&
	      !_theResult____h127603[22] &&
	      !_theResult____h127603[21] &&
	      !_theResult____h127603[20] &&
	      !_theResult____h127603[19] &&
	      !_theResult____h127603[18] &&
	      !_theResult____h127603[17] &&
	      !_theResult____h127603[16] &&
	      !_theResult____h127603[15] &&
	      !_theResult____h127603[14] &&
	      !_theResult____h127603[13] &&
	      !_theResult____h127603[12] &&
	      !_theResult____h127603[11] &&
	      !_theResult____h127603[10] &&
	      !_theResult____h127603[9] &&
	      !_theResult____h127603[8] &&
	      !_theResult____h127603[7] &&
	      !_theResult____h127603[6] &&
	      !_theResult____h127603[5] &&
	      !_theResult____h127603[4] &&
	      !_theResult____h127603[3] &&
	      !_theResult____h127603[2] &&
	      !_theResult____h127603[1] &&
	      !_theResult____h127603[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BITS_1_ETC___d3746) ?
	       8'd0 :
	       _theResult___fst_exp__h135904 ;
  assign _theResult___fst_exp__h135913 =
	     (!_theResult____h127603[56] && _theResult____h127603[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h135910 ;
  assign _theResult___fst_exp__h136421 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard27613_0b0_theResult___fst_exp35839_0_ETC__q96 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q97 ;
  assign _theResult___fst_exp__h136424 =
	     (_theResult___fst_exp__h135839 == 8'd255) ?
	       _theResult___fst_exp__h135839 :
	       _theResult___fst_exp__h136421 ;
  assign _theResult___fst_exp__h144464 =
	     (SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q86[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q86[7:0] ;
  assign _theResult___fst_exp__h144503 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC__q86[7:0] -
	     { 2'd0,
	       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3460 } ;
  assign _theResult___fst_exp__h144509 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ||
	      !_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_0__ETC___d3791) ?
	       8'd0 :
	       _theResult___fst_exp__h144503 ;
  assign _theResult___fst_exp__h144512 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h144509 :
	       _theResult___fst_exp__h144464 ;
  assign _theResult___fst_exp__h145045 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard36435_0b0_theResult___fst_exp44512_0_ETC__q98 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 ;
  assign _theResult___fst_exp__h145048 =
	     (_theResult___fst_exp__h144512 == 8'd255) ?
	       _theResult___fst_exp__h144512 :
	       _theResult___fst_exp__h145045 ;
  assign _theResult___fst_exp__h145057 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 ?
		  _theResult___snd_fst_exp__h127258 :
		  _theResult___fst_exp__h109975) :
	       (SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 ?
		  _theResult___snd_fst_exp__h145051 :
		  _theResult___fst_exp__h109975) ;
  assign _theResult___fst_exp__h145060 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h145057 ;
  assign _theResult___fst_exp__h152119 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h167159 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4273 } ;
  assign _theResult___fst_exp__h167165 =
	     (sV1_exp__h823 == 8'd0 && !sV1_sfd__h824[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4246 ||
	      !_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4275) ?
	       11'd0 :
	       _theResult___fst_exp__h167159 ;
  assign _theResult___fst_exp__h167168 =
	     (sV1_exp__h823 == 8'd0) ?
	       _theResult___fst_exp__h167165 :
	       11'd897 ;
  assign _theResult___fst_exp__h167879 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard59207_0b0_theResult___fst_exp67168_0_ETC__q120 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q121 ;
  assign _theResult___fst_exp__h167882 =
	     (_theResult___fst_exp__h167168 == 11'd2047) ?
	       _theResult___fst_exp__h167168 :
	       _theResult___fst_exp__h167879 ;
  assign _theResult___fst_exp__h176669 =
	     _theResult____h168433[56] ?
	       11'd2 :
	       _theResult___fst_exp__h176743 ;
  assign _theResult___fst_exp__h176734 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4561 } ;
  assign _theResult___fst_exp__h176740 =
	     (!_theResult____h168433[56] && !_theResult____h168433[55] &&
	      !_theResult____h168433[54] &&
	      !_theResult____h168433[53] &&
	      !_theResult____h168433[52] &&
	      !_theResult____h168433[51] &&
	      !_theResult____h168433[50] &&
	      !_theResult____h168433[49] &&
	      !_theResult____h168433[48] &&
	      !_theResult____h168433[47] &&
	      !_theResult____h168433[46] &&
	      !_theResult____h168433[45] &&
	      !_theResult____h168433[44] &&
	      !_theResult____h168433[43] &&
	      !_theResult____h168433[42] &&
	      !_theResult____h168433[41] &&
	      !_theResult____h168433[40] &&
	      !_theResult____h168433[39] &&
	      !_theResult____h168433[38] &&
	      !_theResult____h168433[37] &&
	      !_theResult____h168433[36] &&
	      !_theResult____h168433[35] &&
	      !_theResult____h168433[34] &&
	      !_theResult____h168433[33] &&
	      !_theResult____h168433[32] &&
	      !_theResult____h168433[31] &&
	      !_theResult____h168433[30] &&
	      !_theResult____h168433[29] &&
	      !_theResult____h168433[28] &&
	      !_theResult____h168433[27] &&
	      !_theResult____h168433[26] &&
	      !_theResult____h168433[25] &&
	      !_theResult____h168433[24] &&
	      !_theResult____h168433[23] &&
	      !_theResult____h168433[22] &&
	      !_theResult____h168433[21] &&
	      !_theResult____h168433[20] &&
	      !_theResult____h168433[19] &&
	      !_theResult____h168433[18] &&
	      !_theResult____h168433[17] &&
	      !_theResult____h168433[16] &&
	      !_theResult____h168433[15] &&
	      !_theResult____h168433[14] &&
	      !_theResult____h168433[13] &&
	      !_theResult____h168433[12] &&
	      !_theResult____h168433[11] &&
	      !_theResult____h168433[10] &&
	      !_theResult____h168433[9] &&
	      !_theResult____h168433[8] &&
	      !_theResult____h168433[7] &&
	      !_theResult____h168433[6] &&
	      !_theResult____h168433[5] &&
	      !_theResult____h168433[4] &&
	      !_theResult____h168433[3] &&
	      !_theResult____h168433[2] &&
	      !_theResult____h168433[1] &&
	      !_theResult____h168433[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_BIT_ETC___d4563) ?
	       11'd0 :
	       _theResult___fst_exp__h176734 ;
  assign _theResult___fst_exp__h176743 =
	     (!_theResult____h168433[56] && _theResult____h168433[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h176740 ;
  assign _theResult___fst_exp__h177454 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard68443_0b0_theResult___fst_exp76669_0_ETC__q122 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q123 ;
  assign _theResult___fst_exp__h177457 =
	     (_theResult___fst_exp__h176669 == 11'd2047) ?
	       _theResult___fst_exp__h176669 :
	       _theResult___fst_exp__h177454 ;
  assign _theResult___fst_exp__h185410 =
	     (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q114[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q114[10:0] ;
  assign _theResult___fst_exp__h185449 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC__q114[10:0] -
	     { 5'd0,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4273 } ;
  assign _theResult___fst_exp__h185455 =
	     (sV1_exp__h823 == 8'd0 && !sV1_sfd__h824[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4246 ||
	      !_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d4608) ?
	       11'd0 :
	       _theResult___fst_exp__h185449 ;
  assign _theResult___fst_exp__h185458 =
	     (sV1_exp__h823 == 8'd0) ?
	       _theResult___fst_exp__h185455 :
	       _theResult___fst_exp__h185410 ;
  assign _theResult___fst_exp__h186194 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard77468_0b0_theResult___fst_exp85458_0_ETC__q124 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 ;
  assign _theResult___fst_exp__h186197 =
	     (_theResult___fst_exp__h185458 == 11'd2047) ?
	       _theResult___fst_exp__h185458 :
	       _theResult___fst_exp__h186194 ;
  assign _theResult___fst_exp__h186206 =
	     (sV1_exp__h823 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 ?
		  _theResult___snd_fst_exp__h167885 :
		  _theResult___fst_exp__h152119) :
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 ?
		  _theResult___snd_fst_exp__h186200 :
		  _theResult___fst_exp__h152119) ;
  assign _theResult___fst_exp__h186209 =
	     (sV1_exp__h823 == 8'd0 && sV1_sfd__h824 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h186206 ;
  assign _theResult___fst_exp__h22818 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d910 ;
  assign _theResult___fst_exp__h23328 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949 ;
  assign _theResult___fst_exp__h23331 =
	     (x__h22850[7:0] == 8'd255) ?
	       x__h22850[7:0] :
	       _theResult___fst_exp__h23328 ;
  assign _theResult___fst_exp__h29132 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283 ;
  assign _theResult___fst_exp__h29643 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29 :
	       CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 ;
  assign _theResult___fst_exp__h29646 =
	     (x__h29164[7:0] == 8'd255) ?
	       x__h29164[7:0] :
	       _theResult___fst_exp__h29643 ;
  assign _theResult___fst_exp__h35188 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1478 ;
  assign _theResult___fst_exp__h35698 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516 ;
  assign _theResult___fst_exp__h35701 =
	     (x__h35220[7:0] == 8'd255) ?
	       x__h35220[7:0] :
	       _theResult___fst_exp__h35698 ;
  assign _theResult___fst_exp__h60290 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9619_0b0_0_0b1_0_0b10_out_exp0235_0b_ETC__q58 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2211 ;
  assign _theResult___fst_exp__h61004 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0307_0b0_x0322_BITS_10_TO_0_0b1_x032_ETC__q52 :
	       CASE_requestR_BITS_194_TO_192_0x1_x0322_BITS_1_ETC__q53 ;
  assign _theResult___fst_exp__h61007 =
	     (x__h60322[10:0] == 11'd2047) ?
	       x__h60322[10:0] :
	       _theResult___fst_exp__h61004 ;
  assign _theResult___fst_exp__h69871 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9201_0b0_0_0b1_0_0b10_out_exp9817_0b_ETC__q61 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2370 ;
  assign _theResult___fst_exp__h70584 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9888_0b0_x9903_BITS_10_TO_0_0b1_x990_ETC__q63 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2408 ;
  assign _theResult___fst_exp__h70587 =
	     (x__h69903[10:0] == 11'd2047) ?
	       x__h69903[10:0] :
	       _theResult___fst_exp__h70584 ;
  assign _theResult___fst_exp__h83498 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2827_0b0_0_0b1_0_0b10_out_exp3443_0b_ETC__q75 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2703 ;
  assign _theResult___fst_exp__h84212 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3515_0b0_x3530_BITS_10_TO_0_0b1_x353_ETC__q69 :
	       CASE_requestR_BITS_194_TO_192_0x1_x3530_BITS_1_ETC__q70 ;
  assign _theResult___fst_exp__h84215 =
	     (x__h83530[10:0] == 11'd2047) ?
	       x__h83530[10:0] :
	       _theResult___fst_exp__h84212 ;
  assign _theResult___fst_exp__h94395 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3725_0b0_0_0b1_0_0b10_out_exp4341_0b_ETC__q76 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2831 ;
  assign _theResult___fst_exp__h95108 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4412_0b0_x4427_BITS_10_TO_0_0b1_x442_ETC__q77 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2869 ;
  assign _theResult___fst_exp__h95111 =
	     (x__h94427[10:0] == 11'd2047) ?
	       x__h94427[10:0] :
	       _theResult___fst_exp__h95108 ;
  assign _theResult___fst_sfd__h109976 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h118683 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard10003_0b0_sfdin18094_BITS_56_TO_34_0_ETC__q100 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin18094_B_ETC__q101 ;
  assign _theResult___fst_sfd__h118686 =
	     (_theResult___fst_exp__h118100 == 8'd255) ?
	       sfdin__h118094[56:34] :
	       _theResult___fst_sfd__h118683 ;
  assign _theResult___fst_sfd__h12315 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 ;
  assign _theResult___fst_sfd__h127253 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard18696_0b0_theResult___snd26695_BITS__ETC__q102 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 ;
  assign _theResult___fst_sfd__h127256 =
	     (_theResult___fst_exp__h126744 == 8'd255) ?
	       _theResult___snd__h126695[56:34] :
	       _theResult___fst_sfd__h127253 ;
  assign _theResult___fst_sfd__h12826 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 ;
  assign _theResult___fst_sfd__h12829 =
	     (x__h12346[7:0] == 8'd255) ?
	       sfd___3__h11833[62:40] :
	       _theResult___fst_sfd__h12826 ;
  assign _theResult___fst_sfd__h136422 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard27613_0b0_sfdin35833_BITS_56_TO_34_0_ETC__q104 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin35833_B_ETC__q105 ;
  assign _theResult___fst_sfd__h136425 =
	     (_theResult___fst_exp__h135839 == 8'd255) ?
	       sfdin__h135833[56:34] :
	       _theResult___fst_sfd__h136422 ;
  assign _theResult___fst_sfd__h145046 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard36435_0b0_theResult___snd44458_BITS__ETC__q106 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 ;
  assign _theResult___fst_sfd__h145049 =
	     (_theResult___fst_exp__h144512 == 8'd255) ?
	       _theResult___snd__h144458[56:34] :
	       _theResult___fst_sfd__h145046 ;
  assign _theResult___fst_sfd__h145058 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3133 ?
		  _theResult___snd_fst_sfd__h127259 :
		  _theResult___fst_sfd__h109976) :
	       (SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3498 ?
		  _theResult___snd_fst_sfd__h145052 :
		  _theResult___fst_sfd__h109976) ;
  assign _theResult___fst_sfd__h145064 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h145058 ;
  assign _theResult___fst_sfd__h146668 = { 1'd1, sV1_sfd__h824[21:0] } ;
  assign _theResult___fst_sfd__h152120 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h167880 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard59207_0b0_theResult___snd67119_BITS__ETC__q126 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 ;
  assign _theResult___fst_sfd__h167883 =
	     (_theResult___fst_exp__h167168 == 11'd2047) ?
	       _theResult___snd__h167119[56:5] :
	       _theResult___fst_sfd__h167880 ;
  assign _theResult___fst_sfd__h177455 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard68443_0b0_sfdin76663_BITS_56_TO_5_0b_ETC__q128 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfdin76663_B_ETC__q129 ;
  assign _theResult___fst_sfd__h177458 =
	     (_theResult___fst_exp__h176669 == 11'd2047) ?
	       sfdin__h176663[56:5] :
	       _theResult___fst_sfd__h177455 ;
  assign _theResult___fst_sfd__h186195 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard77468_0b0_theResult___snd85404_BITS__ETC__q130 :
	       CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 ;
  assign _theResult___fst_sfd__h186198 =
	     (_theResult___fst_exp__h185458 == 11'd2047) ?
	       _theResult___snd__h185404[56:5] :
	       _theResult___fst_sfd__h186195 ;
  assign _theResult___fst_sfd__h186207 =
	     (sV1_exp__h823 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4201 ?
		  _theResult___snd_fst_sfd__h167886 :
		  _theResult___fst_sfd__h152120) :
	       (SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4313 ?
		  _theResult___snd_fst_sfd__h186201 :
		  _theResult___fst_sfd__h152120) ;
  assign _theResult___fst_sfd__h186213 =
	     ((sV1_exp__h823 == 8'd255 || sV1_exp__h823 == 8'd0) &&
	      sV1_sfd__h824 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h186207 ;
  assign _theResult___fst_sfd__h22819 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q26 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969 ;
  assign _theResult___fst_sfd__h23329 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981 ;
  assign _theResult___fst_sfd__h23332 =
	     (x__h22850[7:0] == 8'd255) ?
	       sfd___3__h22341[62:40] :
	       _theResult___fst_sfd__h23329 ;
  assign _theResult___fst_sfd__h29133 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 ;
  assign _theResult___fst_sfd__h29644 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 ;
  assign _theResult___fst_sfd__h29647 =
	     (x__h29164[7:0] == 8'd255) ?
	       sfd___3__h28654[30:8] :
	       _theResult___fst_sfd__h29644 ;
  assign _theResult___fst_sfd__h35189 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536 ;
  assign _theResult___fst_sfd__h35699 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548 ;
  assign _theResult___fst_sfd__h35702 =
	     (x__h35220[7:0] == 8'd255) ?
	       sfd___3__h34711[30:8] :
	       _theResult___fst_sfd__h35699 ;
  assign _theResult___fst_sfd__h60291 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9619_0b0_sfd___39609_BITS_54_TO_3_0b_ETC__q56 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q57 ;
  assign _theResult___fst_sfd__h61005 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard0307_0b0_sfd___39609_BITS_53_TO_2_0b_ETC__q54 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q55 ;
  assign _theResult___fst_sfd__h61008 =
	     (x__h60322[10:0] == 11'd2047) ?
	       sfd___3__h59609[53:2] :
	       _theResult___fst_sfd__h61005 ;
  assign _theResult___fst_sfd__h69872 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9201_0b0_sfd___39191_BITS_54_TO_3_0b_ETC__q64 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2427 ;
  assign _theResult___fst_sfd__h70585 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard9888_0b0_sfd___39191_BITS_53_TO_2_0b_ETC__q62 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2439 ;
  assign _theResult___fst_sfd__h70588 =
	     (x__h69903[10:0] == 11'd2047) ?
	       sfd___3__h69191[53:2] :
	       _theResult___fst_sfd__h70585 ;
  assign _theResult___fst_sfd__h83499 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard2827_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 ;
  assign _theResult___fst_sfd__h84213 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3515_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73 :
	       CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 ;
  assign _theResult___fst_sfd__h84216 =
	     (x__h83530[10:0] == 11'd2047) ?
	       sfd___3__h11833[62:11] :
	       _theResult___fst_sfd__h84213 ;
  assign _theResult___fst_sfd__h94396 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard3725_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2889 ;
  assign _theResult___fst_sfd__h95109 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       CASE_guard4412_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78 :
	       IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2901 ;
  assign _theResult___fst_sfd__h95112 =
	     (x__h94427[10:0] == 11'd2047) ?
	       sfd___3__h22341[62:11] :
	       _theResult___fst_sfd__h95109 ;
  assign _theResult___fst_sfd__h98689 = { 1'd1, requestR[178:128] } ;
  assign _theResult___sfd__h118624 =
	     sfd__h118192[24] ?
	       ((_theResult___fst_exp__h118100 == 8'd254) ?
		  23'd0 :
		  sfd__h118192[23:1]) :
	       sfd__h118192[22:0] ;
  assign _theResult___sfd__h12257 =
	     sfd__h11860[24] ? sfd__h11860[23:1] : sfd__h11860[22:0] ;
  assign _theResult___sfd__h127194 =
	     sfd__h126762[24] ?
	       ((_theResult___fst_exp__h126744 == 8'd254) ?
		  23'd0 :
		  sfd__h126762[23:1]) :
	       sfd__h126762[22:0] ;
  assign _theResult___sfd__h12768 =
	     sfd__h12361[24] ?
	       ((x__h12346[7:0] == 8'd254) ? 23'd0 : sfd__h12361[23:1]) :
	       sfd__h12361[22:0] ;
  assign _theResult___sfd__h136363 =
	     sfd__h135931[24] ?
	       ((_theResult___fst_exp__h135839 == 8'd254) ?
		  23'd0 :
		  sfd__h135931[23:1]) :
	       sfd__h135931[22:0] ;
  assign _theResult___sfd__h144987 =
	     sfd__h144531[24] ?
	       ((_theResult___fst_exp__h144512 == 8'd254) ?
		  23'd0 :
		  sfd__h144531[23:1]) :
	       sfd__h144531[22:0] ;
  assign _theResult___sfd__h167821 =
	     sfd__h167186[53] ?
	       ((_theResult___fst_exp__h167168 == 11'd2046) ?
		  52'd0 :
		  sfd__h167186[52:1]) :
	       sfd__h167186[51:0] ;
  assign _theResult___sfd__h177396 =
	     sfd__h176761[53] ?
	       ((_theResult___fst_exp__h176669 == 11'd2046) ?
		  52'd0 :
		  sfd__h176761[52:1]) :
	       sfd__h176761[51:0] ;
  assign _theResult___sfd__h186136 =
	     sfd__h185477[53] ?
	       ((_theResult___fst_exp__h185458 == 11'd2046) ?
		  52'd0 :
		  sfd__h185477[52:1]) :
	       sfd__h185477[51:0] ;
  assign _theResult___sfd__h22762 =
	     sfd__h22368[24] ? sfd__h22368[23:1] : sfd__h22368[22:0] ;
  assign _theResult___sfd__h23272 =
	     sfd__h22865[24] ?
	       ((x__h22850[7:0] == 8'd254) ? 23'd0 : sfd__h22865[23:1]) :
	       sfd__h22865[22:0] ;
  assign _theResult___sfd__h29075 =
	     sfd__h28681[24] ? sfd__h28681[23:1] : sfd__h28681[22:0] ;
  assign _theResult___sfd__h29586 =
	     sfd__h29179[24] ?
	       ((x__h29164[7:0] == 8'd254) ? 23'd0 : sfd__h29179[23:1]) :
	       sfd__h29179[22:0] ;
  assign _theResult___sfd__h35132 =
	     sfd__h34738[24] ? sfd__h34738[23:1] : sfd__h34738[22:0] ;
  assign _theResult___sfd__h35642 =
	     sfd__h35235[24] ?
	       ((x__h35220[7:0] == 8'd254) ? 23'd0 : sfd__h35235[23:1]) :
	       sfd__h35235[22:0] ;
  assign _theResult___sfd__h60233 =
	     sfd__h59636[53] ? sfd__h59636[52:1] : sfd__h59636[51:0] ;
  assign _theResult___sfd__h60947 =
	     sfd__h60337[53] ?
	       ((x__h60322[10:0] == 11'd2046) ? 52'd0 : sfd__h60337[52:1]) :
	       sfd__h60337[51:0] ;
  assign _theResult___sfd__h69815 =
	     sfd__h69218[53] ? sfd__h69218[52:1] : sfd__h69218[51:0] ;
  assign _theResult___sfd__h70528 =
	     sfd__h69918[53] ?
	       ((x__h69903[10:0] == 11'd2046) ? 52'd0 : sfd__h69918[52:1]) :
	       sfd__h69918[51:0] ;
  assign _theResult___sfd__h83441 =
	     sfd__h82844[53] ? sfd__h82844[52:1] : sfd__h82844[51:0] ;
  assign _theResult___sfd__h84155 =
	     sfd__h83545[53] ?
	       ((x__h83530[10:0] == 11'd2046) ? 52'd0 : sfd__h83545[52:1]) :
	       sfd__h83545[51:0] ;
  assign _theResult___sfd__h94339 =
	     sfd__h93742[53] ? sfd__h93742[52:1] : sfd__h93742[51:0] ;
  assign _theResult___sfd__h95052 =
	     sfd__h94442[53] ?
	       ((x__h94427[10:0] == 11'd2046) ? 52'd0 : sfd__h94442[52:1]) :
	       sfd__h94442[51:0] ;
  assign _theResult___snd__h118111 = { _theResult____h109993[55:0], 1'd0 } ;
  assign _theResult___snd__h118122 =
	     (!_theResult____h109993[56] && _theResult____h109993[55]) ?
	       _theResult___snd__h118124 :
	       _theResult___snd__h118134 ;
  assign _theResult___snd__h118124 = { _theResult____h109993[54:0], 2'd0 } ;
  assign _theResult___snd__h118134 =
	     (!_theResult____h109993[56] && !_theResult____h109993[55] &&
	      !_theResult____h109993[54] &&
	      !_theResult____h109993[53] &&
	      !_theResult____h109993[52] &&
	      !_theResult____h109993[51] &&
	      !_theResult____h109993[50] &&
	      !_theResult____h109993[49] &&
	      !_theResult____h109993[48] &&
	      !_theResult____h109993[47] &&
	      !_theResult____h109993[46] &&
	      !_theResult____h109993[45] &&
	      !_theResult____h109993[44] &&
	      !_theResult____h109993[43] &&
	      !_theResult____h109993[42] &&
	      !_theResult____h109993[41] &&
	      !_theResult____h109993[40] &&
	      !_theResult____h109993[39] &&
	      !_theResult____h109993[38] &&
	      !_theResult____h109993[37] &&
	      !_theResult____h109993[36] &&
	      !_theResult____h109993[35] &&
	      !_theResult____h109993[34] &&
	      !_theResult____h109993[33] &&
	      !_theResult____h109993[32] &&
	      !_theResult____h109993[31] &&
	      !_theResult____h109993[30] &&
	      !_theResult____h109993[29] &&
	      !_theResult____h109993[28] &&
	      !_theResult____h109993[27] &&
	      !_theResult____h109993[26] &&
	      !_theResult____h109993[25] &&
	      !_theResult____h109993[24] &&
	      !_theResult____h109993[23] &&
	      !_theResult____h109993[22] &&
	      !_theResult____h109993[21] &&
	      !_theResult____h109993[20] &&
	      !_theResult____h109993[19] &&
	      !_theResult____h109993[18] &&
	      !_theResult____h109993[17] &&
	      !_theResult____h109993[16] &&
	      !_theResult____h109993[15] &&
	      !_theResult____h109993[14] &&
	      !_theResult____h109993[13] &&
	      !_theResult____h109993[12] &&
	      !_theResult____h109993[11] &&
	      !_theResult____h109993[10] &&
	      !_theResult____h109993[9] &&
	      !_theResult____h109993[8] &&
	      !_theResult____h109993[7] &&
	      !_theResult____h109993[6] &&
	      !_theResult____h109993[5] &&
	      !_theResult____h109993[4] &&
	      !_theResult____h109993[3] &&
	      !_theResult____h109993[2] &&
	      !_theResult____h109993[1] &&
	      !_theResult____h109993[0]) ?
	       _theResult____h109993 :
	       _theResult___snd__h118140 ;
  assign _theResult___snd__h118140 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_BITS_ETC__q82[54:0],
	       2'd0 } ;
  assign _theResult___snd__h118163 =
	     _theResult____h109993 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_TO_180__ETC___d3366 ;
  assign _theResult___snd__h126695 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h126704 :
	       _theResult___snd__h126697 ;
  assign _theResult___snd__h126697 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h126704 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798) ?
	       sfd__h102393 :
	       _theResult___snd__h126710 ;
  assign _theResult___snd__h126710 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_ETC__q84[54:0],
	       2'd0 } ;
  assign _theResult___snd__h126733 =
	     sfd__h102393 <<
	     IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3460 ;
  assign _theResult___snd__h135850 = { _theResult____h127603[55:0], 1'd0 } ;
  assign _theResult___snd__h135861 =
	     (!_theResult____h127603[56] && _theResult____h127603[55]) ?
	       _theResult___snd__h135863 :
	       _theResult___snd__h135873 ;
  assign _theResult___snd__h135863 = { _theResult____h127603[54:0], 2'd0 } ;
  assign _theResult___snd__h135873 =
	     (!_theResult____h127603[56] && !_theResult____h127603[55] &&
	      !_theResult____h127603[54] &&
	      !_theResult____h127603[53] &&
	      !_theResult____h127603[52] &&
	      !_theResult____h127603[51] &&
	      !_theResult____h127603[50] &&
	      !_theResult____h127603[49] &&
	      !_theResult____h127603[48] &&
	      !_theResult____h127603[47] &&
	      !_theResult____h127603[46] &&
	      !_theResult____h127603[45] &&
	      !_theResult____h127603[44] &&
	      !_theResult____h127603[43] &&
	      !_theResult____h127603[42] &&
	      !_theResult____h127603[41] &&
	      !_theResult____h127603[40] &&
	      !_theResult____h127603[39] &&
	      !_theResult____h127603[38] &&
	      !_theResult____h127603[37] &&
	      !_theResult____h127603[36] &&
	      !_theResult____h127603[35] &&
	      !_theResult____h127603[34] &&
	      !_theResult____h127603[33] &&
	      !_theResult____h127603[32] &&
	      !_theResult____h127603[31] &&
	      !_theResult____h127603[30] &&
	      !_theResult____h127603[29] &&
	      !_theResult____h127603[28] &&
	      !_theResult____h127603[27] &&
	      !_theResult____h127603[26] &&
	      !_theResult____h127603[25] &&
	      !_theResult____h127603[24] &&
	      !_theResult____h127603[23] &&
	      !_theResult____h127603[22] &&
	      !_theResult____h127603[21] &&
	      !_theResult____h127603[20] &&
	      !_theResult____h127603[19] &&
	      !_theResult____h127603[18] &&
	      !_theResult____h127603[17] &&
	      !_theResult____h127603[16] &&
	      !_theResult____h127603[15] &&
	      !_theResult____h127603[14] &&
	      !_theResult____h127603[13] &&
	      !_theResult____h127603[12] &&
	      !_theResult____h127603[11] &&
	      !_theResult____h127603[10] &&
	      !_theResult____h127603[9] &&
	      !_theResult____h127603[8] &&
	      !_theResult____h127603[7] &&
	      !_theResult____h127603[6] &&
	      !_theResult____h127603[5] &&
	      !_theResult____h127603[4] &&
	      !_theResult____h127603[3] &&
	      !_theResult____h127603[2] &&
	      !_theResult____h127603[1] &&
	      !_theResult____h127603[0]) ?
	       _theResult____h127603 :
	       _theResult___snd__h135879 ;
  assign _theResult___snd__h135879 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_BIT_ETC__q87[54:0],
	       2'd0 } ;
  assign _theResult___snd__h135902 =
	     _theResult____h127603 <<
	     IF_IF_3970_MINUS_SEXT_requestR_BITS_190_TO_180_ETC___d3744 ;
  assign _theResult___snd__h144458 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h144472 :
	       _theResult___snd__h126697 ;
  assign _theResult___snd__h144472 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798) ?
	       sfd__h102393 :
	       _theResult___snd__h144478 ;
  assign _theResult___snd__h144478 =
	     { IF_0_CONCAT_IF_requestR_BITS_190_TO_180_472_EQ_ETC__q90[54:0],
	       2'd0 } ;
  assign _theResult___snd__h144496 =
	     sfd__h102393 <<
	     IF_SEXT_requestR_BITS_190_TO_180_472_MINUS_102_ETC___d3790 ;
  assign _theResult___snd__h167119 =
	     (sV1_exp__h823 == 8'd0) ?
	       _theResult___snd__h167128 :
	       _theResult___snd__h167121 ;
  assign _theResult___snd__h167121 = { sV1_sfd__h824, 34'd0 } ;
  assign _theResult___snd__h167128 =
	     (sV1_exp__h823 == 8'd0 && !sV1_sfd__h824[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4246) ?
	       b__h38981 :
	       _theResult___snd__h167134 ;
  assign _theResult___snd__h167134 =
	     { IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q112[54:0],
	       2'd0 } ;
  assign _theResult___snd__h167157 =
	     b__h38981 <<
	     IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4273 ;
  assign _theResult___snd__h176680 = { _theResult____h168433[55:0], 1'd0 } ;
  assign _theResult___snd__h176691 =
	     (!_theResult____h168433[56] && _theResult____h168433[55]) ?
	       _theResult___snd__h176693 :
	       _theResult___snd__h176703 ;
  assign _theResult___snd__h176693 = { _theResult____h168433[54:0], 2'd0 } ;
  assign _theResult___snd__h176703 =
	     (!_theResult____h168433[56] && !_theResult____h168433[55] &&
	      !_theResult____h168433[54] &&
	      !_theResult____h168433[53] &&
	      !_theResult____h168433[52] &&
	      !_theResult____h168433[51] &&
	      !_theResult____h168433[50] &&
	      !_theResult____h168433[49] &&
	      !_theResult____h168433[48] &&
	      !_theResult____h168433[47] &&
	      !_theResult____h168433[46] &&
	      !_theResult____h168433[45] &&
	      !_theResult____h168433[44] &&
	      !_theResult____h168433[43] &&
	      !_theResult____h168433[42] &&
	      !_theResult____h168433[41] &&
	      !_theResult____h168433[40] &&
	      !_theResult____h168433[39] &&
	      !_theResult____h168433[38] &&
	      !_theResult____h168433[37] &&
	      !_theResult____h168433[36] &&
	      !_theResult____h168433[35] &&
	      !_theResult____h168433[34] &&
	      !_theResult____h168433[33] &&
	      !_theResult____h168433[32] &&
	      !_theResult____h168433[31] &&
	      !_theResult____h168433[30] &&
	      !_theResult____h168433[29] &&
	      !_theResult____h168433[28] &&
	      !_theResult____h168433[27] &&
	      !_theResult____h168433[26] &&
	      !_theResult____h168433[25] &&
	      !_theResult____h168433[24] &&
	      !_theResult____h168433[23] &&
	      !_theResult____h168433[22] &&
	      !_theResult____h168433[21] &&
	      !_theResult____h168433[20] &&
	      !_theResult____h168433[19] &&
	      !_theResult____h168433[18] &&
	      !_theResult____h168433[17] &&
	      !_theResult____h168433[16] &&
	      !_theResult____h168433[15] &&
	      !_theResult____h168433[14] &&
	      !_theResult____h168433[13] &&
	      !_theResult____h168433[12] &&
	      !_theResult____h168433[11] &&
	      !_theResult____h168433[10] &&
	      !_theResult____h168433[9] &&
	      !_theResult____h168433[8] &&
	      !_theResult____h168433[7] &&
	      !_theResult____h168433[6] &&
	      !_theResult____h168433[5] &&
	      !_theResult____h168433[4] &&
	      !_theResult____h168433[3] &&
	      !_theResult____h168433[2] &&
	      !_theResult____h168433[1] &&
	      !_theResult____h168433[0]) ?
	       _theResult____h168433 :
	       _theResult___snd__h176709 ;
  assign _theResult___snd__h176709 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q115[54:0],
	       2'd0 } ;
  assign _theResult___snd__h176732 =
	     _theResult____h168433 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_191_TO__ETC___d4561 ;
  assign _theResult___snd__h185404 =
	     (sV1_exp__h823 == 8'd0) ?
	       _theResult___snd__h185418 :
	       _theResult___snd__h167121 ;
  assign _theResult___snd__h185418 =
	     (sV1_exp__h823 == 8'd0 && !sV1_sfd__h824[22] &&
	      NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d4246) ?
	       b__h38981 :
	       _theResult___snd__h185424 ;
  assign _theResult___snd__h185424 =
	     { IF_0_CONCAT_IF_IF_requestR_BITS_191_TO_160_4_E_ETC__q118[54:0],
	       2'd0 } ;
  assign _theResult___snd__h185442 =
	     b__h38981 <<
	     IF_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFF_ETC___d4607 ;
  assign _theResult___snd_fst_exp__h127258 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 ?
	       _theResult___fst_exp__h118685 :
	       _theResult___fst_exp__h127255 ;
  assign _theResult___snd_fst_exp__h12831 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 ?
	       _theResult___fst_exp__h12314 :
	       _theResult___fst_exp__h12828 ;
  assign _theResult___snd_fst_exp__h12834 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d388 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h12831 ;
  assign _theResult___snd_fst_exp__h12837 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d386 ?
	       _theResult___snd_fst_exp__h12834 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h145051 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 ?
	       _theResult___fst_exp__h136424 :
	       _theResult___fst_exp__h145048 ;
  assign _theResult___snd_fst_exp__h167885 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 ?
	       11'd0 :
	       _theResult___fst_exp__h167882 ;
  assign _theResult___snd_fst_exp__h186200 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 ?
	       _theResult___fst_exp__h177457 :
	       _theResult___fst_exp__h186197 ;
  assign _theResult___snd_fst_exp__h23334 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 ?
	       _theResult___fst_exp__h22818 :
	       _theResult___fst_exp__h23331 ;
  assign _theResult___snd_fst_exp__h23337 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h23334 ;
  assign _theResult___snd_fst_exp__h23340 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 ?
	       _theResult___snd_fst_exp__h23337 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h29649 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 ?
	       _theResult___fst_exp__h29132 :
	       _theResult___fst_exp__h29646 ;
  assign _theResult___snd_fst_exp__h29652 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1216 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h29649 ;
  assign _theResult___snd_fst_exp__h29655 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1214 ?
	       _theResult___snd_fst_exp__h29652 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h35704 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 ?
	       _theResult___fst_exp__h35188 :
	       _theResult___fst_exp__h35701 ;
  assign _theResult___snd_fst_exp__h35707 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h35704 ;
  assign _theResult___snd_fst_exp__h35710 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 ?
	       _theResult___snd_fst_exp__h35707 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h61010 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2149 ?
	       _theResult___fst_exp__h60290 :
	       _theResult___fst_exp__h61007 ;
  assign _theResult___snd_fst_exp__h61013 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2147 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h61010 ;
  assign _theResult___snd_fst_exp__h61016 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2145 ?
	       _theResult___snd_fst_exp__h61013 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h70590 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2340 ?
	       _theResult___fst_exp__h69871 :
	       _theResult___fst_exp__h70587 ;
  assign _theResult___snd_fst_exp__h70593 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2339 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h70590 ;
  assign _theResult___snd_fst_exp__h70596 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2338 ?
	       _theResult___snd_fst_exp__h70593 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h84218 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2643 ?
	       _theResult___fst_exp__h83498 :
	       _theResult___fst_exp__h84215 ;
  assign _theResult___snd_fst_exp__h84221 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2640 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h84218 ;
  assign _theResult___snd_fst_exp__h84224 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2638 ?
	       _theResult___snd_fst_exp__h84221 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h95114 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2803 ?
	       _theResult___fst_exp__h94395 :
	       _theResult___fst_exp__h95111 ;
  assign _theResult___snd_fst_exp__h95117 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2802 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h95114 ;
  assign _theResult___snd_fst_exp__h95120 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2801 ?
	       _theResult___snd_fst_exp__h95117 :
	       11'd2047 ;
  assign _theResult___snd_fst_sfd__h102347 =
	     (value__h98232[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h98232[51:29] ;
  assign _theResult___snd_fst_sfd__h127259 =
	     _3074_MINUS_0_CONCAT_IF_requestR_BIT_179_45_THE_ETC___d3134 ?
	       _theResult___fst_sfd__h118686 :
	       _theResult___fst_sfd__h127256 ;
  assign _theResult___snd_fst_sfd__h12832 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d391 ?
	       _theResult___fst_sfd__h12315 :
	       _theResult___fst_sfd__h12829 ;
  assign _theResult___snd_fst_sfd__h145052 =
	     SEXT_requestR_BITS_190_TO_180_472_MINUS_1023_4_ETC___d3499 ?
	       _theResult___fst_sfd__h136425 :
	       _theResult___fst_sfd__h145049 ;
  assign _theResult___snd_fst_sfd__h148296 =
	     (value__h146413 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h146410 ;
  assign _theResult___snd_fst_sfd__h167886 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_BITS_191_TO_ETC___d4203 ?
	       52'd0 :
	       _theResult___fst_sfd__h167883 ;
  assign _theResult___snd_fst_sfd__h186201 =
	     SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d4314 ?
	       _theResult___fst_sfd__h177458 :
	       _theResult___fst_sfd__h186198 ;
  assign _theResult___snd_fst_sfd__h23335 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 ?
	       _theResult___fst_sfd__h22819 :
	       _theResult___fst_sfd__h23332 ;
  assign _theResult___snd_fst_sfd__h29650 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1219 ?
	       _theResult___fst_sfd__h29133 :
	       _theResult___fst_sfd__h29647 ;
  assign _theResult___snd_fst_sfd__h35705 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1449 ?
	       _theResult___fst_sfd__h35189 :
	       _theResult___fst_sfd__h35702 ;
  assign _theResult___snd_fst_sfd__h61011 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2149 ?
	       _theResult___fst_sfd__h60291 :
	       _theResult___fst_sfd__h61008 ;
  assign _theResult___snd_fst_sfd__h70591 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2340 ?
	       _theResult___fst_sfd__h69872 :
	       _theResult___fst_sfd__h70588 ;
  assign _theResult___snd_fst_sfd__h84219 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2643 ?
	       _theResult___fst_sfd__h83499 :
	       _theResult___fst_sfd__h84216 ;
  assign _theResult___snd_fst_sfd__h95115 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2803 ?
	       _theResult___fst_sfd__h94396 :
	       _theResult___fst_sfd__h95112 ;
  assign ab__h204197 = dw_result$wget ;
  assign b__h36303 = { value__h36305, 64'd0 } ;
  assign b__h38981 = { value__h36305, 32'd0 } ;
  assign b__h71188 = { value__h71190, 32'd0 } ;
  assign b__h95709 = { value__h71190, 64'd0 } ;
  assign din_inc___2_exp__h12866 = x__h12346[7:0] + 8'd1 ;
  assign din_inc___2_exp__h145082 = _theResult___fst_exp__h118100 + 8'd1 ;
  assign din_inc___2_exp__h145103 = _theResult___fst_exp__h126744 + 8'd1 ;
  assign din_inc___2_exp__h145132 = _theResult___fst_exp__h135839 + 8'd1 ;
  assign din_inc___2_exp__h145153 = _theResult___fst_exp__h144512 + 8'd1 ;
  assign din_inc___2_exp__h186241 = _theResult___fst_exp__h167168 + 11'd1 ;
  assign din_inc___2_exp__h186270 = _theResult___fst_exp__h176669 + 11'd1 ;
  assign din_inc___2_exp__h186291 = _theResult___fst_exp__h185458 + 11'd1 ;
  assign din_inc___2_exp__h23365 = x__h22850[7:0] + 8'd1 ;
  assign din_inc___2_exp__h29684 = x__h29164[7:0] + 8'd1 ;
  assign din_inc___2_exp__h35735 = x__h35220[7:0] + 8'd1 ;
  assign din_inc___2_exp__h61045 = x__h60322[10:0] + 11'd1 ;
  assign din_inc___2_exp__h70621 = x__h69903[10:0] + 11'd1 ;
  assign din_inc___2_exp__h84253 = x__h83530[10:0] + 11'd1 ;
  assign din_inc___2_exp__h95145 = x__h94427[10:0] + 11'd1 ;
  assign guard__h110003 =
	     { IF_sfdin18094_BIT_33_THEN_2_ELSE_0__q83[1],
	       { sfdin__h118094[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h11843 =
	     { IF_sfd___31833_BIT_40_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h11833[39:0], 23'd0 } != 63'd0 } ;
  assign guard__h118696 =
	     { IF_theResult___snd26695_BIT_33_THEN_2_ELSE_0__q85[1],
	       { _theResult___snd__h126695[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h12331 =
	     { IF_sfd___31833_BIT_39_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h11833[38:0], 24'd0 } != 63'd0 } ;
  assign guard__h127613 =
	     { IF_sfdin35833_BIT_33_THEN_2_ELSE_0__q88[1],
	       { sfdin__h135833[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h128211 = x__h128311 != 57'd0 ;
  assign guard__h136435 =
	     { IF_theResult___snd44458_BIT_33_THEN_2_ELSE_0__q91[1],
	       { _theResult___snd__h144458[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h159207 =
	     { IF_theResult___snd67119_BIT_4_THEN_2_ELSE_0__q113[1],
	       { _theResult___snd__h167119[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h168443 =
	     { IF_sfdin76663_BIT_4_THEN_2_ELSE_0__q116[1],
	       { sfdin__h176663[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h169041 = x__h169141 != 57'd0 ;
  assign guard__h177468 =
	     { IF_theResult___snd85404_BIT_4_THEN_2_ELSE_0__q119[1],
	       { _theResult___snd__h185404[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h22351 =
	     { IF_sfd___32341_BIT_40_THEN_2_ELSE_0__q19[1],
	       { sfd___3__h22341[39:0], 23'd0 } != 63'd0 } ;
  assign guard__h22835 =
	     { IF_sfd___32341_BIT_39_THEN_2_ELSE_0__q20[1],
	       { sfd___3__h22341[38:0], 24'd0 } != 63'd0 } ;
  assign guard__h28664 =
	     { IF_sfd___38654_BIT_8_THEN_2_ELSE_0__q27[1],
	       { sfd___3__h28654[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h29149 =
	     { IF_sfd___38654_BIT_7_THEN_2_ELSE_0__q28[1],
	       { sfd___3__h28654[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h34721 =
	     { IF_sfd___34711_BIT_8_THEN_2_ELSE_0__q38[1],
	       { sfd___3__h34711[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h35205 =
	     { IF_sfd___34711_BIT_7_THEN_2_ELSE_0__q39[1],
	       { sfd___3__h34711[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h36239 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605[23],
	       { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605[22:0],
		 65'd0 } !=
	       88'd0 } ;
  assign guard__h37014 =
	     { IF_x7200_BIT_24_THEN_2_ELSE_0__q44[1],
	       { x__h37200[23:0], 64'd0 } != 88'd0 } ;
  assign guard__h38243 =
	     { IF_x8461_BIT_24_THEN_2_ELSE_0__q45[1],
	       { x__h38461[23:0], 64'd0 } != 88'd0 } ;
  assign guard__h38917 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753[23],
	       { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h39468 =
	     { IF_x9654_BIT_24_THEN_2_ELSE_0__q46[1],
	       { x__h39654[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h40459 =
	     { IF_x0677_BIT_24_THEN_2_ELSE_0__q47[1],
	       { x__h40677[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h59619 =
	     { IF_sfd___39609_BIT_2_THEN_2_ELSE_0__q48[1],
	       { sfd___3__h59609[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h60307 =
	     { IF_sfd___39609_BIT_1_THEN_2_ELSE_0__q49[1],
	       { sfd___3__h59609[0], 53'd0 } != 54'd0 } ;
  assign guard__h69201 =
	     { IF_sfd___39191_BIT_2_THEN_2_ELSE_0__q59[1],
	       { sfd___3__h69191[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h69888 =
	     { IF_sfd___39191_BIT_1_THEN_2_ELSE_0__q60[1],
	       { sfd___3__h69191[0], 53'd0 } != 54'd0 } ;
  assign guard__h71124 =
	     { IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491[52],
	       { IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h71675 =
	     { IF_x1861_BIT_53_THEN_2_ELSE_0__q65[1],
	       { x__h71861[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h72666 =
	     { IF_x2884_BIT_53_THEN_2_ELSE_0__q66[1],
	       { x__h72884[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h82827 =
	     { IF_sfd___31833_BIT_11_THEN_2_ELSE_0__q8[1],
	       { sfd___3__h11833[10:0], 52'd0 } != 63'd0 } ;
  assign guard__h83515 =
	     { IF_sfd___31833_BIT_10_THEN_2_ELSE_0__q9[1],
	       { sfd___3__h11833[9:0], 53'd0 } != 63'd0 } ;
  assign guard__h93725 =
	     { IF_sfd___32341_BIT_11_THEN_2_ELSE_0__q21[1],
	       { sfd___3__h22341[10:0], 52'd0 } != 63'd0 } ;
  assign guard__h94412 =
	     { IF_sfd___32341_BIT_10_THEN_2_ELSE_0__q22[1],
	       { sfd___3__h22341[9:0], 53'd0 } != 63'd0 } ;
  assign guard__h95645 =
	     { IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939[52],
	       { IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939[51:0],
		 65'd0 } !=
	       117'd0 } ;
  assign guard__h96420 =
	     { IF_x6606_BIT_53_THEN_2_ELSE_0__q80[1],
	       { x__h96606[52:0], 64'd0 } != 117'd0 } ;
  assign guard__h97632 =
	     { IF_x7850_BIT_53_THEN_2_ELSE_0__q81[1],
	       { x__h97850[52:0], 64'd0 } != 117'd0 } ;
  assign out1___1__h36954 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605[88:24] +
	     65'd1 ;
  assign out1___1__h39408 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753[56:24] +
	     33'd1 ;
  assign out1___1__h71615 =
	     IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491[85:53] +
	     33'd1 ;
  assign out1___1__h96360 =
	     IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939[117:53] +
	     65'd1 ;
  assign out___1_sfd__h146410 = { value__h146413, 29'd0 } ;
  assign out_exp__h118626 =
	     sfdin__h118094[34] ?
	       _theResult___exp__h118623 :
	       _theResult___fst_exp__h118100 ;
  assign out_exp__h12259 =
	     sfd___3__h11833[41] ? _theResult___exp__h12256 : 8'd0 ;
  assign out_exp__h127196 =
	     _theResult___snd__h126695[34] ?
	       _theResult___exp__h127193 :
	       _theResult___fst_exp__h126744 ;
  assign out_exp__h12770 =
	     sfd___3__h11833[40] ? _theResult___exp__h12767 : x__h12346[7:0] ;
  assign out_exp__h136365 =
	     sfdin__h135833[34] ?
	       _theResult___exp__h136362 :
	       _theResult___fst_exp__h135839 ;
  assign out_exp__h144989 =
	     _theResult___snd__h144458[34] ?
	       _theResult___exp__h144986 :
	       _theResult___fst_exp__h144512 ;
  assign out_exp__h167823 =
	     _theResult___snd__h167119[5] ?
	       _theResult___exp__h167820 :
	       _theResult___fst_exp__h167168 ;
  assign out_exp__h177398 =
	     sfdin__h176663[5] ?
	       _theResult___exp__h177395 :
	       _theResult___fst_exp__h176669 ;
  assign out_exp__h186138 =
	     _theResult___snd__h185404[5] ?
	       _theResult___exp__h186135 :
	       _theResult___fst_exp__h185458 ;
  assign out_exp__h22764 =
	     sfd___3__h22341[41] ? _theResult___exp__h22761 : 8'd0 ;
  assign out_exp__h23274 =
	     sfd___3__h22341[40] ? _theResult___exp__h23271 : x__h22850[7:0] ;
  assign out_exp__h29077 =
	     sfd___3__h28654[9] ? _theResult___exp__h29074 : 8'd0 ;
  assign out_exp__h29588 =
	     sfd___3__h28654[8] ? _theResult___exp__h29585 : x__h29164[7:0] ;
  assign out_exp__h35134 =
	     sfd___3__h34711[9] ? _theResult___exp__h35131 : 8'd0 ;
  assign out_exp__h35644 =
	     sfd___3__h34711[8] ? _theResult___exp__h35641 : x__h35220[7:0] ;
  assign out_exp__h60235 =
	     sfd___3__h59609[3] ? _theResult___exp__h60232 : 11'd0 ;
  assign out_exp__h60949 =
	     sfd___3__h59609[2] ? _theResult___exp__h60946 : x__h60322[10:0] ;
  assign out_exp__h69817 =
	     sfd___3__h69191[3] ? _theResult___exp__h69814 : 11'd0 ;
  assign out_exp__h70530 =
	     sfd___3__h69191[2] ? _theResult___exp__h70527 : x__h69903[10:0] ;
  assign out_exp__h83443 =
	     sfd___3__h11833[12] ? _theResult___exp__h83440 : 11'd0 ;
  assign out_exp__h84157 =
	     sfd___3__h11833[11] ?
	       _theResult___exp__h84154 :
	       x__h83530[10:0] ;
  assign out_exp__h94341 =
	     sfd___3__h22341[12] ? _theResult___exp__h94338 : 11'd0 ;
  assign out_exp__h95054 =
	     sfd___3__h22341[11] ?
	       _theResult___exp__h95051 :
	       x__h94427[10:0] ;
  assign out_sfd__h118627 =
	     sfdin__h118094[34] ?
	       _theResult___sfd__h118624 :
	       sfdin__h118094[56:34] ;
  assign out_sfd__h12260 =
	     sfd___3__h11833[41] ?
	       _theResult___sfd__h12257 :
	       sfd___3__h11833[63:41] ;
  assign out_sfd__h127197 =
	     _theResult___snd__h126695[34] ?
	       _theResult___sfd__h127194 :
	       _theResult___snd__h126695[56:34] ;
  assign out_sfd__h12771 =
	     sfd___3__h11833[40] ?
	       _theResult___sfd__h12768 :
	       sfd___3__h11833[62:40] ;
  assign out_sfd__h136366 =
	     sfdin__h135833[34] ?
	       _theResult___sfd__h136363 :
	       sfdin__h135833[56:34] ;
  assign out_sfd__h144990 =
	     _theResult___snd__h144458[34] ?
	       _theResult___sfd__h144987 :
	       _theResult___snd__h144458[56:34] ;
  assign out_sfd__h167824 =
	     _theResult___snd__h167119[5] ?
	       _theResult___sfd__h167821 :
	       _theResult___snd__h167119[56:5] ;
  assign out_sfd__h177399 =
	     sfdin__h176663[5] ?
	       _theResult___sfd__h177396 :
	       sfdin__h176663[56:5] ;
  assign out_sfd__h186139 =
	     _theResult___snd__h185404[5] ?
	       _theResult___sfd__h186136 :
	       _theResult___snd__h185404[56:5] ;
  assign out_sfd__h22765 =
	     sfd___3__h22341[41] ?
	       _theResult___sfd__h22762 :
	       sfd___3__h22341[63:41] ;
  assign out_sfd__h23275 =
	     sfd___3__h22341[40] ?
	       _theResult___sfd__h23272 :
	       sfd___3__h22341[62:40] ;
  assign out_sfd__h29078 =
	     sfd___3__h28654[9] ?
	       _theResult___sfd__h29075 :
	       sfd___3__h28654[31:9] ;
  assign out_sfd__h29589 =
	     sfd___3__h28654[8] ?
	       _theResult___sfd__h29586 :
	       sfd___3__h28654[30:8] ;
  assign out_sfd__h35135 =
	     sfd___3__h34711[9] ?
	       _theResult___sfd__h35132 :
	       sfd___3__h34711[31:9] ;
  assign out_sfd__h35645 =
	     sfd___3__h34711[8] ?
	       _theResult___sfd__h35642 :
	       sfd___3__h34711[30:8] ;
  assign out_sfd__h60236 =
	     sfd___3__h59609[3] ?
	       _theResult___sfd__h60233 :
	       sfd___3__h59609[54:3] ;
  assign out_sfd__h60950 =
	     sfd___3__h59609[2] ?
	       _theResult___sfd__h60947 :
	       sfd___3__h59609[53:2] ;
  assign out_sfd__h69818 =
	     sfd___3__h69191[3] ?
	       _theResult___sfd__h69815 :
	       sfd___3__h69191[54:3] ;
  assign out_sfd__h70531 =
	     sfd___3__h69191[2] ?
	       _theResult___sfd__h70528 :
	       sfd___3__h69191[53:2] ;
  assign out_sfd__h83444 =
	     sfd___3__h11833[12] ?
	       _theResult___sfd__h83441 :
	       sfd___3__h11833[63:12] ;
  assign out_sfd__h84158 =
	     sfd___3__h11833[11] ?
	       _theResult___sfd__h84155 :
	       sfd___3__h11833[62:11] ;
  assign out_sfd__h94342 =
	     sfd___3__h22341[12] ?
	       _theResult___sfd__h94339 :
	       sfd___3__h22341[63:12] ;
  assign out_sfd__h95055 =
	     sfd___3__h22341[11] ?
	       _theResult___sfd__h95052 :
	       sfd___3__h22341[62:11] ;
  assign requestR_BITS_126_TO_116_903_EQ_0_917_AND_requ_ETC___d4924 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign requestR_BITS_179_TO_128_474_ULE_requestR_BITS_ETC___d4936 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_BITS_179_TO_128_474_ULT_requestR_BITS_ETC___d4941 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_BITS_190_TO_180_472_EQ_0_480_AND_requ_ETC___d4920 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_BITS_190_TO_180_472_EQ_0_480_AND_requ_ETC___d4994 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_BITS_190_TO_180_472_ULE_requestR_BITS_ETC___d4989 :
		NOT_requestR_BITS_190_TO_180_472_ULT_requestR__ETC___d4990) ;
  assign requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4912 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4957 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4979 =
	     requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4957 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_BITS_190_TO_180_472_EQ_requestR_BITS__ETC___d4935 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_BITS_190_TO_180_472_MINUS_1023___d2482 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_BITS_190_TO_180_472_ULE_requestR_BITS_ETC___d4933 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_BITS_190_TO_180_472_ULE_requestR_BITS_ETC___d4989 =
	     requestR_BITS_190_TO_180_472_ULE_requestR_BITS_ETC___d4933 &&
	     (!requestR_BITS_190_TO_180_472_EQ_requestR_BITS__ETC___d4935 ||
	      requestR_BITS_179_TO_128_474_ULE_requestR_BITS_ETC___d4936) &&
	     !requestR_BITS_190_TO_180_472_ULT_requestR_BITS_ETC___d4940 &&
	     (!requestR_BITS_190_TO_180_472_EQ_requestR_BITS__ETC___d4935 ||
	      !requestR_BITS_179_TO_128_474_ULT_requestR_BITS_ETC___d4941) ;
  assign requestR_BITS_190_TO_180_472_ULT_requestR_BITS_ETC___d4940 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT_req_ETC___d811 =
	     requestR[191:128] == 64'd0 ||
	     !requestR[191] && !requestR[190] && !requestR[189] &&
	     !requestR[188] &&
	     !requestR[187] &&
	     !requestR[186] &&
	     !requestR[185] &&
	     !requestR[184] &&
	     !requestR[183] &&
	     !requestR[182] &&
	     !requestR[181] &&
	     !requestR[180] &&
	     NOT_requestR_BIT_179_45_46_AND_NOT_requestR_BI_ETC___d798 ;
  assign requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1731 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1695[19] ||
	      NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1697 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1716 &&
	      x__h38461[88:25] == 64'hFFFFFFFFFFFFFFFF) ;
  assign requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1874 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	     (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1837[19] ||
	      NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1839 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d1858 &&
	      x__h40677[56:25] == 32'hFFFFFFFF) ;
  assign requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1942 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1940 ;
  assign requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_BIT_159_6_OR_requestR_BIT_158_86_OR_r_ETC___d1574 =
	     (requestR[159] ||
	      requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016) &&
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d1571 ;
  assign requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037 =
	     requestR[179] || requestR[178] || requestR[177] ||
	     requestR[176] ||
	     requestR[175] ||
	     requestR[174] ||
	     requestR[173] ||
	     requestR[172] ||
	     requestR[171] ||
	     requestR[170] ||
	     requestR[169] ||
	     requestR[168] ||
	     requestR[167] ||
	     requestR[166] ||
	     requestR[165] ||
	     requestR[164] ||
	     requestR[163] ||
	     requestR[162] ||
	     requestR[161] ||
	     requestR[160] ||
	     requestR[159] ||
	     requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016 ;
  assign requestR_BIT_191_25_OR_NOT_requestR_BITS_190_T_ETC___d2619 =
	     requestR[191] ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2582[23] ||
	      NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2584 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d2603 &&
	      x__h72884[85:54] == 32'hFFFFFFFF) ;
  assign requestR_BIT_191_25_OR_NOT_requestR_BITS_190_T_ETC___d3058 =
	     requestR[191] ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3022[23] ||
	      NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3024 &&
	      IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_OR_NOT__ETC___d3043 &&
	      x__h97850[117:54] == 64'hFFFFFFFFFFFFFFFF) ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1058 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     (!_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 ||
	      !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 &&
	      !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d881 &&
	      _theResult___fst_exp__h23331 == 8'd255 &&
	      _theResult___fst_sfd__h23332 == 23'd0) ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1061 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1070 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d879 &&
	     !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d880 &&
	     IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d1067 ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2915 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     (!_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2801 ||
	      !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2802 &&
	      !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2803 &&
	      _theResult___fst_exp__h95111 == 11'd2047 &&
	      _theResult___fst_sfd__h95112 == 52'd0) ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2918 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2801 &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2802 ;
  assign requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2927 =
	     (requestR[191] || requestR[190] || requestR[189] ||
	      requestR[188] ||
	      requestR[187] ||
	      requestR[186] ||
	      requestR[185] ||
	      requestR[184] ||
	      requestR[183] ||
	      requestR[182] ||
	      requestR[181] ||
	      requestR[180] ||
	      requestR_BIT_179_45_OR_requestR_BIT_178_47_OR__ETC___d1037) &&
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2801 &&
	     !_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2802 &&
	     IF_64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_TH_ETC___d2924 ;
  assign res___1__h203106 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h203544 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h203554 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h203573 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h50068 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h50304 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h50314 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h50333 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h190814 =
	     NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d4948 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h195362 =
	     NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d4948 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h198066 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_BITS_190_TO_180_472_EQ_0_480_AND_requ_ETC___d4994) ?
	       64'd1 :
	       64'd0 ;
  assign res__h200761 =
	     NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d4948 ?
	       64'd1 :
	       64'd0 ;
  assign res__h202638 =
	     NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d5013 ?
	       64'd1 :
	       64'd0 ;
  assign res__h203589 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h203770 = { 32'hFFFFFFFF, fpu$response_get[36:5] } ;
  assign res__h41672 =
	     { 32'hFFFFFFFF,
	       requestR_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AND__ETC___d28 } ;
  assign res__h41909 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign res__h47281 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2007 ?
	       64'd1 :
	       64'd0 ;
  assign res__h48764 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1944 ?
	       64'd1 :
	       64'd0 ;
  assign res__h49833 =
	     NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d2025 ?
	       64'd1 :
	       64'd0 ;
  assign res__h50349 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign result__h128216 =
	     { _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_472_EQ_ETC___d3504[56:1],
	       _0b0_CONCAT_NOT_requestR_BITS_190_TO_180_472_EQ_ETC___d3504[0] |
	       guard__h128211 } ;
  assign result__h169046 =
	     { _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d4319[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_BITS_191_TO_160_4_E_ETC___d4319[0] |
	       guard__h169041 } ;
  assign sV1_exp__h823 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h824 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h926 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h927 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h11833 =
	     sfd__h2228 <<
	     IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_BI_ETC___d382 ;
  assign sfd___3__h22341 =
	     requestR[191:128] <<
	     IF_requestR_BIT_191_25_THEN_0_ELSE_IF_requestR_ETC___d875 ;
  assign sfd___3__h28654 =
	     sfd__h23750 <<
	     IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d1210 ;
  assign sfd___3__h34711 =
	     requestR[159:128] <<
	     IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d1443 ;
  assign sfd___3__h59609 =
	     sfd__h51608 <<
	     IF_IF_requestR_BIT_159_6_THEN_NEG_requestR_BIT_ETC___d2141 ;
  assign sfd___3__h69191 =
	     sfd__h61439 <<
	     IF_requestR_BIT_159_6_THEN_0_ELSE_IF_requestR__ETC___d2334 ;
  assign sfd__h102393 = { value__h71190, 3'd0 } ;
  assign sfd__h118192 =
	     { 1'b0,
	       _theResult___fst_exp__h118100 != 8'd0,
	       sfdin__h118094[56:34] } +
	     25'd1 ;
  assign sfd__h11860 = { 2'd0, sfd___3__h11833[63:41] } + 25'd1 ;
  assign sfd__h12361 =
	     { 1'b0, x__h12346[7:0] != 8'd0, sfd___3__h11833[62:40] } +
	     25'd1 ;
  assign sfd__h126762 =
	     { 1'b0,
	       _theResult___fst_exp__h126744 != 8'd0,
	       _theResult___snd__h126695[56:34] } +
	     25'd1 ;
  assign sfd__h135931 =
	     { 1'b0,
	       _theResult___fst_exp__h135839 != 8'd0,
	       sfdin__h135833[56:34] } +
	     25'd1 ;
  assign sfd__h144531 =
	     { 1'b0,
	       _theResult___fst_exp__h144512 != 8'd0,
	       _theResult___snd__h144458[56:34] } +
	     25'd1 ;
  assign sfd__h167186 =
	     { 1'b0,
	       _theResult___fst_exp__h167168 != 11'd0,
	       _theResult___snd__h167119[56:5] } +
	     54'd1 ;
  assign sfd__h176761 =
	     { 1'b0,
	       _theResult___fst_exp__h176669 != 11'd0,
	       sfdin__h176663[56:5] } +
	     54'd1 ;
  assign sfd__h185477 =
	     { 1'b0,
	       _theResult___fst_exp__h185458 != 11'd0,
	       _theResult___snd__h185404[56:5] } +
	     54'd1 ;
  assign sfd__h2228 = requestR[191] ? -requestR[191:128] : requestR[191:128] ;
  assign sfd__h22368 = { 2'd0, sfd___3__h22341[63:41] } + 25'd1 ;
  assign sfd__h22865 =
	     { 1'b0, x__h22850[7:0] != 8'd0, sfd___3__h22341[62:40] } +
	     25'd1 ;
  assign sfd__h23750 =
	     requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h28681 = { 2'd0, sfd___3__h28654[31:9] } + 25'd1 ;
  assign sfd__h29179 =
	     { 1'b0, x__h29164[7:0] != 8'd0, sfd___3__h28654[30:8] } + 25'd1 ;
  assign sfd__h34738 = { 2'd0, sfd___3__h34711[31:9] } + 25'd1 ;
  assign sfd__h35235 =
	     { 1'b0, x__h35220[7:0] != 8'd0, sfd___3__h34711[30:8] } + 25'd1 ;
  assign sfd__h51608 = { sfd__h23750, 23'd0 } ;
  assign sfd__h59636 = { 2'd0, sfd___3__h59609[54:3] } + 54'd1 ;
  assign sfd__h60337 =
	     { 1'b0, x__h60322[10:0] != 11'd0, sfd___3__h59609[53:2] } +
	     54'd1 ;
  assign sfd__h61439 = { requestR[159:128], 23'd0 } ;
  assign sfd__h69218 = { 2'd0, sfd___3__h69191[54:3] } + 54'd1 ;
  assign sfd__h69918 =
	     { 1'b0, x__h69903[10:0] != 11'd0, sfd___3__h69191[53:2] } +
	     54'd1 ;
  assign sfd__h82844 = { 2'd0, sfd___3__h11833[63:12] } + 54'd1 ;
  assign sfd__h83545 =
	     { 1'b0, x__h83530[10:0] != 11'd0, sfd___3__h11833[62:11] } +
	     54'd1 ;
  assign sfd__h93742 = { 2'd0, sfd___3__h22341[63:12] } + 54'd1 ;
  assign sfd__h94442 =
	     { 1'b0, x__h94427[10:0] != 11'd0, sfd___3__h22341[62:11] } +
	     54'd1 ;
  assign sfdin__h118094 =
	     _theResult____h109993[56] ?
	       _theResult___snd__h118111 :
	       _theResult___snd__h118122 ;
  assign sfdin__h135833 =
	     _theResult____h127603[56] ?
	       _theResult___snd__h135850 :
	       _theResult___snd__h135861 ;
  assign sfdin__h176663 =
	     _theResult____h168433[56] ?
	       _theResult___snd__h176680 :
	       _theResult___snd__h176691 ;
  assign value__h146413 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 &&
	      !sV1_sfd__h824[22]) ?
	       _theResult___fst_sfd__h146668 :
	       sV1_sfd__h824 ;
  assign value__h36305 = { 1'b0, sV1_exp__h823 != 8'd0, sV1_sfd__h824 } ;
  assign value__h71190 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h98232 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h98689 :
	       requestR[179:128] ;
  assign x__h12346 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d385 +
	     9'd127 ;
  assign x__h128311 = sfd__h102393 << x__h128344 ;
  assign x__h128344 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_BITS_190_TO_180_472_M_ETC___d3500 ;
  assign x__h12967 =
	     { 2'd0,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d601,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d604,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d613 } ;
  assign x__h13255 =
	     { 33'h1FFFFFFFE,
	       requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT_req_ETC___d811 ?
		 8'd0 :
		 _theResult___snd_fst_exp__h23340,
	       (requestR[191:128] == 64'd0 ||
		NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d958) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h23335 } ;
  assign x__h145368 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4086,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4097,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4113,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4126,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d4139 } ;
  assign x__h146350 =
	     { IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4645,
	       (sV1_exp__h823 == 8'd255) ?
		 11'd2047 :
		 _theResult___fst_exp__h186209,
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4809 } ;
  assign x__h169141 = b__h38981 << x__h169174 ;
  assign x__h169174 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_BITS_191_TO_160_4__ETC___d4315 ;
  assign x__h1779 = { 32'hFFFFFFFF, x__h1785 } ;
  assign x__h1785 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h186474 =
	     { IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4846,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4853,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4867,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4879,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d4891 } ;
  assign x__h187397 =
	     requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4912 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_BITS_126_TO_116_903_EQ_2047_904_AN_ETC___d4951)))) ;
  assign x__h190946 =
	     { requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4957,
	       4'd0 } ;
  assign x__h191945 =
	     requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4912 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_BITS_190_TO_180_472_EQ_0_480_AND_r_ETC___d4965))))) ;
  assign x__h1925 = { 32'hFFFFFFFF, x__h1931 } ;
  assign x__h1931 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h196389 =
	     requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4979 ?
	       64'd0 :
	       res__h198066 ;
  assign x__h199084 =
	     requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4979 ?
	       64'd0 :
	       res__h200761 ;
  assign x__h200780 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h200961 =
	     requestR_BITS_190_TO_180_472_EQ_2047_473_AND_N_ETC___d4979 ?
	       64'd0 :
	       res__h202638 ;
  assign x__h203088 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h203106 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h203544 :
		  IF_requestR_BITS_190_TO_180_472_EQ_0_480_AND_r_ETC___d5036) ;
  assign x__h203738 =
	     fpu$response_get[69] ? res__h203770 : fpu$response_get[68:5] ;
  assign x__h2059 = { 32'hFFFFFFFF, x__h2065 } ;
  assign x__h2065 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d19 } ;
  assign x__h2207 = { 32'hFFFFFFFF, x__h2213 } ;
  assign x__h2213 =
	     { requestR[191:128] != 64'd0 &&
	       (NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d390 ?
		  requestR[191] :
		  IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d440),
	       IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d494,
	       (requestR[191:128] == 64'd0 ||
		NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d390) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h12832 } ;
  assign x__h22850 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d878 +
	     9'd127 ;
  assign x__h23444 =
	     { 2'd0,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1058,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1061,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d1070 } ;
  assign x__h23729 = { 32'hFFFFFFFF, x__h23735 } ;
  assign x__h23735 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d1218 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d1261),
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1315,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_BIT_159_6_THEN_NEG_requestR_BI_ETC___d1218) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h29650 } ;
  assign x__h29164 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d1213 +
	     9'd127 ;
  assign x__h29785 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1390,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1393,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_BIT_159_6_THEN_NEG_requestR_BITS_1_ETC___d1402 } ;
  assign x__h30070 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d1522,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_BIT_158_86_87_AND_NOT_requestR_BI_ETC___d777 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 ||
		_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h35705 } ;
  assign x__h35220 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1446 +
	     9'd127 ;
  assign x__h35814 =
	     { 2'd0,
	       NOT_requestR_BITS_159_TO_128_079_EQ_0_080_081__ETC___d1563,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_BIT_158_86_OR_requestR_BIT_157_88_OR__ETC___d1016) &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1447 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d1448,
	       requestR[159:128] != 32'd0 &&
	       requestR_BIT_159_6_OR_requestR_BIT_158_86_OR_r_ETC___d1574 } ;
  assign x__h36098 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       64'h8000000000000000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1664 ;
  assign x__h37200 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605 >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1631 |
	     ~(89'h1FFFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1631) &
	     {89{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1605[88]}} ;
  assign x__h37828 =
	     { sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	       sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0 ||
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1674,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1685 } ;
  assign x__h38083 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       64'h0 :
	       ((sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
		  64'hFFFFFFFFFFFFFFFF :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1724) ;
  assign x__h38461 =
	     { sV1_exp__h823 != 8'd0, sV1_sfd__h824, 65'd0 } >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1695 ;
  assign x__h38538 =
	     { sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	       sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0 ||
	       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1731,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1740 } ;
  assign x__h38773 = { {32{x__h38776[31]}}, x__h38776 } ;
  assign x__h38776 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       32'h80000000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1812 ;
  assign x__h39654 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753 >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1779 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1779) &
	     {57{IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1753[56]}} ;
  assign x__h40041 =
	     { sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	       sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0 ||
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1820,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (sV1_exp__h823 != 8'd0 || sV1_sfd__h824 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0_ETC___d1828 } ;
  assign x__h40296 = { 32'd0, x__h40299 } ;
  assign x__h40299 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       32'h0 :
	       ((sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1866) ;
  assign x__h40677 =
	     { sV1_exp__h823 != 8'd0, sV1_sfd__h824, 33'd0 } >>
	     NEG_SEXT_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d1837 ;
  assign x__h40754 =
	     { sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	       sV1_exp__h823 == 8'd255 && sV1_sfd__h824 == 23'd0 ||
	       requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_AND_ETC___d1874,
	       3'd0,
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 == 23'd0) &&
	       (sV1_exp__h823 != 8'd255 || sV1_sfd__h824 != 23'd0) &&
	       (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	       NOT_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFF_ETC___d1881 } ;
  assign x__h40994 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1906 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1952 ;
  assign x__h43033 =
	     { IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1954,
	       4'd0 } ;
  assign x__h43628 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1906 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1968 ;
  assign x__h46153 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h46274 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h46412 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1991 ?
	       64'd0 :
	       res__h47281 ;
  assign x__h47895 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1991 ?
	       64'd0 :
	       res__h48764 ;
  assign x__h48783 =
	     { sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0 ||
	       sV2_exp__h926 == 8'd255 && sV2_sfd__h927 != 23'd0,
	       4'd0 } ;
  assign x__h48964 =
	     IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5__ETC___d1991 ?
	       64'd0 :
	       res__h49833 ;
  assign x__h50050 =
	     (sV1_exp__h823 == 8'd255 && sV1_sfd__h824 != 23'd0) ?
	       res___1__h50068 :
	       IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d2039 ;
  assign x__h51217 = { requestR[127], requestR[190:128] } ;
  assign x__h51339 = { !requestR[127], requestR[190:128] } ;
  assign x__h51463 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h51593 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_15_ETC___d2191,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h61016,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2276 } ;
  assign x__h60322 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2144 +
	     12'd1023 ;
  assign x__h61142 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2145 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2147 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2149 &&
		_theResult___fst_exp__h61007 == 11'd2047 &&
		_theResult___fst_sfd__h61008 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2145 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2147,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2145 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6_THE_ETC___d2147 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_BIT_159_6__ETC___d2293 } ;
  assign x__h61427 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h70596,
	       IF_requestR_BITS_159_TO_128_079_EQ_0_080_OR_NO_ETC___d2443 } ;
  assign x__h69903 =
	     _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2337 +
	     12'd1023 ;
  assign x__h70696 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2338 ||
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2339 &&
		!_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2340 &&
		_theResult___fst_exp__h70587 == 11'd2047 &&
		_theResult___fst_sfd__h70588 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2338 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2339,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2338 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THEN_0_ETC___d2339 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_BIT_159_6_THE_ETC___d2460 } ;
  assign x__h70980 = { {32{x__h70983[31]}}, x__h70983 } ;
  assign x__h70983 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       32'h80000000 :
	       IF_requestR_BITS_190_TO_180_472_EQ_2047_473_AN_ETC___d2550 ;
  assign x__h71861 =
	     IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491 >>
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2517 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2517) &
	     {86{IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2491[85]}} ;
  assign x__h72248 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_BITS_190_TO_180_472_EQ_0_480_486__ETC___d2561,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d2572 } ;
  assign x__h72503 = { 32'd0, x__h72506 } ;
  assign x__h72506 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       32'h0 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  32'hFFFFFFFF :
		  IF_requestR_BIT_191_25_OR_requestR_BITS_190_TO_ETC___d2611) ;
  assign x__h72884 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2582 ;
  assign x__h72961 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       requestR_BIT_191_25_OR_NOT_requestR_BITS_190_T_ETC___d2619,
	       3'd0,
	       NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d2629 } ;
  assign x__h73197 =
	     { requestR[191:128] != 64'd0 &&
	       (NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d2642 ?
		  requestR[191] :
		  IF_64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_ETC___d2682),
	       IF_requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT__ETC___d2735,
	       (requestR[191:128] == 64'd0 ||
		NOT_IF_requestR_BIT_191_25_THEN_NEG_requestR_B_ETC___d2642) ?
		 52'd0 :
		 _theResult___snd_fst_sfd__h84219 } ;
  assign x__h83530 =
	     _64_MINUS_0_CONCAT_IF_IF_requestR_BIT_191_25_TH_ETC___d2637 +
	     12'd1023 ;
  assign x__h84350 =
	     { 2'd0,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2778,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2781,
	       requestR[191:128] != 64'd0 &&
	       IF_requestR_BIT_191_25_THEN_NEG_requestR_BITS__ETC___d2790 } ;
  assign x__h84635 =
	     { 1'd0,
	       requestR_BITS_191_TO_128_22_EQ_0_23_OR_NOT_req_ETC___d811 ?
		 11'd0 :
		 _theResult___snd_fst_exp__h95120,
	       (requestR[191:128] == 64'd0 ||
		NOT_requestR_BIT_191_25_22_AND_NOT_requestR_BI_ETC___d2878) ?
		 52'd0 :
		 _theResult___snd_fst_sfd__h95115 } ;
  assign x__h94427 =
	     _64_MINUS_0_CONCAT_IF_requestR_BIT_191_25_THEN__ETC___d2800 +
	     12'd1023 ;
  assign x__h95220 =
	     { 2'd0,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2915,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2918,
	       requestR[191:128] != 64'd0 &&
	       requestR_BIT_191_25_OR_requestR_BIT_190_23_OR__ETC___d2927 } ;
  assign x__h95504 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       64'h8000000000000000 :
	       IF_requestR_BITS_190_TO_180_472_EQ_2047_473_AN_ETC___d2998 ;
  assign x__h96606 =
	     IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939 >>
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2965 |
	     ~(118'h3FFFFFFFFFFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d2965) &
	     {118{IF_requestR_BIT_191_25_THEN_NEG_0b0_CONCAT_NOT_ETC___d2939[117]}} ;
  assign x__h97217 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_BITS_190_TO_180_472_EQ_0_480_486__ETC___d3005,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_ETC___d3013 } ;
  assign x__h97472 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       64'h0 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  64'hFFFFFFFFFFFFFFFF :
		  IF_requestR_BIT_191_25_OR_requestR_BITS_190_TO_ETC___d3051) ;
  assign x__h97850 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 65'd0 } >>
	     NEG_SEXT_requestR_BITS_190_TO_180_472_MINUS_10_ETC___d3022 ;
  assign x__h97927 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       requestR_BIT_191_25_OR_NOT_requestR_BITS_190_T_ETC___d3058,
	       3'd0,
	       NOT_requestR_BITS_190_TO_180_472_EQ_2047_473_5_ETC___d3068 } ;
  assign x__h98162 = { 32'hFFFFFFFF, x__h98168 } ;
  assign x__h98168 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_BITS_190_TO_180_472_EQ_0_480_THEN__ETC___d3827,
	       (requestR[190:180] == 11'd2047) ?
		 8'd255 :
		 _theResult___fst_exp__h145060,
	       (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 _theResult___snd_fst_sfd__h102347 :
		 _theResult___fst_sfd__h145064 } ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 =
	      requestR[194:192];
      3'h1: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd4;
      3'h2: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd3;
      3'h3: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 = 3'd2;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x0_1_THEN_re_ETC___d38 =
		   3'd0;
    endcase
  end
  always@(guard__h12331 or
	  x__h12346 or out_exp__h12770 or _theResult___exp__h12767)
  begin
    case (guard__h12331)
      2'b0, 2'b01:
	  CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10 =
	      x__h12346[7:0];
      2'b10:
	  CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10 =
	      out_exp__h12770;
      2'b11:
	  CASE_guard2331_0b0_x2346_BITS_7_TO_0_0b1_x2346_ETC__q10 =
	      _theResult___exp__h12767;
    endcase
  end
  always@(requestR or
	  x__h12346 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d485 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d483)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 =
	      x__h12346[7:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d485;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d483;
      default: CASE_requestR_BITS_194_TO_192_0x1_x2346_BITS_7_ETC__q11 = 8'd0;
    endcase
  end
  always@(guard__h12331 or
	  sfd___3__h11833 or out_sfd__h12771 or _theResult___sfd__h12768)
  begin
    case (guard__h12331)
      2'b0, 2'b01:
	  CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12 =
	      sfd___3__h11833[62:40];
      2'b10:
	  CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12 =
	      out_sfd__h12771;
      2'b11:
	  CASE_guard2331_0b0_sfd___31833_BITS_62_TO_40_0_ETC__q12 =
	      _theResult___sfd__h12768;
    endcase
  end
  always@(requestR or
	  sfd___3__h11833 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d520 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d518)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 =
	      sfd___3__h11833[62:40];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d520;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d518;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q13 =
		   23'd0;
    endcase
  end
  always@(guard__h11843 or
	  sfd___3__h11833 or out_sfd__h12260 or _theResult___sfd__h12257)
  begin
    case (guard__h11843)
      2'b0, 2'b01:
	  CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14 =
	      sfd___3__h11833[63:41];
      2'b10:
	  CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14 =
	      out_sfd__h12260;
      2'b11:
	  CASE_guard1843_0b0_sfd___31833_BITS_63_TO_41_0_ETC__q14 =
	      _theResult___sfd__h12257;
    endcase
  end
  always@(requestR or
	  sfd___3__h11833 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d505 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d503)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 =
	      sfd___3__h11833[63:41];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d505;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d503;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q15 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 =
	      requestR[191];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d417 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h11843 or requestR)
  begin
    case (guard__h11843)
      2'b0, 2'b01, 2'b10:
	  CASE_guard1843_0b0_requestR_BIT_191_0b1_reques_ETC__q16 =
	      requestR[191];
      2'd3:
	  CASE_guard1843_0b0_requestR_BIT_191_0b1_reques_ETC__q16 =
	      guard__h11843 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h12331 or requestR)
  begin
    case (guard__h12331)
      2'b0, 2'b01, 2'b10:
	  CASE_guard2331_0b0_requestR_BIT_191_0b1_reques_ETC__q17 =
	      requestR[191];
      2'd3:
	  CASE_guard2331_0b0_requestR_BIT_191_0b1_reques_ETC__q17 =
	      guard__h12331 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d460 or
	  guard__h11843 or _theResult___exp__h12256)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d460;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462 =
	      (guard__h11843 == 2'b0 || requestR[191]) ?
		8'd0 :
		_theResult___exp__h12256;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d462 =
		   8'd0;
    endcase
  end
  always@(guard__h11843 or out_exp__h12259 or _theResult___exp__h12256)
  begin
    case (guard__h11843)
      2'b0, 2'b01:
	  CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18 = 8'd0;
      2'b10:
	  CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18 =
	      out_exp__h12259;
      2'b11:
	  CASE_guard1843_0b0_0_0b1_0_0b10_out_exp2259_0b_ETC__q18 =
	      _theResult___exp__h12256;
    endcase
  end
  always@(requestR or x__h22850 or guard__h22835 or _theResult___exp__h23271)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949 =
	      x__h22850[7:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949 =
	      (guard__h22835 == 2'b0) ?
		x__h22850[7:0] :
		_theResult___exp__h23271;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d949 =
		   8'd0;
    endcase
  end
  always@(guard__h22835 or
	  x__h22850 or out_exp__h23274 or _theResult___exp__h23271)
  begin
    case (guard__h22835)
      2'b0, 2'b01:
	  CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23 =
	      x__h22850[7:0];
      2'b10:
	  CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23 =
	      out_exp__h23274;
      2'b11:
	  CASE_guard2835_0b0_x2850_BITS_7_TO_0_0b1_x2850_ETC__q23 =
	      _theResult___exp__h23271;
    endcase
  end
  always@(requestR or
	  sfd___3__h22341 or guard__h22835 or _theResult___sfd__h23272)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981 =
	      sfd___3__h22341[62:40];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981 =
	      (guard__h22835 == 2'b0) ?
		sfd___3__h22341[62:40] :
		_theResult___sfd__h23272;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d981 =
		   23'd0;
    endcase
  end
  always@(guard__h22835 or
	  sfd___3__h22341 or out_sfd__h23275 or _theResult___sfd__h23272)
  begin
    case (guard__h22835)
      2'b0, 2'b01:
	  CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24 =
	      sfd___3__h22341[62:40];
      2'b10:
	  CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24 =
	      out_sfd__h23275;
      2'b11:
	  CASE_guard2835_0b0_sfd___32341_BITS_62_TO_40_0_ETC__q24 =
	      _theResult___sfd__h23272;
    endcase
  end
  always@(guard__h22351 or out_exp__h22764 or _theResult___exp__h22761)
  begin
    case (guard__h22351)
      2'b0, 2'b01:
	  CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25 = 8'd0;
      2'b10:
	  CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25 =
	      out_exp__h22764;
      2'b11:
	  CASE_guard2351_0b0_0_0b1_0_0b10_out_exp2764_0b_ETC__q25 =
	      _theResult___exp__h22761;
    endcase
  end
  always@(requestR or
	  sfd___3__h22341 or guard__h22351 or _theResult___sfd__h22762)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969 =
	      sfd___3__h22341[63:41];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969 =
	      (guard__h22351 == 2'b0) ?
		sfd___3__h22341[63:41] :
		_theResult___sfd__h22762;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d969 =
		   23'd0;
    endcase
  end
  always@(guard__h22351 or
	  sfd___3__h22341 or out_sfd__h22765 or _theResult___sfd__h22762)
  begin
    case (guard__h22351)
      2'b0, 2'b01:
	  CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q26 =
	      sfd___3__h22341[63:41];
      2'b10:
	  CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q26 =
	      out_sfd__h22765;
      2'b11:
	  CASE_guard2351_0b0_sfd___32341_BITS_63_TO_41_0_ETC__q26 =
	      _theResult___sfd__h22762;
    endcase
  end
  always@(guard__h29149 or
	  x__h29164 or out_exp__h29588 or _theResult___exp__h29585)
  begin
    case (guard__h29149)
      2'b0, 2'b01:
	  CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29 =
	      x__h29164[7:0];
      2'b10:
	  CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29 =
	      out_exp__h29588;
      2'b11:
	  CASE_guard9149_0b0_x9164_BITS_7_TO_0_0b1_x9164_ETC__q29 =
	      _theResult___exp__h29585;
    endcase
  end
  always@(requestR or
	  x__h29164 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1304)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 =
	      x__h29164[7:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1306;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1304;
      default: CASE_requestR_BITS_194_TO_192_0x1_x9164_BITS_7_ETC__q30 = 8'd0;
    endcase
  end
  always@(guard__h28664 or
	  sfd___3__h28654 or out_sfd__h29078 or _theResult___sfd__h29075)
  begin
    case (guard__h28664)
      2'b0, 2'b01:
	  CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31 =
	      sfd___3__h28654[31:9];
      2'b10:
	  CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31 =
	      out_sfd__h29078;
      2'b11:
	  CASE_guard8664_0b0_sfd___38654_BITS_31_TO_9_0b_ETC__q31 =
	      _theResult___sfd__h29075;
    endcase
  end
  always@(requestR or
	  sfd___3__h28654 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1326 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1324)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 =
	      sfd___3__h28654[31:9];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1326;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1324;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q32 =
		   23'd0;
    endcase
  end
  always@(guard__h29149 or
	  sfd___3__h28654 or out_sfd__h29589 or _theResult___sfd__h29586)
  begin
    case (guard__h29149)
      2'b0, 2'b01:
	  CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33 =
	      sfd___3__h28654[30:8];
      2'b10:
	  CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33 =
	      out_sfd__h29589;
      2'b11:
	  CASE_guard9149_0b0_sfd___38654_BITS_30_TO_8_0b_ETC__q33 =
	      _theResult___sfd__h29586;
    endcase
  end
  always@(requestR or
	  sfd___3__h28654 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1341 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1339)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 =
	      sfd___3__h28654[30:8];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1341;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1339;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___38654__ETC__q34 =
		   23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 =
	      requestR[159];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d1238 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h28664 or requestR)
  begin
    case (guard__h28664)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8664_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      requestR[159];
      2'd3:
	  CASE_guard8664_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      guard__h28664 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h29149 or requestR)
  begin
    case (guard__h29149)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9149_0b0_requestR_BIT_159_0b1_reques_ETC__q36 =
	      requestR[159];
      2'd3:
	  CASE_guard9149_0b0_requestR_BIT_159_0b1_reques_ETC__q36 =
	      guard__h29149 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1281 or
	  guard__h28664 or _theResult___exp__h29074)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d1281;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283 =
	      (guard__h28664 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h29074;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1283 =
		   8'd0;
    endcase
  end
  always@(guard__h28664 or out_exp__h29077 or _theResult___exp__h29074)
  begin
    case (guard__h28664)
      2'b0, 2'b01:
	  CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37 = 8'd0;
      2'b10:
	  CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37 =
	      out_exp__h29077;
      2'b11:
	  CASE_guard8664_0b0_0_0b1_0_0b10_out_exp9077_0b_ETC__q37 =
	      _theResult___exp__h29074;
    endcase
  end
  always@(guard__h34721 or out_exp__h35134 or _theResult___exp__h35131)
  begin
    case (guard__h34721)
      2'b0, 2'b01:
	  CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40 = 8'd0;
      2'b10:
	  CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40 =
	      out_exp__h35134;
      2'b11:
	  CASE_guard4721_0b0_0_0b1_0_0b10_out_exp5134_0b_ETC__q40 =
	      _theResult___exp__h35131;
    endcase
  end
  always@(requestR or x__h35220 or guard__h35205 or _theResult___exp__h35641)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516 =
	      x__h35220[7:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516 =
	      (guard__h35205 == 2'b0) ?
		x__h35220[7:0] :
		_theResult___exp__h35641;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1516 =
		   8'd0;
    endcase
  end
  always@(guard__h35205 or
	  x__h35220 or out_exp__h35644 or _theResult___exp__h35641)
  begin
    case (guard__h35205)
      2'b0, 2'b01:
	  CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41 =
	      x__h35220[7:0];
      2'b10:
	  CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41 =
	      out_exp__h35644;
      2'b11:
	  CASE_guard5205_0b0_x5220_BITS_7_TO_0_0b1_x5220_ETC__q41 =
	      _theResult___exp__h35641;
    endcase
  end
  always@(requestR or
	  sfd___3__h34711 or guard__h35205 or _theResult___sfd__h35642)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548 =
	      sfd___3__h34711[30:8];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548 =
	      (guard__h35205 == 2'b0) ?
		sfd___3__h34711[30:8] :
		_theResult___sfd__h35642;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1548 =
		   23'd0;
    endcase
  end
  always@(guard__h35205 or
	  sfd___3__h34711 or out_sfd__h35645 or _theResult___sfd__h35642)
  begin
    case (guard__h35205)
      2'b0, 2'b01:
	  CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42 =
	      sfd___3__h34711[30:8];
      2'b10:
	  CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42 =
	      out_sfd__h35645;
      2'b11:
	  CASE_guard5205_0b0_sfd___34711_BITS_30_TO_8_0b_ETC__q42 =
	      _theResult___sfd__h35642;
    endcase
  end
  always@(requestR or
	  sfd___3__h34711 or guard__h34721 or _theResult___sfd__h35132)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536 =
	      sfd___3__h34711[31:9];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536 =
	      (guard__h34721 == 2'b0) ?
		sfd___3__h34711[31:9] :
		_theResult___sfd__h35132;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d1536 =
		   23'd0;
    endcase
  end
  always@(guard__h34721 or
	  sfd___3__h34711 or out_sfd__h35135 or _theResult___sfd__h35132)
  begin
    case (guard__h34721)
      2'b0, 2'b01:
	  CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43 =
	      sfd___3__h34711[31:9];
      2'b10:
	  CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43 =
	      out_sfd__h35135;
      2'b11:
	  CASE_guard4721_0b0_sfd___34711_BITS_31_TO_9_0b_ETC__q43 =
	      _theResult___sfd__h35132;
    endcase
  end
  always@(guard__h59619 or requestR)
  begin
    case (guard__h59619)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9619_0b0_requestR_BIT_159_0b1_reques_ETC__q50 =
	      requestR[159];
      2'd3:
	  CASE_guard9619_0b0_requestR_BIT_159_0b1_reques_ETC__q50 =
	      guard__h59619 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h60307 or requestR)
  begin
    case (guard__h60307)
      2'b0, 2'b01, 2'b10:
	  CASE_guard0307_0b0_requestR_BIT_159_0b1_reques_ETC__q51 =
	      requestR[159];
      2'd3:
	  CASE_guard0307_0b0_requestR_BIT_159_0b1_reques_ETC__q51 =
	      guard__h60307 == 2'b11 && requestR[159];
    endcase
  end
  always@(guard__h60307 or
	  x__h60322 or out_exp__h60949 or _theResult___exp__h60946)
  begin
    case (guard__h60307)
      2'b0, 2'b01:
	  CASE_guard0307_0b0_x0322_BITS_10_TO_0_0b1_x032_ETC__q52 =
	      x__h60322[10:0];
      2'b10:
	  CASE_guard0307_0b0_x0322_BITS_10_TO_0_0b1_x032_ETC__q52 =
	      out_exp__h60949;
      2'b11:
	  CASE_guard0307_0b0_x0322_BITS_10_TO_0_0b1_x032_ETC__q52 =
	      _theResult___exp__h60946;
    endcase
  end
  always@(requestR or
	  x__h60322 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2234 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2232)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x0322_BITS_1_ETC__q53 =
	      x__h60322[10:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x0322_BITS_1_ETC__q53 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2234;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x0322_BITS_1_ETC__q53 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2232;
      default: CASE_requestR_BITS_194_TO_192_0x1_x0322_BITS_1_ETC__q53 =
		   11'd0;
    endcase
  end
  always@(guard__h60307 or
	  sfd___3__h59609 or out_sfd__h60950 or _theResult___sfd__h60947)
  begin
    case (guard__h60307)
      2'b0, 2'b01:
	  CASE_guard0307_0b0_sfd___39609_BITS_53_TO_2_0b_ETC__q54 =
	      sfd___3__h59609[53:2];
      2'b10:
	  CASE_guard0307_0b0_sfd___39609_BITS_53_TO_2_0b_ETC__q54 =
	      out_sfd__h60950;
      2'b11:
	  CASE_guard0307_0b0_sfd___39609_BITS_53_TO_2_0b_ETC__q54 =
	      _theResult___sfd__h60947;
    endcase
  end
  always@(requestR or
	  sfd___3__h59609 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2269 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2267)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q55 =
	      sfd___3__h59609[53:2];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q55 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2269;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q55 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2267;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q55 =
		   52'd0;
    endcase
  end
  always@(guard__h59619 or
	  sfd___3__h59609 or out_sfd__h60236 or _theResult___sfd__h60233)
  begin
    case (guard__h59619)
      2'b0, 2'b01:
	  CASE_guard9619_0b0_sfd___39609_BITS_54_TO_3_0b_ETC__q56 =
	      sfd___3__h59609[54:3];
      2'b10:
	  CASE_guard9619_0b0_sfd___39609_BITS_54_TO_3_0b_ETC__q56 =
	      out_sfd__h60236;
      2'b11:
	  CASE_guard9619_0b0_sfd___39609_BITS_54_TO_3_0b_ETC__q56 =
	      _theResult___sfd__h60233;
    endcase
  end
  always@(requestR or
	  sfd___3__h59609 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2254 or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2252)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q57 =
	      sfd___3__h59609[54:3];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q57 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q57 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2252;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___39609__ETC__q57 =
		   52'd0;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2209 or
	  guard__h59619 or _theResult___exp__h60232)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2211 =
	      IF_IF_IF_requestR_BIT_159_6_THEN_NEG_requestR__ETC___d2209;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2211 =
	      (guard__h59619 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h60232;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2211 =
		   11'd0;
    endcase
  end
  always@(guard__h59619 or out_exp__h60235 or _theResult___exp__h60232)
  begin
    case (guard__h59619)
      2'b0, 2'b01:
	  CASE_guard9619_0b0_0_0b1_0_0b10_out_exp0235_0b_ETC__q58 = 11'd0;
      2'b10:
	  CASE_guard9619_0b0_0_0b1_0_0b10_out_exp0235_0b_ETC__q58 =
	      out_exp__h60235;
      2'b11:
	  CASE_guard9619_0b0_0_0b1_0_0b10_out_exp0235_0b_ETC__q58 =
	      _theResult___exp__h60232;
    endcase
  end
  always@(guard__h69201 or out_exp__h69817 or _theResult___exp__h69814)
  begin
    case (guard__h69201)
      2'b0, 2'b01:
	  CASE_guard9201_0b0_0_0b1_0_0b10_out_exp9817_0b_ETC__q61 = 11'd0;
      2'b10:
	  CASE_guard9201_0b0_0_0b1_0_0b10_out_exp9817_0b_ETC__q61 =
	      out_exp__h69817;
      2'b11:
	  CASE_guard9201_0b0_0_0b1_0_0b10_out_exp9817_0b_ETC__q61 =
	      _theResult___exp__h69814;
    endcase
  end
  always@(requestR or
	  sfd___3__h69191 or guard__h69888 or _theResult___sfd__h70528)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2439 =
	      sfd___3__h69191[53:2];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2439 =
	      (guard__h69888 == 2'b0) ?
		sfd___3__h69191[53:2] :
		_theResult___sfd__h70528;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2439 =
		   52'd0;
    endcase
  end
  always@(guard__h69888 or
	  sfd___3__h69191 or out_sfd__h70531 or _theResult___sfd__h70528)
  begin
    case (guard__h69888)
      2'b0, 2'b01:
	  CASE_guard9888_0b0_sfd___39191_BITS_53_TO_2_0b_ETC__q62 =
	      sfd___3__h69191[53:2];
      2'b10:
	  CASE_guard9888_0b0_sfd___39191_BITS_53_TO_2_0b_ETC__q62 =
	      out_sfd__h70531;
      2'b11:
	  CASE_guard9888_0b0_sfd___39191_BITS_53_TO_2_0b_ETC__q62 =
	      _theResult___sfd__h70528;
    endcase
  end
  always@(requestR or x__h69903 or guard__h69888 or _theResult___exp__h70527)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2408 =
	      x__h69903[10:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2408 =
	      (guard__h69888 == 2'b0) ?
		x__h69903[10:0] :
		_theResult___exp__h70527;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2408 =
		   11'd0;
    endcase
  end
  always@(guard__h69888 or
	  x__h69903 or out_exp__h70530 or _theResult___exp__h70527)
  begin
    case (guard__h69888)
      2'b0, 2'b01:
	  CASE_guard9888_0b0_x9903_BITS_10_TO_0_0b1_x990_ETC__q63 =
	      x__h69903[10:0];
      2'b10:
	  CASE_guard9888_0b0_x9903_BITS_10_TO_0_0b1_x990_ETC__q63 =
	      out_exp__h70530;
      2'b11:
	  CASE_guard9888_0b0_x9903_BITS_10_TO_0_0b1_x990_ETC__q63 =
	      _theResult___exp__h70527;
    endcase
  end
  always@(requestR or
	  sfd___3__h69191 or guard__h69201 or _theResult___sfd__h69815)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2427 =
	      sfd___3__h69191[54:3];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2427 =
	      (guard__h69201 == 2'b0) ?
		sfd___3__h69191[54:3] :
		_theResult___sfd__h69815;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2427 =
		   52'd0;
    endcase
  end
  always@(guard__h69201 or
	  sfd___3__h69191 or out_sfd__h69818 or _theResult___sfd__h69815)
  begin
    case (guard__h69201)
      2'b0, 2'b01:
	  CASE_guard9201_0b0_sfd___39191_BITS_54_TO_3_0b_ETC__q64 =
	      sfd___3__h69191[54:3];
      2'b10:
	  CASE_guard9201_0b0_sfd___39191_BITS_54_TO_3_0b_ETC__q64 =
	      out_sfd__h69818;
      2'b11:
	  CASE_guard9201_0b0_sfd___39191_BITS_54_TO_3_0b_ETC__q64 =
	      _theResult___sfd__h69815;
    endcase
  end
  always@(guard__h82827 or requestR)
  begin
    case (guard__h82827)
      2'b0, 2'b01, 2'b10:
	  CASE_guard2827_0b0_requestR_BIT_191_0b1_reques_ETC__q67 =
	      requestR[191];
      2'd3:
	  CASE_guard2827_0b0_requestR_BIT_191_0b1_reques_ETC__q67 =
	      guard__h82827 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h83515 or requestR)
  begin
    case (guard__h83515)
      2'b0, 2'b01, 2'b10:
	  CASE_guard3515_0b0_requestR_BIT_191_0b1_reques_ETC__q68 =
	      requestR[191];
      2'd3:
	  CASE_guard3515_0b0_requestR_BIT_191_0b1_reques_ETC__q68 =
	      guard__h83515 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h83515 or
	  x__h83530 or out_exp__h84157 or _theResult___exp__h84154)
  begin
    case (guard__h83515)
      2'b0, 2'b01:
	  CASE_guard3515_0b0_x3530_BITS_10_TO_0_0b1_x353_ETC__q69 =
	      x__h83530[10:0];
      2'b10:
	  CASE_guard3515_0b0_x3530_BITS_10_TO_0_0b1_x353_ETC__q69 =
	      out_exp__h84157;
      2'b11:
	  CASE_guard3515_0b0_x3530_BITS_10_TO_0_0b1_x353_ETC__q69 =
	      _theResult___exp__h84154;
    endcase
  end
  always@(requestR or
	  x__h83530 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2726 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2724)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_x3530_BITS_1_ETC__q70 =
	      x__h83530[10:0];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_x3530_BITS_1_ETC__q70 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2726;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_x3530_BITS_1_ETC__q70 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2724;
      default: CASE_requestR_BITS_194_TO_192_0x1_x3530_BITS_1_ETC__q70 =
		   11'd0;
    endcase
  end
  always@(guard__h82827 or
	  sfd___3__h11833 or out_sfd__h83444 or _theResult___sfd__h83441)
  begin
    case (guard__h82827)
      2'b0, 2'b01:
	  CASE_guard2827_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71 =
	      sfd___3__h11833[63:12];
      2'b10:
	  CASE_guard2827_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71 =
	      out_sfd__h83444;
      2'b11:
	  CASE_guard2827_0b0_sfd___31833_BITS_63_TO_12_0_ETC__q71 =
	      _theResult___sfd__h83441;
    endcase
  end
  always@(requestR or
	  sfd___3__h11833 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2746 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2744)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 =
	      sfd___3__h11833[63:12];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2746;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2744;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q72 =
		   52'd0;
    endcase
  end
  always@(guard__h83515 or
	  sfd___3__h11833 or out_sfd__h84158 or _theResult___sfd__h84155)
  begin
    case (guard__h83515)
      2'b0, 2'b01:
	  CASE_guard3515_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73 =
	      sfd___3__h11833[62:11];
      2'b10:
	  CASE_guard3515_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73 =
	      out_sfd__h84158;
      2'b11:
	  CASE_guard3515_0b0_sfd___31833_BITS_62_TO_11_0_ETC__q73 =
	      _theResult___sfd__h84155;
    endcase
  end
  always@(requestR or
	  sfd___3__h11833 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2761 or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2759)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 =
	      sfd___3__h11833[62:11];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2761;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2759;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfd___31833__ETC__q74 =
		   52'd0;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2701 or
	  guard__h82827 or _theResult___exp__h83440)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2703 =
	      IF_IF_IF_requestR_BIT_191_25_THEN_NEG_requestR_ETC___d2701;
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2703 =
	      (guard__h82827 == 2'b0 || requestR[191]) ?
		11'd0 :
		_theResult___exp__h83440;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2703 =
		   11'd0;
    endcase
  end
  always@(guard__h82827 or out_exp__h83443 or _theResult___exp__h83440)
  begin
    case (guard__h82827)
      2'b0, 2'b01:
	  CASE_guard2827_0b0_0_0b1_0_0b10_out_exp3443_0b_ETC__q75 = 11'd0;
      2'b10:
	  CASE_guard2827_0b0_0_0b1_0_0b10_out_exp3443_0b_ETC__q75 =
	      out_exp__h83443;
      2'b11:
	  CASE_guard2827_0b0_0_0b1_0_0b10_out_exp3443_0b_ETC__q75 =
	      _theResult___exp__h83440;
    endcase
  end
  always@(guard__h93725 or out_exp__h94341 or _theResult___exp__h94338)
  begin
    case (guard__h93725)
      2'b0, 2'b01:
	  CASE_guard3725_0b0_0_0b1_0_0b10_out_exp4341_0b_ETC__q76 = 11'd0;
      2'b10:
	  CASE_guard3725_0b0_0_0b1_0_0b10_out_exp4341_0b_ETC__q76 =
	      out_exp__h94341;
      2'b11:
	  CASE_guard3725_0b0_0_0b1_0_0b10_out_exp4341_0b_ETC__q76 =
	      _theResult___exp__h94338;
    endcase
  end
  always@(requestR or x__h94427 or guard__h94412 or _theResult___exp__h95051)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2869 =
	      x__h94427[10:0];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2869 =
	      (guard__h94412 == 2'b0) ?
		x__h94427[10:0] :
		_theResult___exp__h95051;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2869 =
		   11'd0;
    endcase
  end
  always@(guard__h94412 or
	  x__h94427 or out_exp__h95054 or _theResult___exp__h95051)
  begin
    case (guard__h94412)
      2'b0, 2'b01:
	  CASE_guard4412_0b0_x4427_BITS_10_TO_0_0b1_x442_ETC__q77 =
	      x__h94427[10:0];
      2'b10:
	  CASE_guard4412_0b0_x4427_BITS_10_TO_0_0b1_x442_ETC__q77 =
	      out_exp__h95054;
      2'b11:
	  CASE_guard4412_0b0_x4427_BITS_10_TO_0_0b1_x442_ETC__q77 =
	      _theResult___exp__h95051;
    endcase
  end
  always@(requestR or
	  sfd___3__h22341 or guard__h94412 or _theResult___sfd__h95052)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2901 =
	      sfd___3__h22341[62:11];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2901 =
	      (guard__h94412 == 2'b0) ?
		sfd___3__h22341[62:11] :
		_theResult___sfd__h95052;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2901 =
		   52'd0;
    endcase
  end
  always@(guard__h94412 or
	  sfd___3__h22341 or out_sfd__h95055 or _theResult___sfd__h95052)
  begin
    case (guard__h94412)
      2'b0, 2'b01:
	  CASE_guard4412_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78 =
	      sfd___3__h22341[62:11];
      2'b10:
	  CASE_guard4412_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78 =
	      out_sfd__h95055;
      2'b11:
	  CASE_guard4412_0b0_sfd___32341_BITS_62_TO_11_0_ETC__q78 =
	      _theResult___sfd__h95052;
    endcase
  end
  always@(requestR or
	  sfd___3__h22341 or guard__h93725 or _theResult___sfd__h94339)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2889 =
	      sfd___3__h22341[63:12];
      3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2889 =
	      (guard__h93725 == 2'b0) ?
		sfd___3__h22341[63:12] :
		_theResult___sfd__h94339;
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_THEN_IF_ETC___d2889 =
		   52'd0;
    endcase
  end
  always@(guard__h93725 or
	  sfd___3__h22341 or out_sfd__h94342 or _theResult___sfd__h94339)
  begin
    case (guard__h93725)
      2'b0, 2'b01:
	  CASE_guard3725_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79 =
	      sfd___3__h22341[63:12];
      2'b10:
	  CASE_guard3725_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79 =
	      out_sfd__h94342;
      2'b11:
	  CASE_guard3725_0b0_sfd___32341_BITS_63_TO_12_0_ETC__q79 =
	      _theResult___sfd__h94339;
    endcase
  end
  always@(guard__h110003 or
	  _theResult___fst_exp__h118100 or
	  out_exp__h118626 or _theResult___exp__h118623)
  begin
    case (guard__h110003)
      2'b0, 2'b01:
	  CASE_guard10003_0b0_theResult___fst_exp18100_0_ETC__q92 =
	      _theResult___fst_exp__h118100;
      2'b10:
	  CASE_guard10003_0b0_theResult___fst_exp18100_0_ETC__q92 =
	      out_exp__h118626;
      2'b11:
	  CASE_guard10003_0b0_theResult___fst_exp18100_0_ETC__q92 =
	      _theResult___exp__h118623;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h118100 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3851 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3849)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      _theResult___fst_exp__h118100;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3851;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3849;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q93 = 8'd0;
    endcase
  end
  always@(guard__h118696 or
	  _theResult___fst_exp__h126744 or
	  out_exp__h127196 or _theResult___exp__h127193)
  begin
    case (guard__h118696)
      2'b0, 2'b01:
	  CASE_guard18696_0b0_theResult___fst_exp26744_0_ETC__q94 =
	      _theResult___fst_exp__h126744;
      2'b10:
	  CASE_guard18696_0b0_theResult___fst_exp26744_0_ETC__q94 =
	      out_exp__h127196;
      2'b11:
	  CASE_guard18696_0b0_theResult___fst_exp26744_0_ETC__q94 =
	      _theResult___exp__h127193;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h126744 or
	  IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3879 or
	  IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3877)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q95 =
	      _theResult___fst_exp__h126744;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q95 =
	      IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3879;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q95 =
	      IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3877;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q95 = 8'd0;
    endcase
  end
  always@(guard__h127613 or
	  _theResult___fst_exp__h135839 or
	  out_exp__h136365 or _theResult___exp__h136362)
  begin
    case (guard__h127613)
      2'b0, 2'b01:
	  CASE_guard27613_0b0_theResult___fst_exp35839_0_ETC__q96 =
	      _theResult___fst_exp__h135839;
      2'b10:
	  CASE_guard27613_0b0_theResult___fst_exp35839_0_ETC__q96 =
	      out_exp__h136365;
      2'b11:
	  CASE_guard27613_0b0_theResult___fst_exp35839_0_ETC__q96 =
	      _theResult___exp__h136362;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h135839 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3915 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3913)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q97 =
	      _theResult___fst_exp__h135839;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q97 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3915;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q97 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d3913;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q97 = 8'd0;
    endcase
  end
  always@(guard__h136435 or
	  _theResult___fst_exp__h144512 or
	  out_exp__h144989 or _theResult___exp__h144986)
  begin
    case (guard__h136435)
      2'b0, 2'b01:
	  CASE_guard36435_0b0_theResult___fst_exp44512_0_ETC__q98 =
	      _theResult___fst_exp__h144512;
      2'b10:
	  CASE_guard36435_0b0_theResult___fst_exp44512_0_ETC__q98 =
	      out_exp__h144989;
      2'b11:
	  CASE_guard36435_0b0_theResult___fst_exp44512_0_ETC__q98 =
	      _theResult___exp__h144986;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h144512 or
	  IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3943 or
	  IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3941)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 =
	      _theResult___fst_exp__h144512;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 =
	      IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3943;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 =
	      IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3941;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q99 = 8'd0;
    endcase
  end
  always@(guard__h110003 or
	  sfdin__h118094 or out_sfd__h118627 or _theResult___sfd__h118624)
  begin
    case (guard__h110003)
      2'b0, 2'b01:
	  CASE_guard10003_0b0_sfdin18094_BITS_56_TO_34_0_ETC__q100 =
	      sfdin__h118094[56:34];
      2'b10:
	  CASE_guard10003_0b0_sfdin18094_BITS_56_TO_34_0_ETC__q100 =
	      out_sfd__h118627;
      2'b11:
	  CASE_guard10003_0b0_sfdin18094_BITS_56_TO_34_0_ETC__q100 =
	      _theResult___sfd__h118624;
    endcase
  end
  always@(requestR or
	  sfdin__h118094 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3971 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3969)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin18094_B_ETC__q101 =
	      sfdin__h118094[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin18094_B_ETC__q101 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3971;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin18094_B_ETC__q101 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_BITS_190_T_ETC___d3969;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin18094_B_ETC__q101 =
		   23'd0;
    endcase
  end
  always@(guard__h118696 or
	  _theResult___snd__h126695 or
	  out_sfd__h127197 or _theResult___sfd__h127194)
  begin
    case (guard__h118696)
      2'b0, 2'b01:
	  CASE_guard18696_0b0_theResult___snd26695_BITS__ETC__q102 =
	      _theResult___snd__h126695[56:34];
      2'b10:
	  CASE_guard18696_0b0_theResult___snd26695_BITS__ETC__q102 =
	      out_sfd__h127197;
      2'b11:
	  CASE_guard18696_0b0_theResult___snd26695_BITS__ETC__q102 =
	      _theResult___sfd__h127194;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h126695 or
	  IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3987 or
	  IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3985)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 =
	      _theResult___snd__h126695[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 =
	      IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3987;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 =
	      IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d3985;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q103 =
		   23'd0;
    endcase
  end
  always@(guard__h127613 or
	  sfdin__h135833 or out_sfd__h136366 or _theResult___sfd__h136363)
  begin
    case (guard__h127613)
      2'b0, 2'b01:
	  CASE_guard27613_0b0_sfdin35833_BITS_56_TO_34_0_ETC__q104 =
	      sfdin__h135833[56:34];
      2'b10:
	  CASE_guard27613_0b0_sfdin35833_BITS_56_TO_34_0_ETC__q104 =
	      out_sfd__h136366;
      2'b11:
	  CASE_guard27613_0b0_sfdin35833_BITS_56_TO_34_0_ETC__q104 =
	      _theResult___sfd__h136363;
    endcase
  end
  always@(requestR or
	  sfdin__h135833 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4011 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4009)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin35833_B_ETC__q105 =
	      sfdin__h135833[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin35833_B_ETC__q105 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4011;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin35833_B_ETC__q105 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_BITS_190__ETC___d4009;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin35833_B_ETC__q105 =
		   23'd0;
    endcase
  end
  always@(guard__h136435 or
	  _theResult___snd__h144458 or
	  out_sfd__h144990 or _theResult___sfd__h144987)
  begin
    case (guard__h136435)
      2'b0, 2'b01:
	  CASE_guard36435_0b0_theResult___snd44458_BITS__ETC__q106 =
	      _theResult___snd__h144458[56:34];
      2'b10:
	  CASE_guard36435_0b0_theResult___snd44458_BITS__ETC__q106 =
	      out_sfd__h144990;
      2'b11:
	  CASE_guard36435_0b0_theResult___snd44458_BITS__ETC__q106 =
	      _theResult___sfd__h144987;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h144458 or
	  IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d4027 or
	  IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d4025)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 =
	      _theResult___snd__h144458[56:34];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 =
	      IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d4027;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 =
	      IF_IF_IF_requestR_BITS_190_TO_180_472_EQ_0_480_ETC___d4025;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q107 =
		   23'd0;
    endcase
  end
  always@(guard__h110003 or requestR)
  begin
    case (guard__h110003)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10003_0b0_requestR_BIT_191_0b1_reque_ETC__q108 =
	      requestR[191];
      2'd3:
	  CASE_guard10003_0b0_requestR_BIT_191_0b1_reque_ETC__q108 =
	      guard__h110003 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h118696 or requestR)
  begin
    case (guard__h118696)
      2'b0, 2'b01, 2'b10:
	  CASE_guard18696_0b0_requestR_BIT_191_0b1_reque_ETC__q109 =
	      requestR[191];
      2'd3:
	  CASE_guard18696_0b0_requestR_BIT_191_0b1_reque_ETC__q109 =
	      guard__h118696 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h127613 or requestR)
  begin
    case (guard__h127613)
      2'b0, 2'b01, 2'b10:
	  CASE_guard27613_0b0_requestR_BIT_191_0b1_reque_ETC__q110 =
	      requestR[191];
      2'd3:
	  CASE_guard27613_0b0_requestR_BIT_191_0b1_reque_ETC__q110 =
	      guard__h127613 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h136435 or requestR)
  begin
    case (guard__h136435)
      2'b0, 2'b01, 2'b10:
	  CASE_guard36435_0b0_requestR_BIT_191_0b1_reque_ETC__q111 =
	      requestR[191];
      2'd3:
	  CASE_guard36435_0b0_requestR_BIT_191_0b1_reque_ETC__q111 =
	      guard__h136435 == 2'b11 && requestR[191];
    endcase
  end
  always@(guard__h159207 or
	  _theResult___fst_exp__h167168 or
	  out_exp__h167823 or _theResult___exp__h167820)
  begin
    case (guard__h159207)
      2'b0, 2'b01:
	  CASE_guard59207_0b0_theResult___fst_exp67168_0_ETC__q120 =
	      _theResult___fst_exp__h167168;
      2'b10:
	  CASE_guard59207_0b0_theResult___fst_exp67168_0_ETC__q120 =
	      out_exp__h167823;
      2'b11:
	  CASE_guard59207_0b0_theResult___fst_exp67168_0_ETC__q120 =
	      _theResult___exp__h167820;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h167168 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4668 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4666)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q121 =
	      _theResult___fst_exp__h167168;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q121 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4668;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q121 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4666;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q121 =
		   11'd0;
    endcase
  end
  always@(guard__h168443 or
	  _theResult___fst_exp__h176669 or
	  out_exp__h177398 or _theResult___exp__h177395)
  begin
    case (guard__h168443)
      2'b0, 2'b01:
	  CASE_guard68443_0b0_theResult___fst_exp76669_0_ETC__q122 =
	      _theResult___fst_exp__h176669;
      2'b10:
	  CASE_guard68443_0b0_theResult___fst_exp76669_0_ETC__q122 =
	      out_exp__h177398;
      2'b11:
	  CASE_guard68443_0b0_theResult___fst_exp76669_0_ETC__q122 =
	      _theResult___exp__h177395;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h176669 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4704 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4702)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q123 =
	      _theResult___fst_exp__h176669;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q123 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4704;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q123 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4702;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q123 =
		   11'd0;
    endcase
  end
  always@(guard__h177468 or
	  _theResult___fst_exp__h185458 or
	  out_exp__h186138 or _theResult___exp__h186135)
  begin
    case (guard__h177468)
      2'b0, 2'b01:
	  CASE_guard77468_0b0_theResult___fst_exp85458_0_ETC__q124 =
	      _theResult___fst_exp__h185458;
      2'b10:
	  CASE_guard77468_0b0_theResult___fst_exp85458_0_ETC__q124 =
	      out_exp__h186138;
      2'b11:
	  CASE_guard77468_0b0_theResult___fst_exp85458_0_ETC__q124 =
	      _theResult___exp__h186135;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h185458 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4732 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4730)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 =
	      _theResult___fst_exp__h185458;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4732;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4730;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q125 =
		   11'd0;
    endcase
  end
  always@(guard__h159207 or
	  _theResult___snd__h167119 or
	  out_sfd__h167824 or _theResult___sfd__h167821)
  begin
    case (guard__h159207)
      2'b0, 2'b01:
	  CASE_guard59207_0b0_theResult___snd67119_BITS__ETC__q126 =
	      _theResult___snd__h167119[56:5];
      2'b10:
	  CASE_guard59207_0b0_theResult___snd67119_BITS__ETC__q126 =
	      out_sfd__h167824;
      2'b11:
	  CASE_guard59207_0b0_theResult___snd67119_BITS__ETC__q126 =
	      _theResult___sfd__h167821;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h167119 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4759 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4757)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 =
	      _theResult___snd__h167119[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4759;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4757;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q127 =
		   52'd0;
    endcase
  end
  always@(guard__h168443 or
	  sfdin__h176663 or out_sfd__h177399 or _theResult___sfd__h177396)
  begin
    case (guard__h168443)
      2'b0, 2'b01:
	  CASE_guard68443_0b0_sfdin76663_BITS_56_TO_5_0b_ETC__q128 =
	      sfdin__h176663[56:5];
      2'b10:
	  CASE_guard68443_0b0_sfdin76663_BITS_56_TO_5_0b_ETC__q128 =
	      out_sfd__h177399;
      2'b11:
	  CASE_guard68443_0b0_sfdin76663_BITS_56_TO_5_0b_ETC__q128 =
	      _theResult___sfd__h177396;
    endcase
  end
  always@(requestR or
	  sfdin__h176663 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4783 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4781)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin76663_B_ETC__q129 =
	      sfdin__h176663[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin76663_B_ETC__q129 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4783;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_sfdin76663_B_ETC__q129 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_BITS_1_ETC___d4781;
      default: CASE_requestR_BITS_194_TO_192_0x1_sfdin76663_B_ETC__q129 =
		   52'd0;
    endcase
  end
  always@(guard__h177468 or
	  _theResult___snd__h185404 or
	  out_sfd__h186139 or _theResult___sfd__h186136)
  begin
    case (guard__h177468)
      2'b0, 2'b01:
	  CASE_guard77468_0b0_theResult___snd85404_BITS__ETC__q130 =
	      _theResult___snd__h185404[56:5];
      2'b10:
	  CASE_guard77468_0b0_theResult___snd85404_BITS__ETC__q130 =
	      out_sfd__h186139;
      2'b11:
	  CASE_guard77468_0b0_theResult___snd85404_BITS__ETC__q130 =
	      _theResult___sfd__h186136;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h185404 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4799 or
	  IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4797)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 =
	      _theResult___snd__h185404[56:5];
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4799;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 =
	      IF_IF_IF_IF_requestR_BITS_191_TO_160_4_EQ_0xFF_ETC___d4797;
      default: CASE_requestR_BITS_194_TO_192_0x1_theResult____ETC__q131 =
		   52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4309 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      default: IF_requestR_BITS_194_TO_192_0_EQ_0x3_4_OR_requ_ETC___d4309 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h159207 or requestR)
  begin
    case (guard__h159207)
      2'b0, 2'b01, 2'b10:
	  CASE_guard59207_0b0_requestR_BITS_191_TO_160_E_ETC__q132 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard59207_0b0_requestR_BITS_191_TO_160_E_ETC__q132 =
	      guard__h159207 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(guard__h168443 or requestR)
  begin
    case (guard__h168443)
      2'b0, 2'b01, 2'b10:
	  CASE_guard68443_0b0_requestR_BITS_191_TO_160_E_ETC__q133 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard68443_0b0_requestR_BITS_191_TO_160_E_ETC__q133 =
	      guard__h168443 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(guard__h177468 or requestR)
  begin
    case (guard__h177468)
      2'b0, 2'b01, 2'b10:
	  CASE_guard77468_0b0_requestR_BITS_191_TO_160_E_ETC__q134 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard77468_0b0_requestR_BITS_191_TO_160_E_ETC__q134 =
	      guard__h177468 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	requestR <= `BSV_ASSIGNMENT_DELAY
	    215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	resultR <= `BSV_ASSIGNMENT_DELAY 70'h0AAAAAAAAAAAAAAAAA;
	stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
	if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
	if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkRISCV_FBox

